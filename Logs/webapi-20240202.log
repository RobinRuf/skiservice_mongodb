[2024-02-02 03:21:46.120 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 03:21:46.447 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 03:21:46.447 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 03:21:46.450 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 03:21:46.450 +01:00  INF]  Hosting environment: Development
[2024-02-02 03:21:46.450 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 03:21:48.113 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger - -
[2024-02-02 03:21:48.669 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger - - - 301 0 - 564.7488ms
[2024-02-02 03:21:48.693 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 03:21:48.925 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 231.8946ms
[2024-02-02 03:21:48.930 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/swagger-ui.css - -
[2024-02-02 03:21:48.931 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 03:21:48.931 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/swagger-ui-bundle.js - -
[2024-02-02 03:21:48.931 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/swagger-ui-standalone-preset.js - -
[2024-02-02 03:21:48.933 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 03:21:48.963 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 31.5898ms
[2024-02-02 03:21:49.092 +01:00  INF]  Sending file. Request path: '/swagger-ui.css'. Physical path: 'N/A'
[2024-02-02 03:21:49.092 +01:00  INF]  Sending file. Request path: '/swagger-ui-standalone-preset.js'. Physical path: 'N/A'
[2024-02-02 03:21:49.093 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/swagger-ui.css - - - 200 144929 text/css 162.8364ms
[2024-02-02 03:21:49.096 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/swagger-ui-standalone-preset.js - - - 200 312163 text/javascript 163.5686ms
[2024-02-02 03:21:49.132 +01:00  INF]  Sending file. Request path: '/swagger-ui-bundle.js'. Physical path: 'N/A'
[2024-02-02 03:21:49.133 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/swagger-ui-bundle.js - - - 200 1061536 text/javascript 201.4026ms
[2024-02-02 03:21:49.173 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 240.2577ms
[2024-02-02 03:21:49.616 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 03:21:49.660 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/favicon-32x32.png - -
[2024-02-02 03:21:49.662 +01:00  INF]  Sending file. Request path: '/favicon-32x32.png'. Physical path: 'N/A'
[2024-02-02 03:21:49.662 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/favicon-32x32.png - - - 200 628 image/png 2.5219ms
[2024-02-02 03:21:49.825 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 209.8679ms
[2024-02-02 03:24:04.897 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 03:24:05.250 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 03:24:05.250 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 03:24:05.252 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 03:24:05.252 +01:00  INF]  Hosting environment: Development
[2024-02-02 03:24:05.252 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 03:24:07.862 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 03:24:09.177 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 03:24:09.177 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 03:24:09.212 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 26.9790ms
[2024-02-02 03:24:09.212 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 1362.9562ms
[2024-02-02 03:24:09.314 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 136.7883ms
[2024-02-02 03:24:09.890 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 03:24:10.408 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 518.2598ms
[2024-02-02 03:25:33.588 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests - -
[2024-02-02 03:25:35.334 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi)'
[2024-02-02 03:25:35.385 +01:00  INF]  Route matched with {action = "GetAllServiceRequests", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceRequests() on controller JetstreamApi.Controllers.ServiceRequestsController (JetstreamApi).
[2024-02-02 03:25:35.715 +01:00  INF]  Executing action method JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi) - Validation state: "Valid"
[2024-02-02 03:25:37.037 +01:00  INF]  Executed action method JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1305.7676ms.
[2024-02-02 03:25:37.054 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[JetstreamApi.DTO.ServiceRequestDTO, JetstreamApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 03:25:37.109 +01:00  INF]  Executed action JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi) in 1717.4958ms
[2024-02-02 03:25:37.111 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi)'
[2024-02-02 03:25:37.114 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests - - - 200 - application/json;+charset=utf-8 3526.3256ms
[2024-02-02 03:26:03.482 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484b/cancel - 0
[2024-02-02 03:26:03.515 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 03:26:03.527 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 03:26:03.536 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484b/cancel - 0 - 401 - application/json;+charset=utf-8 54.1469ms
[2024-02-02 03:26:24.351 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 51
[2024-02-02 03:26:24.368 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.UsersController.Login (JetstreamApi)'
[2024-02-02 03:26:24.399 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(JetstreamApi.DTO.UserLoginDTO) on controller JetstreamApi.Controllers.UsersController (JetstreamApi).
[2024-02-02 03:26:24.535 +01:00  INF]  Executing action method JetstreamApi.Controllers.UsersController.Login (JetstreamApi) - Validation state: "Valid"
[2024-02-02 03:26:24.723 +01:00  INF]  Executed action method JetstreamApi.Controllers.UsersController.Login (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 187.5015ms.
[2024-02-02 03:26:24.724 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 03:26:24.734 +01:00  INF]  Executed action JetstreamApi.Controllers.UsersController.Login (JetstreamApi) in 334.6768ms
[2024-02-02 03:26:24.734 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.UsersController.Login (JetstreamApi)'
[2024-02-02 03:26:24.734 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 51 - 200 - application/json;+charset=utf-8 383.8793ms
[2024-02-02 03:26:55.381 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484b/cancel - 0
[2024-02-02 03:26:55.474 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi)'
[2024-02-02 03:26:55.485 +01:00  INF]  Route matched with {action = "CancelServiceRequest", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceRequest(System.String) on controller JetstreamApi.Controllers.ServiceRequestsController (JetstreamApi).
[2024-02-02 03:26:55.512 +01:00  INF]  Executing action method JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi) - Validation state: "Valid"
[2024-02-02 03:26:55.861 +01:00  INF]  Executed action method JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkResult in 349.379ms.
[2024-02-02 03:26:55.869 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 03:26:55.870 +01:00  INF]  Executed action JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi) in 384.9384ms
[2024-02-02 03:26:55.870 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi)'
[2024-02-02 03:26:55.871 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484b/cancel - 0 - 200 0 - 490.1531ms
[2024-02-02 03:27:05.499 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests - -
[2024-02-02 03:27:05.553 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi)'
[2024-02-02 03:27:05.553 +01:00  INF]  Route matched with {action = "GetAllServiceRequests", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceRequests() on controller JetstreamApi.Controllers.ServiceRequestsController (JetstreamApi).
[2024-02-02 03:27:05.583 +01:00  INF]  Executing action method JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi) - Validation state: "Valid"
[2024-02-02 03:27:06.666 +01:00  INF]  Executed action method JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1083.4054ms.
[2024-02-02 03:27:06.667 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[JetstreamApi.DTO.ServiceRequestDTO, JetstreamApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 03:27:06.667 +01:00  INF]  Executed action JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi) in 1113.679ms
[2024-02-02 03:27:06.667 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi)'
[2024-02-02 03:27:06.668 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests - - - 200 - application/json;+charset=utf-8 1169.3194ms
[2024-02-02 09:02:56.902 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 09:02:57.345 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 09:02:57.345 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 09:02:57.346 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 09:02:57.346 +01:00  INF]  Hosting environment: Development
[2024-02-02 09:02:57.347 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 09:02:59.469 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 09:02:59.753 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 285.7670ms
[2024-02-02 09:02:59.763 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 09:02:59.763 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 09:02:59.810 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13760 application/javascript;+charset=utf-8 47.1194ms
[2024-02-02 09:02:59.957 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 194.3788ms
[2024-02-02 09:03:00.138 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 09:03:00.248 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 110.4671ms
[2024-02-02 09:03:08.124 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests - -
[2024-02-02 09:03:09.047 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi)'
[2024-02-02 09:03:09.063 +01:00  INF]  Route matched with {action = "GetAllServiceRequests", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceRequests() on controller JetstreamApi.Controllers.ServiceRequestsController (JetstreamApi).
[2024-02-02 09:03:09.220 +01:00  INF]  Executing action method JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi) - Validation state: "Valid"
[2024-02-02 09:03:09.992 +01:00  INF]  Executed action method JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 769.2416ms.
[2024-02-02 09:03:09.997 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[JetstreamApi.DTO.ServiceRequestDTO, JetstreamApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 09:03:10.014 +01:00  INF]  Executed action JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi) in 947.6163ms
[2024-02-02 09:03:10.014 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi)'
[2024-02-02 09:03:10.015 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests - - - 200 - application/json;+charset=utf-8 1890.8898ms
[2024-02-02 09:03:27.336 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 51
[2024-02-02 09:03:27.339 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.UsersController.Login (JetstreamApi)'
[2024-02-02 09:03:27.349 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(JetstreamApi.DTO.UserLoginDTO) on controller JetstreamApi.Controllers.UsersController (JetstreamApi).
[2024-02-02 09:03:27.423 +01:00  INF]  Executing action method JetstreamApi.Controllers.UsersController.Login (JetstreamApi) - Validation state: "Valid"
[2024-02-02 09:03:27.571 +01:00  INF]  Executed action method JetstreamApi.Controllers.UsersController.Login (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 147.142ms.
[2024-02-02 09:03:27.571 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 09:03:27.574 +01:00  INF]  Executed action JetstreamApi.Controllers.UsersController.Login (JetstreamApi) in 224.0168ms
[2024-02-02 09:03:27.574 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.UsersController.Login (JetstreamApi)'
[2024-02-02 09:03:27.574 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 51 - 200 - application/json;+charset=utf-8 237.9733ms
[2024-02-02 09:04:32.011 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484b - -
[2024-02-02 09:04:32.015 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetServiceRequestById (JetstreamApi)'
[2024-02-02 09:04:32.021 +01:00  INF]  Route matched with {action = "GetServiceRequestById", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceRequestById(System.String) on controller JetstreamApi.Controllers.ServiceRequestsController (JetstreamApi).
[2024-02-02 09:04:32.037 +01:00  INF]  Executing action method JetstreamApi.Controllers.ServiceRequestsController.GetServiceRequestById (JetstreamApi) - Validation state: "Valid"
[2024-02-02 09:04:32.169 +01:00  INF]  Executed action method JetstreamApi.Controllers.ServiceRequestsController.GetServiceRequestById (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 131.2487ms.
[2024-02-02 09:04:32.169 +01:00  INF]  Executing OkObjectResult, writing value of type 'JetstreamApi.DTO.ServiceRequestDTO'.
[2024-02-02 09:04:32.169 +01:00  INF]  Executed action JetstreamApi.Controllers.ServiceRequestsController.GetServiceRequestById (JetstreamApi) in 147.6414ms
[2024-02-02 09:04:32.169 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetServiceRequestById (JetstreamApi)'
[2024-02-02 09:04:32.169 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484b - - - 200 - application/json;+charset=utf-8 158.7424ms
[2024-02-02 09:05:02.368 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484b/cancel - 0
[2024-02-02 09:05:02.375 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 09:05:02.380 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 09:05:02.383 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484b/cancel - 0 - 401 - application/json;+charset=utf-8 14.4075ms
[2024-02-02 09:05:22.286 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484b/cancel - 0
[2024-02-02 09:05:22.318 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi)'
[2024-02-02 09:05:22.320 +01:00  INF]  Route matched with {action = "CancelServiceRequest", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceRequest(System.String) on controller JetstreamApi.Controllers.ServiceRequestsController (JetstreamApi).
[2024-02-02 09:05:22.334 +01:00  INF]  Executing action method JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi) - Validation state: "Valid"
[2024-02-02 09:05:22.559 +01:00  INF]  Executed action method JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkResult in 225.0005ms.
[2024-02-02 09:05:22.561 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 09:05:22.561 +01:00  INF]  Executed action JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi) in 240.9172ms
[2024-02-02 09:05:22.561 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi)'
[2024-02-02 09:05:22.562 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484b/cancel - 0 - 200 0 - 275.6709ms
[2024-02-02 09:05:45.248 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests - -
[2024-02-02 09:05:45.249 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi)'
[2024-02-02 09:05:45.249 +01:00  INF]  Route matched with {action = "GetAllServiceRequests", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceRequests() on controller JetstreamApi.Controllers.ServiceRequestsController (JetstreamApi).
[2024-02-02 09:05:45.266 +01:00  INF]  Executing action method JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi) - Validation state: "Valid"
[2024-02-02 09:05:46.146 +01:00  INF]  Executed action method JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 879.7933ms.
[2024-02-02 09:05:46.146 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[JetstreamApi.DTO.ServiceRequestDTO, JetstreamApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 09:05:46.146 +01:00  INF]  Executed action JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi) in 896.622ms
[2024-02-02 09:05:46.146 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi)'
[2024-02-02 09:05:46.146 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests - - - 200 - application/json;+charset=utf-8 898.0951ms
[2024-02-02 09:06:07.141 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484c/cancel - 0
[2024-02-02 09:06:07.149 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi)'
[2024-02-02 09:06:07.152 +01:00  INF]  Route matched with {action = "CancelServiceRequest", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceRequest(System.String) on controller JetstreamApi.Controllers.ServiceRequestsController (JetstreamApi).
[2024-02-02 09:06:07.168 +01:00  INF]  Executing action method JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi) - Validation state: "Valid"
[2024-02-02 09:06:07.342 +01:00  INF]  Executed action method JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkResult in 173.382ms.
[2024-02-02 09:06:07.342 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 09:06:07.343 +01:00  INF]  Executed action JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi) in 190.3295ms
[2024-02-02 09:06:07.343 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.ServiceRequestsController.CancelServiceRequest (JetstreamApi)'
[2024-02-02 09:06:07.343 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484c/cancel - 0 - 200 0 - 201.8180ms
[2024-02-02 09:06:11.394 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests - -
[2024-02-02 09:06:11.394 +01:00  INF]  Executing endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi)'
[2024-02-02 09:06:11.395 +01:00  INF]  Route matched with {action = "GetAllServiceRequests", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceRequests() on controller JetstreamApi.Controllers.ServiceRequestsController (JetstreamApi).
[2024-02-02 09:06:11.416 +01:00  INF]  Executing action method JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi) - Validation state: "Valid"
[2024-02-02 09:06:12.056 +01:00  INF]  Executed action method JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 639.6722ms.
[2024-02-02 09:06:12.056 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[JetstreamApi.DTO.ServiceRequestDTO, JetstreamApi, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 09:06:12.056 +01:00  INF]  Executed action JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi) in 661.6744ms
[2024-02-02 09:06:12.056 +01:00  INF]  Executed endpoint 'JetstreamApi.Controllers.ServiceRequestsController.GetAllServiceRequests (JetstreamApi)'
[2024-02-02 09:06:12.056 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests - - - 200 - application/json;+charset=utf-8 662.4518ms
[2024-02-02 09:12:32.191 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 09:12:32.421 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 09:12:32.422 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 09:12:32.423 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 09:12:32.424 +01:00  INF]  Hosting environment: Development
[2024-02-02 09:12:32.424 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 09:12:35.033 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 09:12:35.538 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 509.0110ms
[2024-02-02 09:12:35.549 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 09:12:35.549 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 09:12:35.562 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 12.3578ms
[2024-02-02 09:12:35.678 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 128.3810ms
[2024-02-02 09:12:35.897 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 09:12:36.157 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 260.1455ms
[2024-02-02 09:12:44.651 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests - -
[2024-02-02 09:12:44.819 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice)'
[2024-02-02 09:12:44.837 +01:00  INF]  Route matched with {action = "GetAllServiceRequests", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceRequests() on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:12:44.983 +01:00  INF]  Executing action method skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice) - Validation state: "Valid"
[2024-02-02 09:12:45.868 +01:00  INF]  Executed action method skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 881.3366ms.
[2024-02-02 09:12:45.874 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.DTO.ServiceRequestDTO, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 09:12:45.893 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice) in 1051.8877ms
[2024-02-02 09:12:45.893 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice)'
[2024-02-02 09:12:45.894 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests - - - 200 - application/json;+charset=utf-8 1242.8799ms
[2024-02-02 09:13:16.092 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 51
[2024-02-02 09:13:16.095 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 09:13:16.105 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.DTO.UserLoginDTO) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 09:13:16.147 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 09:13:16.245 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 97.7154ms.
[2024-02-02 09:13:16.246 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 09:13:16.250 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 144.4663ms
[2024-02-02 09:13:16.250 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 09:13:16.250 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 51 - 200 - application/json;+charset=utf-8 158.0785ms
[2024-02-02 09:13:44.579 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484d/cancel - 0
[2024-02-02 09:13:44.633 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.CancelServiceRequest (skiservice)'
[2024-02-02 09:13:44.636 +01:00  INF]  Route matched with {action = "CancelServiceRequest", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceRequest(System.String) on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:13:44.649 +01:00  INF]  Executing action method skiservice.Controllers.ServiceRequestsController.CancelServiceRequest (skiservice) - Validation state: "Valid"
[2024-02-02 09:13:44.835 +01:00  INF]  Executed action method skiservice.Controllers.ServiceRequestsController.CancelServiceRequest (skiservice), returned result Microsoft.AspNetCore.Mvc.OkResult in 185.0761ms.
[2024-02-02 09:13:44.839 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 09:13:44.839 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.CancelServiceRequest (skiservice) in 202.7154ms
[2024-02-02 09:13:44.839 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.CancelServiceRequest (skiservice)'
[2024-02-02 09:13:44.840 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484d/cancel - 0 - 200 0 - 261.1285ms
[2024-02-02 09:13:48.774 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests - -
[2024-02-02 09:13:48.776 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice)'
[2024-02-02 09:13:48.776 +01:00  INF]  Route matched with {action = "GetAllServiceRequests", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceRequests() on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:13:48.800 +01:00  INF]  Executing action method skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice) - Validation state: "Valid"
[2024-02-02 09:13:49.880 +01:00  INF]  Executed action method skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1079.4613ms.
[2024-02-02 09:13:49.880 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.DTO.ServiceRequestDTO, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 09:13:49.880 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice) in 1104.3577ms
[2024-02-02 09:13:49.880 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice)'
[2024-02-02 09:13:49.881 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests - - - 200 - application/json;+charset=utf-8 1106.1557ms
[2024-02-02 09:14:39.904 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 09:14:40.102 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 09:14:40.103 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 09:14:40.103 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 09:14:40.104 +01:00  INF]  Hosting environment: Development
[2024-02-02 09:14:40.104 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 09:14:43.702 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 09:14:43.945 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 242.9908ms
[2024-02-02 09:14:43.948 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 09:14:43.951 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 09:14:43.955 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 6.4158ms
[2024-02-02 09:14:43.998 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 47.6646ms
[2024-02-02 09:14:44.162 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 09:14:44.327 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 165.9296ms
[2024-02-02 09:14:51.693 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests - -
[2024-02-02 09:14:51.863 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice)'
[2024-02-02 09:14:51.897 +01:00  INF]  Route matched with {action = "GetAllServiceRequests", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceRequests() on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:14:52.201 +01:00  INF]  Executing action method skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice) - Validation state: "Valid"
[2024-02-02 09:14:53.380 +01:00  INF]  Executed action method skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1170.7907ms.
[2024-02-02 09:14:53.395 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.DTO.ServiceRequestDTO, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 09:14:53.437 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice) in 1532.6638ms
[2024-02-02 09:14:53.438 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice)'
[2024-02-02 09:14:53.440 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests - - - 200 - application/json;+charset=utf-8 1746.4498ms
[2024-02-02 09:17:39.224 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 09:17:39.414 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 09:17:39.414 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 09:17:39.415 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 09:17:39.415 +01:00  INF]  Hosting environment: Development
[2024-02-02 09:17:39.415 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 09:17:42.586 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 09:17:42.872 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 286.6394ms
[2024-02-02 09:17:42.883 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 09:17:42.883 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 09:17:42.888 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 5.4319ms
[2024-02-02 09:17:42.938 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 55.1814ms
[2024-02-02 09:17:43.077 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 09:17:43.226 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 149.1575ms
[2024-02-02 09:17:48.504 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests - -
[2024-02-02 09:17:48.696 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice)'
[2024-02-02 09:17:48.734 +01:00  INF]  Route matched with {action = "GetAllServiceRequests", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceRequests() on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:17:49.094 +01:00  INF]  Executing action method skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice) - Validation state: "Valid"
[2024-02-02 09:17:50.925 +01:00  INF]  Executed action method skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1819.1437ms.
[2024-02-02 09:17:50.943 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.DTO.ServiceRequestDTO, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 09:17:51.007 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice) in 2264.3016ms
[2024-02-02 09:17:51.009 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice)'
[2024-02-02 09:17:51.011 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests - - - 200 - application/json;+charset=utf-8 2507.1826ms
[2024-02-02 09:18:25.177 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484e - -
[2024-02-02 09:18:25.184 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.GetServiceRequestById (skiservice)'
[2024-02-02 09:18:25.207 +01:00  INF]  Route matched with {action = "GetServiceRequestById", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceRequestById(System.String) on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:18:25.275 +01:00  INF]  Executing action method skiservice.Controllers.ServiceRequestsController.GetServiceRequestById (skiservice) - Validation state: "Valid"
[2024-02-02 09:18:25.512 +01:00  INF]  Executed action method skiservice.Controllers.ServiceRequestsController.GetServiceRequestById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 236.2068ms.
[2024-02-02 09:18:25.513 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.DTO.ServiceRequestDTO'.
[2024-02-02 09:18:25.514 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.GetServiceRequestById (skiservice) in 306.227ms
[2024-02-02 09:18:25.514 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.GetServiceRequestById (skiservice)'
[2024-02-02 09:18:25.514 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484e - - - 200 - application/json;+charset=utf-8 337.8397ms
[2024-02-02 09:19:48.414 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/ 65bc5243c87db40a29e3484e application/json 44
[2024-02-02 09:19:48.433 +01:00  INF]  Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 09:19:48.441 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 09:19:48.451 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/ 65bc5243c87db40a29e3484e application/json 44 - 401 - application/json;+charset=utf-8 36.7988ms
[2024-02-02 09:20:08.225 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 51
[2024-02-02 09:20:08.226 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 09:20:08.234 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.DTO.UserLoginDTO) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 09:20:08.287 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 09:20:08.520 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 232.108ms.
[2024-02-02 09:20:08.520 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 09:20:08.526 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 292.3616ms
[2024-02-02 09:20:08.526 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 09:20:08.527 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 51 - 200 - application/json;+charset=utf-8 301.9158ms
[2024-02-02 09:20:22.001 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/ 65bc5243c87db40a29e3484e application/json 44
[2024-02-02 09:20:22.099 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice)'
[2024-02-02 09:20:22.109 +01:00  INF]  Route matched with {action = "UpdateServiceRequest", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceRequest(System.String, skiservice.DTO.ServiceRequestUpdateDTO) on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:20:22.160 +01:00  INF]  Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
[2024-02-02 09:20:22.165 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice) in 55.7998ms
[2024-02-02 09:20:22.166 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice)'
[2024-02-02 09:20:22.166 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/ 65bc5243c87db40a29e3484e application/json 44 - 400 - application/problem+json;+charset=utf-8 164.5651ms
[2024-02-02 09:23:01.268 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/ 65bc5243c87db40a29e3484e application/json 382
[2024-02-02 09:23:01.277 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice)'
[2024-02-02 09:23:01.277 +01:00  INF]  Route matched with {action = "UpdateServiceRequest", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceRequest(System.String, skiservice.DTO.ServiceRequestUpdateDTO) on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:23:01.320 +01:00  INF]  Executing action method skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice) - Validation state: "Valid"
[2024-02-02 09:23:01.713 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice) in 436.021ms
[2024-02-02 09:23:01.762 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice)'
[2024-02-02 09:23:01.836 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/ 65bc5243c87db40a29e3484e application/json 382 - 500 - application/json;+charset=utf-8 576.3003ms
[2024-02-02 09:23:49.430 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/ 65bc5243c87db40a29e3484e application/json 382
[2024-02-02 09:23:49.441 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice)'
[2024-02-02 09:23:49.441 +01:00  INF]  Route matched with {action = "UpdateServiceRequest", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceRequest(System.String, skiservice.DTO.ServiceRequestUpdateDTO) on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:23:49.462 +01:00  INF]  Executing action method skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice) - Validation state: "Valid"
[2024-02-02 09:23:49.888 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice) in 446.8786ms
[2024-02-02 09:23:49.961 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice)'
[2024-02-02 09:23:50.070 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/ 65bc5243c87db40a29e3484e application/json 382 - 500 - application/json;+charset=utf-8 639.7869ms
[2024-02-02 09:28:27.995 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484e application/json 382
[2024-02-02 09:28:28.004 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice)'
[2024-02-02 09:28:28.007 +01:00  INF]  Route matched with {action = "UpdateServiceRequest", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceRequest(System.String, skiservice.DTO.ServiceRequestUpdateDTO) on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:28:28.026 +01:00  INF]  Executing action method skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice) - Validation state: "Valid"
[2024-02-02 09:28:28.315 +01:00  INF]  Executed action method skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 288.8888ms.
[2024-02-02 09:28:28.315 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.DTO.ServiceRequestDTO'.
[2024-02-02 09:28:28.316 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice) in 308.2269ms
[2024-02-02 09:28:28.316 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.UpdateServiceRequest (skiservice)'
[2024-02-02 09:28:28.316 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceRequests/65bc5243c87db40a29e3484e application/json 382 - 200 - application/json;+charset=utf-8 321.1368ms
[2024-02-02 09:28:37.442 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceRequests - -
[2024-02-02 09:28:37.443 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice)'
[2024-02-02 09:28:37.443 +01:00  INF]  Route matched with {action = "GetAllServiceRequests", controller = "ServiceRequests"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceRequests() on controller skiservice.Controllers.ServiceRequestsController (skiservice).
[2024-02-02 09:28:37.462 +01:00  INF]  Executing action method skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice) - Validation state: "Valid"
[2024-02-02 09:28:38.266 +01:00  INF]  Executed action method skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 804.0626ms.
[2024-02-02 09:28:38.267 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.DTO.ServiceRequestDTO, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 09:28:38.267 +01:00  INF]  Executed action skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice) in 824.0189ms
[2024-02-02 09:28:38.267 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceRequestsController.GetAllServiceRequests (skiservice)'
[2024-02-02 09:28:38.267 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceRequests - - - 200 - application/json;+charset=utf-8 825.6011ms
[2024-02-02 09:28:56.593 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 09:28:56.801 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 09:28:56.802 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 09:28:56.804 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 09:28:56.804 +01:00  INF]  Hosting environment: Development
[2024-02-02 09:28:56.805 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 09:29:00.104 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 09:29:00.353 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 252.6571ms
[2024-02-02 09:29:00.360 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 09:29:00.360 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 09:29:00.367 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 7.2809ms
[2024-02-02 09:29:00.399 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 38.6252ms
[2024-02-02 09:29:00.569 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 09:29:00.678 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 109.6972ms
[2024-02-02 09:33:56.265 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 09:33:56.436 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 09:33:56.437 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 09:33:56.438 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 09:33:56.438 +01:00  INF]  Hosting environment: Development
[2024-02-02 09:33:56.438 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 09:33:56.946 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 09:33:57.228 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 09:33:57.228 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 09:33:57.231 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 284.8697ms
[2024-02-02 09:33:57.236 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 7.7490ms
[2024-02-02 09:33:57.277 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 49.2004ms
[2024-02-02 09:33:57.329 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 09:33:57.456 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 126.6071ms
[2024-02-02 09:35:48.307 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 09:35:48.498 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 09:35:48.499 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 09:35:48.500 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 09:35:48.500 +01:00  INF]  Hosting environment: Development
[2024-02-02 09:35:48.501 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 09:35:48.838 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 09:35:49.072 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 235.3413ms
[2024-02-02 09:35:49.082 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 09:35:49.082 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 09:35:49.089 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 6.9538ms
[2024-02-02 09:35:49.136 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 53.5973ms
[2024-02-02 09:35:49.254 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 09:35:49.369 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 115.5060ms
[2024-02-02 10:35:29.127 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 10:35:29.703 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 10:35:29.704 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 10:35:29.705 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 10:35:29.705 +01:00  INF]  Hosting environment: Development
[2024-02-02 10:35:29.705 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 10:35:31.289 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 10:35:31.670 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 10:35:31.670 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 10:35:31.672 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 384.4821ms
[2024-02-02 10:35:31.676 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 5.9337ms
[2024-02-02 10:35:31.730 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 60.2301ms
[2024-02-02 10:35:31.769 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 10:35:31.898 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 129.6847ms
[2024-02-02 10:46:39.986 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 10:46:40.164 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 10:46:40.185 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 10:46:40.418 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 10:46:41.332 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 909.7705ms.
[2024-02-02 10:46:41.339 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 10:46:41.362 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1173.9587ms
[2024-02-02 10:46:41.363 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 10:46:41.363 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 1383.5667ms
[2024-02-02 10:47:00.487 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 51
[2024-02-02 10:47:00.490 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 10:47:00.498 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 10:47:00.598 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 10:47:00.759 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 160.6539ms.
[2024-02-02 10:47:00.760 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 10:47:00.763 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 264.6888ms
[2024-02-02 10:47:00.763 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 10:47:00.764 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 51 - 200 - application/json;+charset=utf-8 276.5995ms
[2024-02-02 10:47:28.630 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceOrders/65bca963c315c396b155e015/cancel - 0
[2024-02-02 10:47:28.676 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 10:47:28.679 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 10:47:28.696 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 10:47:28.904 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkResult in 207.8236ms.
[2024-02-02 10:47:28.908 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 10:47:28.908 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 229.3541ms
[2024-02-02 10:47:28.908 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 10:47:28.908 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceOrders/65bca963c315c396b155e015/cancel - 0 - 200 0 - 278.3810ms
[2024-02-02 10:47:34.631 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 10:47:34.632 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 10:47:34.632 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 10:47:34.655 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 10:47:35.739 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1084.0878ms.
[2024-02-02 10:47:35.740 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 10:47:35.740 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1107.4399ms
[2024-02-02 10:47:35.740 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 10:47:35.740 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 1109.5108ms
[2024-02-02 10:47:49.353 +01:00  INF]  Request starting HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bca963c315c396b155e015 - -
[2024-02-02 10:47:49.356 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 10:47:49.362 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 10:47:49.390 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 10:47:49.563 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkResult in 172.3467ms.
[2024-02-02 10:47:49.563 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 10:47:49.563 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 201.0081ms
[2024-02-02 10:47:49.563 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 10:47:49.563 +01:00  INF]  Request finished HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bca963c315c396b155e015 - - - 200 0 - 210.0322ms
[2024-02-02 10:47:53.800 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 10:47:53.800 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 10:47:53.800 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 10:47:53.819 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 10:47:54.314 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 494.514ms.
[2024-02-02 10:47:54.314 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 10:47:54.314 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 513.6985ms
[2024-02-02 10:47:54.314 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 10:47:54.314 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 514.6811ms
[2024-02-02 10:50:43.408 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 10:50:43.617 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 10:50:43.617 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 10:50:43.618 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 10:50:43.618 +01:00  INF]  Hosting environment: Development
[2024-02-02 10:50:43.619 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 10:50:47.000 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 10:50:47.240 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 10:50:47.240 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 10:50:47.243 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 244.4537ms
[2024-02-02 10:50:47.263 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 22.8792ms
[2024-02-02 10:50:47.313 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 72.9824ms
[2024-02-02 10:50:47.365 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 10:50:47.506 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 142.0145ms
[2024-02-02 10:54:47.921 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 10:54:48.196 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 10:54:48.197 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 10:54:48.198 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 10:54:48.198 +01:00  INF]  Hosting environment: Development
[2024-02-02 10:54:48.198 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 10:54:52.033 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 10:54:52.332 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 302.4109ms
[2024-02-02 10:54:52.340 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 10:54:52.340 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 10:54:52.369 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 28.4743ms
[2024-02-02 10:54:52.453 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 112.9515ms
[2024-02-02 10:54:52.543 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 10:54:52.765 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 222.0441ms
[2024-02-02 10:54:59.550 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 10:54:59.669 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 10:54:59.684 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 10:54:59.828 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 10:55:00.754 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 922.4665ms.
[2024-02-02 10:55:00.761 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 10:55:00.779 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1091.0796ms
[2024-02-02 10:55:00.779 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 10:55:00.780 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 1229.9288ms
[2024-02-02 10:55:41.725 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 52
[2024-02-02 10:55:41.728 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 10:55:41.738 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 10:55:41.787 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 10:55:41.883 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 95.5321ms.
[2024-02-02 10:55:41.884 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 10:55:41.887 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 148.7209ms
[2024-02-02 10:55:41.887 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 10:55:41.888 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 52 - 200 - application/json;+charset=utf-8 162.0672ms
[2024-02-02 10:56:06.661 +01:00  INF]  Request starting HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fcd - -
[2024-02-02 10:56:06.668 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN)
[2024-02-02 10:56:06.676 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 10:56:06.684 +01:00  INF]  Request finished HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fcd - - - 401 - application/json;+charset=utf-8 23.2496ms
[2024-02-02 10:56:25.475 +01:00  INF]  Request starting HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fcd - -
[2024-02-02 10:56:25.518 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN)
[2024-02-02 10:56:25.519 +01:00  INF]  AuthenticationScheme: Bearer was forbidden.
[2024-02-02 10:56:25.519 +01:00  INF]  Request finished HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fcd - - - 403 - application/json;+charset=utf-8 44.4734ms
[2024-02-02 10:56:37.836 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 51
[2024-02-02 10:56:37.837 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 10:56:37.838 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 10:56:37.860 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 10:56:37.866 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.0496ms.
[2024-02-02 10:56:37.866 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 10:56:37.867 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 29.0517ms
[2024-02-02 10:56:37.867 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 10:56:37.867 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 51 - 200 - application/json;+charset=utf-8 30.7776ms
[2024-02-02 10:56:51.166 +01:00  INF]  Request starting HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fcd - -
[2024-02-02 10:56:51.171 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 10:56:51.174 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 10:56:51.199 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 10:56:51.495 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkResult in 295.8993ms.
[2024-02-02 10:56:51.498 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 10:56:51.498 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 323.5615ms
[2024-02-02 10:56:51.498 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 10:56:51.498 +01:00  INF]  Request finished HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fcd - - - 200 0 - 331.5753ms
[2024-02-02 11:17:18.687 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 11:17:18.942 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 11:17:18.943 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 11:17:18.945 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 11:17:18.945 +01:00  INF]  Hosting environment: Development
[2024-02-02 11:17:18.945 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 11:17:21.472 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 11:17:21.896 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 427.4195ms
[2024-02-02 11:17:21.904 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 11:17:21.916 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 11:17:21.920 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 15.9239ms
[2024-02-02 11:17:22.030 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 114.0462ms
[2024-02-02 11:17:22.131 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 11:17:22.501 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 369.8589ms
[2024-02-02 11:17:25.887 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 11:17:26.030 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 11:17:26.067 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 11:17:26.369 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 11:17:27.191 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 812.7503ms.
[2024-02-02 11:17:27.205 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 11:17:27.248 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1174.9642ms
[2024-02-02 11:17:27.250 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 11:17:27.252 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 1365.3724ms
[2024-02-02 11:17:41.330 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 52
[2024-02-02 11:17:41.339 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 11:17:41.368 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 11:17:41.445 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 11:17:41.653 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 208.1205ms.
[2024-02-02 11:17:41.655 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 11:17:41.664 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 295.1917ms
[2024-02-02 11:17:41.664 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 11:17:41.665 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 52 - 200 - application/json;+charset=utf-8 334.6418ms
[2024-02-02 11:18:01.933 +01:00  INF]  Request starting HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fce - -
[2024-02-02 11:18:02.026 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN)
[2024-02-02 11:18:02.029 +01:00  INF]  AuthenticationScheme: Bearer was forbidden.
[2024-02-02 11:18:02.036 +01:00  INF]  Request finished HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fce - - - 403 - application/json;+charset=utf-8 101.5625ms
[2024-02-02 11:18:18.238 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 51
[2024-02-02 11:18:18.240 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 11:18:18.240 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 11:18:18.272 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 11:18:18.279 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 7.0693ms.
[2024-02-02 11:18:18.280 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 11:18:18.280 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 39.9976ms
[2024-02-02 11:18:18.280 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 11:18:18.280 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 51 - 200 - application/json;+charset=utf-8 42.7877ms
[2024-02-02 11:18:40.018 +01:00  INF]  Request starting HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fce - -
[2024-02-02 11:18:40.021 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 11:18:40.028 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 11:18:40.053 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 11:18:40.465 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkResult in 411.3818ms.
[2024-02-02 11:18:40.472 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 11:18:40.473 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 444.9206ms
[2024-02-02 11:18:40.473 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 11:18:40.474 +01:00  INF]  Request finished HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fce - - - 200 0 - 455.8199ms
[2024-02-02 11:19:42.238 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 11:19:42.454 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 11:19:42.455 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 11:19:42.458 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 11:19:42.458 +01:00  INF]  Hosting environment: Development
[2024-02-02 11:19:42.458 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\JetstreamApi
[2024-02-02 11:19:45.549 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 11:19:45.815 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 265.0095ms
[2024-02-02 11:19:45.828 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 11:19:45.828 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 11:19:45.855 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 27.0581ms
[2024-02-02 11:19:45.892 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 63.5071ms
[2024-02-02 11:19:46.011 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 11:19:46.175 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 168.7219ms
[2024-02-02 11:19:56.346 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 11:19:56.484 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 11:19:56.518 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 11:19:56.773 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 11:19:57.742 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 956.1512ms.
[2024-02-02 11:19:57.762 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 11:19:57.824 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1298.483ms
[2024-02-02 11:19:57.826 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 11:19:57.828 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 1482.2054ms
[2024-02-02 11:20:10.103 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 52
[2024-02-02 11:20:10.108 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 11:20:10.133 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 11:20:10.252 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 11:20:10.447 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 194.8481ms.
[2024-02-02 11:20:10.448 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 11:20:10.456 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 322.9323ms
[2024-02-02 11:20:10.456 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 11:20:10.456 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 52 - 200 - application/json;+charset=utf-8 353.7746ms
[2024-02-02 11:20:34.627 +01:00  INF]  Request starting HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fcf - -
[2024-02-02 11:20:34.730 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN)
[2024-02-02 11:20:34.734 +01:00  INF]  AuthenticationScheme: Bearer was forbidden.
[2024-02-02 11:20:34.743 +01:00  INF]  Request finished HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fcf - - - 403 - application/json;+charset=utf-8 115.7386ms
[2024-02-02 11:20:42.942 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 51
[2024-02-02 11:20:42.944 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 11:20:42.944 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 11:20:42.973 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 11:20:42.979 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5.4061ms.
[2024-02-02 11:20:42.979 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 11:20:42.979 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 35.2098ms
[2024-02-02 11:20:42.979 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 11:20:42.980 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 51 - 200 - application/json;+charset=utf-8 37.9081ms
[2024-02-02 11:20:57.105 +01:00  INF]  Request starting HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fcf - -
[2024-02-02 11:20:57.110 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 11:20:57.117 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 11:20:57.148 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 11:20:57.542 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkResult in 393.0012ms.
[2024-02-02 11:20:57.550 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 11:20:57.550 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 432.8218ms
[2024-02-02 11:20:57.551 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 11:20:57.551 +01:00  INF]  Request finished HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fcf - - - 200 0 - 445.4842ms
[2024-02-02 11:27:14.929 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 11:27:15.125 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 11:27:15.126 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 11:27:15.127 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 11:27:15.127 +01:00  INF]  Hosting environment: Development
[2024-02-02 11:27:15.127 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\SkiServiceApi
[2024-02-02 11:27:15.731 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 11:27:15.994 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 265.3408ms
[2024-02-02 11:27:16.021 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 11:27:16.021 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 11:27:16.044 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 22.3627ms
[2024-02-02 11:27:18.460 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 2438.6339ms
[2024-02-02 11:27:18.537 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 11:27:18.685 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 148.1692ms
[2024-02-02 11:27:23.064 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 11:27:23.163 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 11:27:23.176 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 11:27:23.290 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 11:27:23.685 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 391.2746ms.
[2024-02-02 11:27:23.690 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 11:27:23.705 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 526.3549ms
[2024-02-02 11:27:23.706 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 11:27:23.708 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 643.1074ms
[2024-02-02 11:27:40.480 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 51
[2024-02-02 11:27:40.482 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 11:27:40.491 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 11:27:40.535 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 11:27:40.613 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 78.0072ms.
[2024-02-02 11:27:40.614 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 11:27:40.616 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 125.353ms
[2024-02-02 11:27:40.617 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 11:27:40.617 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 51 - 200 - application/json;+charset=utf-8 137.2535ms
[2024-02-02 11:28:02.457 +01:00  INF]  Request starting HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fd0 - -
[2024-02-02 11:28:02.496 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 11:28:02.498 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 11:28:02.515 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 11:28:02.746 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkResult in 230.1665ms.
[2024-02-02 11:28:02.748 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 11:28:02.748 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 249.989ms
[2024-02-02 11:28:02.748 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 11:28:02.748 +01:00  INF]  Request finished HTTP/2 DELETE https://localhost:7297/api/ServiceOrders/65bcbaf22d67d5d41c5c2fd0 - - - 200 0 - 290.9668ms
[2024-02-02 11:28:32.599 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 11:28:32.732 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 11:28:32.733 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 11:28:32.733 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 11:28:32.733 +01:00  INF]  Hosting environment: Development
[2024-02-02 11:28:32.733 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\JetstreamApi\SkiServiceApi
[2024-02-02 11:28:35.885 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 11:28:36.075 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 190.7630ms
[2024-02-02 11:28:36.082 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 11:28:36.082 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 11:28:36.087 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 5.3493ms
[2024-02-02 11:28:36.123 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 40.6928ms
[2024-02-02 11:28:36.268 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 11:28:36.367 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 98.6372ms
[2024-02-02 11:30:09.362 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 11:30:09.610 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 11:30:09.611 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 11:30:09.613 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 11:30:09.614 +01:00  INF]  Hosting environment: Development
[2024-02-02 11:30:09.614 +01:00  INF]  Content root path: C:\Users\robin\OneDrive\OneDrive - ipso! Bildung\Desktop\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 11:30:12.892 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 11:30:13.187 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 295.4441ms
[2024-02-02 11:30:13.197 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 11:30:13.197 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 11:30:13.212 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 14.9915ms
[2024-02-02 11:30:13.256 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 59.2369ms
[2024-02-02 11:30:13.336 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 11:30:13.482 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 145.4747ms
[2024-02-02 11:30:16.658 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 11:30:16.750 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 11:30:16.763 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 11:30:16.884 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 11:30:17.646 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 758.7387ms.
[2024-02-02 11:30:17.651 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 11:30:17.666 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 899.5897ms
[2024-02-02 11:30:17.666 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 11:30:17.667 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 1008.9581ms
[2024-02-02 11:33:54.183 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 11:33:54.492 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 11:33:54.492 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 11:33:54.494 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 11:33:54.494 +01:00  INF]  Hosting environment: Development
[2024-02-02 11:33:54.494 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 11:33:58.157 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 11:33:58.562 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 11:33:58.562 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 11:33:58.615 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 414.2654ms
[2024-02-02 11:33:58.656 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 82.7954ms
[2024-02-02 11:33:58.718 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 155.6157ms
[2024-02-02 11:33:58.764 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 11:33:58.911 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 147.4811ms
[2024-02-02 11:34:02.212 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 11:34:02.392 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 11:34:02.409 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 11:34:02.584 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 11:34:03.525 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 936.7587ms.
[2024-02-02 11:34:03.531 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 11:34:03.549 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1136.4382ms
[2024-02-02 11:34:03.549 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 11:34:03.550 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 1337.3693ms
[2024-02-02 12:00:49.050 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 12:00:49.584 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 12:00:49.584 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 12:00:49.585 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 12:00:49.585 +01:00  INF]  Hosting environment: Development
[2024-02-02 12:00:49.585 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 12:00:52.940 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 12:00:53.358 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 422.5327ms
[2024-02-02 12:00:53.366 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 12:00:53.366 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 12:00:53.374 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 7.9936ms
[2024-02-02 12:00:53.444 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 78.2173ms
[2024-02-02 12:00:53.538 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 12:00:53.692 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 153.4278ms
[2024-02-02 12:01:11.351 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:01:11.425 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:01:11.435 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:01:11.578 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:01:13.239 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1658.4714ms.
[2024-02-02 12:01:13.243 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:01:13.270 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1832.5089ms
[2024-02-02 12:01:13.270 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:01:13.271 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1920.4496ms
[2024-02-02 12:01:51.308 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:01:51.310 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:01:51.311 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:01:51.358 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:01:52.666 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1307.6844ms.
[2024-02-02 12:01:52.667 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:01:52.668 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1357.4514ms
[2024-02-02 12:01:52.668 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:01:52.669 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1360.5992ms
[2024-02-02 12:02:13.992 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:02:13.994 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:02:13.994 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:02:14.023 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:02:15.399 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1376.3002ms.
[2024-02-02 12:02:15.400 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:02:15.400 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1405.9056ms
[2024-02-02 12:02:15.400 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:02:15.400 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1408.4624ms
[2024-02-02 12:07:08.119 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:07:08.133 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:07:08.134 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:07:08.162 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:07:09.410 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1248.7728ms.
[2024-02-02 12:07:09.411 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:07:09.411 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1277.4365ms
[2024-02-02 12:07:09.411 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:07:09.411 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1293.7432ms
[2024-02-02 12:25:01.708 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:25:01.709 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:25:01.710 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:25:01.744 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:25:02.850 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1105.9858ms.
[2024-02-02 12:25:02.850 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:25:02.851 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1140.9943ms
[2024-02-02 12:25:02.851 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:25:02.851 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1142.7053ms
[2024-02-02 12:31:14.619 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:31:14.627 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:31:14.630 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:31:14.652 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:31:15.840 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1187.2474ms.
[2024-02-02 12:31:15.840 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:31:15.840 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1209.525ms
[2024-02-02 12:31:15.840 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:31:15.840 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1222.0534ms
[2024-02-02 12:32:43.054 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:32:43.063 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:32:43.066 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:32:43.096 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:32:44.334 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1238.7347ms.
[2024-02-02 12:32:44.335 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:32:44.335 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1268.3656ms
[2024-02-02 12:32:44.335 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:32:44.335 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1280.9799ms
[2024-02-02 12:45:27.494 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/ - -
[2024-02-02 12:45:27.507 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:45:27.511 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:45:27.532 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:45:28.765 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1231.9796ms.
[2024-02-02 12:45:28.765 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:45:28.765 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1254.5507ms
[2024-02-02 12:45:28.765 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:45:28.765 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/ - - - 200 - application/json;+charset=utf-8 1271.1324ms
[2024-02-02 12:47:21.034 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/ - -
[2024-02-02 12:47:21.035 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:47:21.035 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:47:21.077 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:47:22.375 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1298.3823ms.
[2024-02-02 12:47:22.376 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:47:22.376 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1340.2121ms
[2024-02-02 12:47:22.376 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:47:22.376 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/ - - - 200 - application/json;+charset=utf-8 1341.6364ms
[2024-02-02 12:49:48.849 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 12:49:48.857 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 12:49:48.870 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:49:48.902 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 12:49:49.196 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 293.1141ms.
[2024-02-02 12:49:49.197 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 12:49:49.197 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 326.6709ms
[2024-02-02 12:49:49.197 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 12:49:49.197 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 348.2800ms
[2024-02-02 12:50:08.556 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 12:50:08.556 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:50:08.556 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:50:08.582 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:50:09.839 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1257.6864ms.
[2024-02-02 12:50:09.840 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:50:09.840 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1283.8637ms
[2024-02-02 12:50:09.840 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:50:09.840 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 1284.6716ms
[2024-02-02 12:50:21.414 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/ServiceOrders - -
[2024-02-02 12:50:21.415 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:50:21.415 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:50:21.444 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:50:22.602 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1157.6948ms.
[2024-02-02 12:50:22.602 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:50:22.603 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1187.8183ms
[2024-02-02 12:50:22.603 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:50:22.603 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/ServiceOrders - - - 200 - application/json;+charset=utf-8 1188.8706ms
[2024-02-02 12:50:43.772 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 12:50:43.772 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 12:50:43.772 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:50:43.796 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 12:50:44.021 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 224.9504ms.
[2024-02-02 12:50:44.021 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 12:50:44.022 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 249.3734ms
[2024-02-02 12:50:44.022 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 12:50:44.022 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 250.2178ms
[2024-02-02 12:50:52.644 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 12:50:52.644 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 12:50:52.645 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:50:52.670 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 12:50:52.935 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 264.7821ms.
[2024-02-02 12:50:52.935 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 12:50:52.935 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 290.6079ms
[2024-02-02 12:50:52.935 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 12:50:52.935 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 291.6719ms
[2024-02-02 12:51:00.277 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 12:51:00.277 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 12:51:00.277 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:51:00.307 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 12:51:00.571 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 263.4684ms.
[2024-02-02 12:51:00.571 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 12:51:00.571 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 293.8145ms
[2024-02-02 12:51:00.571 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 12:51:00.571 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 294.3523ms
[2024-02-02 12:57:13.980 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:57:14.027 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:57:14.027 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:57:14.082 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:57:15.336 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1254.1783ms.
[2024-02-02 12:57:15.337 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:57:15.337 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1309.7349ms
[2024-02-02 12:57:15.337 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:57:15.337 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1357.4884ms
[2024-02-02 12:57:17.464 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:57:17.465 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:57:17.465 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:57:17.498 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:57:18.703 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1204.4129ms.
[2024-02-02 12:57:18.703 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:57:18.703 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1238.1799ms
[2024-02-02 12:57:18.703 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:57:18.703 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1239.1038ms
[2024-02-02 12:57:25.060 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:57:25.061 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:57:25.061 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:57:25.091 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:57:26.361 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1270.5838ms.
[2024-02-02 12:57:26.362 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:57:26.362 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1300.7502ms
[2024-02-02 12:57:26.362 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:57:26.362 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1301.7532ms
[2024-02-02 12:58:35.488 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 12:58:35.488 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:58:35.488 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:58:35.518 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 12:58:36.736 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1218.1713ms.
[2024-02-02 12:58:36.736 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 12:58:36.737 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1248.6754ms
[2024-02-02 12:58:36.737 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 12:58:36.737 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1249.3416ms
[2024-02-02 12:58:36.841 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 12:58:36.841 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 12:58:36.841 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 12:58:36.870 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 12:58:37.115 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 245.1433ms.
[2024-02-02 12:58:37.115 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 12:58:37.115 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 274.1634ms
[2024-02-02 12:58:37.116 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 12:58:37.116 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 274.8109ms
[2024-02-02 13:01:58.999 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/ - -
[2024-02-02 13:01:58.999 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:01:59.000 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:01:59.030 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:01:59.728 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 728.6985ms
[2024-02-02 13:01:59.839 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:02:00.019 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/ - - - 500 - application/json;+charset=utf-8 1020.2317ms
[2024-02-02 13:02:43.998 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/api/ServiceOrders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:02:43.999 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:02:44.016 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:02:44.042 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:02:44.053 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 10.8923ms.
[2024-02-02 13:02:44.054 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:02:44.054 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 38.042ms
[2024-02-02 13:02:44.054 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:02:44.054 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/api/ServiceOrders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 55.9604ms
[2024-02-02 13:03:03.325 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:03:03.326 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:03:03.326 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:03:03.349 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:03:04.548 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1199.2415ms.
[2024-02-02 13:03:04.549 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:03:04.549 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1222.894ms
[2024-02-02 13:03:04.549 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:03:04.549 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1223.8168ms
[2024-02-02 13:03:04.624 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:03:04.624 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:03:04.624 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:03:04.647 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:03:04.902 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 254.6152ms.
[2024-02-02 13:03:04.902 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:03:04.903 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 278.5796ms
[2024-02-02 13:03:04.903 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:03:04.903 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 279.3277ms
[2024-02-02 13:03:04.970 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:03:04.970 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:03:04.970 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:03:04.995 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:03:04.998 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.3155ms.
[2024-02-02 13:03:04.998 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:03:04.998 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 28.0704ms
[2024-02-02 13:03:04.998 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:03:04.999 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 28.8040ms
[2024-02-02 13:03:21.184 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/ - -
[2024-02-02 13:03:21.184 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:03:21.184 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:03:21.211 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:03:21.885 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 700.6216ms
[2024-02-02 13:03:21.997 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:03:22.171 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/ - - - 500 - application/json;+charset=utf-8 987.1586ms
[2024-02-02 13:04:02.271 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:04:02.271 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:04:02.271 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:04:02.297 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:04:03.473 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1176.1239ms.
[2024-02-02 13:04:03.474 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:04:03.480 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1209.3292ms
[2024-02-02 13:04:03.480 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:04:03.481 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1209.8676ms
[2024-02-02 13:04:08.119 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:04:08.120 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:04:08.120 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:04:08.141 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:04:08.145 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.6221ms.
[2024-02-02 13:04:08.145 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:04:08.145 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 25.5993ms
[2024-02-02 13:04:08.145 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:04:08.146 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 26.4656ms
[2024-02-02 13:04:59.243 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:04:59.243 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:04:59.243 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:04:59.269 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:04:59.274 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.6111ms.
[2024-02-02 13:04:59.275 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:04:59.275 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 32.3318ms
[2024-02-02 13:04:59.275 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:04:59.276 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 32.9464ms
[2024-02-02 13:06:58.603 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:06:58.604 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:06:58.604 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:06:58.632 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:06:59.576 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 943.5839ms.
[2024-02-02 13:06:59.576 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:06:59.576 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 971.7633ms
[2024-02-02 13:06:59.576 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:06:59.576 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 973.3565ms
[2024-02-02 13:06:59.670 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:06:59.670 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:06:59.670 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:06:59.703 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:06:59.965 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 261.551ms.
[2024-02-02 13:06:59.965 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:06:59.966 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 295.2255ms
[2024-02-02 13:06:59.966 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:06:59.966 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 295.9987ms
[2024-02-02 13:07:00.054 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:07:00.055 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:07:00.055 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:07:00.086 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:07:00.089 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.4262ms.
[2024-02-02 13:07:00.089 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:07:00.089 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 34.6825ms
[2024-02-02 13:07:00.089 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:07:00.090 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 35.4691ms
[2024-02-02 13:07:53.646 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:07:53.647 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:07:53.647 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:07:53.671 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:07:54.575 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 904.1629ms.
[2024-02-02 13:07:54.575 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:07:54.575 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 928.5807ms
[2024-02-02 13:07:54.576 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:07:54.576 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 929.4133ms
[2024-02-02 13:07:54.667 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:07:54.667 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:07:54.667 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:07:54.694 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:07:54.973 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 278.576ms.
[2024-02-02 13:07:54.973 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:07:54.973 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 306.352ms
[2024-02-02 13:07:54.973 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:07:54.973 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 306.9176ms
[2024-02-02 13:07:55.059 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:07:55.059 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:07:55.059 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:07:55.086 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:07:55.090 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.8624ms.
[2024-02-02 13:07:55.090 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:07:55.090 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 31.097ms
[2024-02-02 13:07:55.090 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:07:55.090 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 31.5914ms
[2024-02-02 13:08:24.862 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:08:24.862 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:08:24.862 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:08:24.885 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:08:25.903 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1018.0942ms.
[2024-02-02 13:08:25.903 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:08:25.903 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1041.3394ms
[2024-02-02 13:08:25.903 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:08:25.904 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1041.8368ms
[2024-02-02 13:08:25.968 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:08:25.968 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:08:25.968 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:08:25.995 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:08:26.260 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 264.6053ms.
[2024-02-02 13:08:26.260 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:08:26.260 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 291.6714ms
[2024-02-02 13:08:26.260 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:08:26.260 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 292.2843ms
[2024-02-02 13:08:26.315 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:08:26.315 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:08:26.315 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:08:26.342 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:08:26.346 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.7432ms.
[2024-02-02 13:08:26.346 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:08:26.346 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 31.1754ms
[2024-02-02 13:08:26.346 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:08:26.347 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 31.7304ms
[2024-02-02 13:09:12.948 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:09:12.948 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:09:12.948 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:09:12.972 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:09:13.255 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 283.1164ms.
[2024-02-02 13:09:13.256 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:09:13.256 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 307.8566ms
[2024-02-02 13:09:13.256 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:09:13.256 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 308.1709ms
[2024-02-02 13:13:24.185 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:13:24.187 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:13:24.187 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:13:24.217 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:13:25.221 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1004.1666ms.
[2024-02-02 13:13:25.221 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:13:25.221 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1027.5778ms
[2024-02-02 13:13:25.221 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:13:25.221 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1036.2502ms
[2024-02-02 13:13:25.307 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:13:25.307 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:13:25.307 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:13:25.335 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:13:25.558 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 223.5227ms.
[2024-02-02 13:13:25.559 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:13:25.559 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 251.159ms
[2024-02-02 13:13:25.559 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:13:25.559 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 251.7917ms
[2024-02-02 13:13:25.621 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:13:25.622 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:13:25.622 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:13:25.641 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:13:25.645 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.506ms.
[2024-02-02 13:13:25.645 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:13:25.645 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 23.4759ms
[2024-02-02 13:13:25.645 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:13:25.646 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 24.0661ms
[2024-02-02 13:14:12.348 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:14:12.348 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:14:12.348 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:14:12.364 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:14:13.318 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 954.4768ms.
[2024-02-02 13:14:13.319 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:14:13.319 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 970.5355ms
[2024-02-02 13:14:13.319 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:14:13.319 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 971.0997ms
[2024-02-02 13:14:13.401 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:14:13.402 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:14:13.402 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:14:13.423 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:14:13.669 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 245.7511ms.
[2024-02-02 13:14:13.669 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:14:13.669 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 267.5651ms
[2024-02-02 13:14:13.669 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:14:13.670 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 268.2507ms
[2024-02-02 13:14:13.727 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:14:13.728 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:14:13.728 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:14:13.750 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:14:13.753 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.6968ms.
[2024-02-02 13:14:13.753 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:14:13.753 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 25.1504ms
[2024-02-02 13:14:13.753 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:14:13.753 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 25.7252ms
[2024-02-02 13:16:39.364 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 13:16:39.370 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 13:16:39.373 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 13:16:39.373 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 401 - application/json;+charset=utf-8 9.2905ms
[2024-02-02 13:17:02.064 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/ServiceOrders application/json 412
[2024-02-02 13:17:02.078 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 13:17:02.079 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 13:17:02.079 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/ServiceOrders application/json 412 - 401 - application/json;+charset=utf-8 14.7696ms
[2024-02-02 13:18:48.557 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 13:18:49.277 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 13:18:49.278 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 13:18:49.280 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 13:18:49.281 +01:00  INF]  Hosting environment: Development
[2024-02-02 13:18:49.281 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 13:18:50.231 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 13:18:50.767 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 13:18:50.767 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 13:18:50.770 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 542.7114ms
[2024-02-02 13:18:50.776 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 8.9144ms
[2024-02-02 13:18:50.853 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 86.4984ms
[2024-02-02 13:18:50.978 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 13:18:51.246 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 268.0918ms
[2024-02-02 13:19:00.605 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 13:19:01.811 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:19:01.847 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:19:02.372 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:19:02.945 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 562.5621ms.
[2024-02-02 13:19:02.959 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:19:03.055 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 1201.7772ms
[2024-02-02 13:19:03.056 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:19:03.058 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 2453.3920ms
[2024-02-02 13:20:02.808 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 13:20:02.827 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:20:02.828 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:20:02.877 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:20:03.048 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 170.7672ms.
[2024-02-02 13:20:03.049 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:20:03.050 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 221.9864ms
[2024-02-02 13:20:03.050 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:20:03.051 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 243.5356ms
[2024-02-02 13:20:03.122 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:20:03.126 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:20:03.133 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:20:03.167 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:20:05.226 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2059.1854ms.
[2024-02-02 13:20:05.227 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:20:05.233 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2099.5666ms
[2024-02-02 13:20:05.233 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:20:05.234 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2111.1381ms
[2024-02-02 13:20:05.344 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:20:05.344 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:20:05.350 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:20:05.381 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:20:05.741 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 359.8919ms.
[2024-02-02 13:20:05.741 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:20:05.742 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 391.2679ms
[2024-02-02 13:20:05.742 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:20:05.743 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 398.5000ms
[2024-02-02 13:20:05.831 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:20:05.832 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:20:05.837 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:20:05.869 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:20:05.886 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 16.7473ms.
[2024-02-02 13:20:05.887 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:20:05.887 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 50.2557ms
[2024-02-02 13:20:05.888 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:20:05.888 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 56.6743ms
[2024-02-02 13:22:30.611 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 13:22:30.611 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:22:30.612 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:22:30.638 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:22:30.854 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 215.0943ms.
[2024-02-02 13:22:30.854 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:22:30.854 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 242.5466ms
[2024-02-02 13:22:30.854 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:22:30.854 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 243.6604ms
[2024-02-02 13:22:30.928 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:22:30.928 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:22:30.928 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:22:30.954 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:22:32.964 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2009.7826ms.
[2024-02-02 13:22:32.964 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:22:32.965 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2037.1581ms
[2024-02-02 13:22:32.965 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:22:32.966 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2038.2242ms
[2024-02-02 13:22:33.049 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:22:33.050 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:22:33.050 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:22:33.078 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:22:33.361 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 282.7711ms.
[2024-02-02 13:22:33.361 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:22:33.362 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 312.1279ms
[2024-02-02 13:22:33.362 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:22:33.362 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 313.3782ms
[2024-02-02 13:22:33.421 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:22:33.421 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:22:33.421 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:22:33.445 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:22:33.448 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.286ms.
[2024-02-02 13:22:33.449 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:22:33.449 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 27.8048ms
[2024-02-02 13:22:33.449 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:22:33.450 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 28.7598ms
[2024-02-02 13:22:47.554 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 13:22:47.554 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:22:47.554 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:22:47.580 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:22:47.760 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 179.4781ms.
[2024-02-02 13:22:47.760 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:22:47.760 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 205.7207ms
[2024-02-02 13:22:47.760 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:22:47.760 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 206.7242ms
[2024-02-02 13:22:47.858 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:22:47.858 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:22:47.859 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:22:47.892 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:22:50.002 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2109.3678ms.
[2024-02-02 13:22:50.002 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:22:50.003 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2144.1271ms
[2024-02-02 13:22:50.003 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:22:50.003 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2145.7622ms
[2024-02-02 13:22:50.099 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:22:50.099 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:22:50.099 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:22:50.131 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:22:50.421 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 290.1513ms.
[2024-02-02 13:22:50.421 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:22:50.422 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 322.5789ms
[2024-02-02 13:22:50.422 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:22:50.422 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 323.5926ms
[2024-02-02 13:22:50.494 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:22:50.494 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:22:50.494 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:22:50.527 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:22:50.533 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.7878ms.
[2024-02-02 13:22:50.534 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:22:50.535 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 40.5134ms
[2024-02-02 13:22:50.535 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:22:50.535 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 41.4816ms
[2024-02-02 13:24:21.585 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/users/login application/json 54
[2024-02-02 13:24:21.586 +01:00  INF]  Executing endpoint '405 HTTP Method Not Supported'
[2024-02-02 13:24:21.586 +01:00  INF]  Executed endpoint '405 HTTP Method Not Supported'
[2024-02-02 13:24:21.586 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/users/login application/json 54 - 405 0 - 1.2509ms
[2024-02-02 13:24:39.881 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 13:24:39.883 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:24:39.887 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 13:24:39.917 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 13:24:40.128 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 210.7706ms.
[2024-02-02 13:24:40.129 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 13:24:40.136 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 248.508ms
[2024-02-02 13:24:40.136 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:24:40.136 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 254.6000ms
[2024-02-02 13:26:25.858 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 13:26:25.858 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:26:25.859 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 13:26:25.896 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 13:26:25.913 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 15.8344ms.
[2024-02-02 13:26:25.913 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 13:26:25.913 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 54.6593ms
[2024-02-02 13:26:25.913 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:26:25.914 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 55.7202ms
[2024-02-02 13:27:00.662 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 13:27:00.662 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:27:00.662 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:27:00.689 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:27:00.856 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 166.8664ms.
[2024-02-02 13:27:00.856 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:27:00.857 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 194.2189ms
[2024-02-02 13:27:00.857 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:27:00.857 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 194.8755ms
[2024-02-02 13:27:00.952 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:27:00.952 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:27:00.952 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:27:01.010 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:27:03.291 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2280.7625ms.
[2024-02-02 13:27:03.291 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:27:03.291 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2339.2839ms
[2024-02-02 13:27:03.292 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:27:03.292 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2340.2216ms
[2024-02-02 13:27:03.374 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:27:03.375 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:27:03.375 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:27:03.409 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:27:03.633 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 222.9916ms.
[2024-02-02 13:27:03.633 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:27:03.633 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 258.3835ms
[2024-02-02 13:27:03.634 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:27:03.634 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 259.6566ms
[2024-02-02 13:27:03.717 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:27:03.718 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:27:03.718 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:27:03.745 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:27:03.748 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.7273ms.
[2024-02-02 13:27:03.749 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:27:03.749 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 31.3315ms
[2024-02-02 13:27:03.749 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:27:03.749 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 32.2338ms
[2024-02-02 13:27:03.813 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 13:27:03.814 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:27:03.814 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 13:27:03.844 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 13:27:03.847 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.9531ms.
[2024-02-02 13:27:03.847 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 13:27:03.847 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 33.3932ms
[2024-02-02 13:27:03.847 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:27:03.847 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 34.0361ms
[2024-02-02 13:33:43.698 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 13:33:43.895 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 13:33:43.895 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 13:33:43.896 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 13:33:43.896 +01:00  INF]  Hosting environment: Development
[2024-02-02 13:33:43.896 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 13:33:44.368 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 13:33:44.597 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 13:33:44.597 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 13:33:44.599 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 230.8112ms
[2024-02-02 13:33:44.606 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 8.3558ms
[2024-02-02 13:33:44.649 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 51.4983ms
[2024-02-02 13:33:44.692 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 13:33:44.797 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 105.2029ms
[2024-02-02 13:33:59.951 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/api/users/login application/json 51
[2024-02-02 13:34:00.095 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:34:00.142 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 13:34:00.291 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 13:34:00.539 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 240.6512ms.
[2024-02-02 13:34:00.551 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 13:34:00.571 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 421.6717ms
[2024-02-02 13:34:00.572 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:34:00.572 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/api/users/login application/json 51 - 200 - application/json;+charset=utf-8 622.5571ms
[2024-02-02 13:35:00.218 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/ - -
[2024-02-02 13:35:00.225 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/ - - - 404 0 - 7.0265ms
[2024-02-02 13:35:06.361 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 13:35:06.372 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:35:06.373 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 13:35:06.415 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 13:35:06.426 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 10.0398ms.
[2024-02-02 13:35:06.428 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 13:35:06.430 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 56.4037ms
[2024-02-02 13:35:06.430 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:35:06.431 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 69.7349ms
[2024-02-02 13:35:33.979 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 13:35:33.980 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:35:33.980 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 13:35:34.003 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 13:35:34.009 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5.4478ms.
[2024-02-02 13:35:34.009 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 13:35:34.010 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 29.7046ms
[2024-02-02 13:35:34.010 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:35:34.010 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 30.9750ms
[2024-02-02 13:35:50.272 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - -
[2024-02-02 13:35:50.278 +01:00  INF]  Executing endpoint '405 HTTP Method Not Supported'
[2024-02-02 13:35:50.279 +01:00  INF]  Executed endpoint '405 HTTP Method Not Supported'
[2024-02-02 13:35:50.282 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - - - 405 0 - 11.2081ms
[2024-02-02 13:36:05.234 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 13:36:05.241 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 13:36:05.247 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 13:36:05.251 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 401 - application/json;+charset=utf-8 17.1074ms
[2024-02-02 13:37:46.757 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 13:37:46.910 +01:00  INF]  Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '22.11.2023 18:20:34', Current time (UTC): '02.02.2024 12:37:46'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
[2024-02-02 13:37:46.972 +01:00  INF]  Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '22.11.2023 18:20:34', Current time (UTC): '02.02.2024 12:37:46'.
[2024-02-02 13:37:46.975 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 13:37:46.978 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 13:37:46.979 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 401 - application/json;+charset=utf-8 221.9692ms
[2024-02-02 13:38:32.688 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 13:38:32.759 +01:00  INF]  Failed to validate the token.
Microsoft.IdentityModel.Tokens.SecurityTokenExpiredException: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '22.11.2023 18:20:34', Current time (UTC): '02.02.2024 12:38:32'.
   at Microsoft.IdentityModel.Tokens.Validators.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, SecurityToken securityToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateLifetime(Nullable`1 notBefore, Nullable`1 expires, JwtSecurityToken jwtToken, TokenValidationParameters validationParameters)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateTokenPayload(JwtSecurityToken jwtToken, TokenValidationParameters validationParameters, BaseConfiguration configuration)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateJWS(String token, TokenValidationParameters validationParameters, BaseConfiguration currentConfiguration, SecurityToken& signatureValidatedToken, ExceptionDispatchInfo& exceptionThrown)
--- End of stack trace from previous location ---
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, JwtSecurityToken outerToken, TokenValidationParameters validationParameters, SecurityToken& signatureValidatedToken)
   at System.IdentityModel.Tokens.Jwt.JwtSecurityTokenHandler.ValidateToken(String token, TokenValidationParameters validationParameters, SecurityToken& validatedToken)
   at Microsoft.AspNetCore.Authentication.JwtBearer.JwtBearerHandler.HandleAuthenticateAsync()
[2024-02-02 13:38:32.759 +01:00  INF]  Bearer was not authenticated. Failure message: IDX10223: Lifetime validation failed. The token is expired. ValidTo (UTC): '22.11.2023 18:20:34', Current time (UTC): '02.02.2024 12:38:32'.
[2024-02-02 13:38:32.761 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 13:38:32.761 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 13:38:32.762 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 401 - application/json;+charset=utf-8 73.4984ms
[2024-02-02 13:38:35.183 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 13:38:35.184 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:38:35.184 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 13:38:35.204 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 13:38:35.208 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.853ms.
[2024-02-02 13:38:35.209 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 13:38:35.209 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 24.7365ms
[2024-02-02 13:38:35.209 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:38:35.209 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 25.8448ms
[2024-02-02 13:38:37.842 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 13:38:37.856 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 13:38:37.864 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 13:38:37.896 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 13:38:38.098 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 202.0108ms.
[2024-02-02 13:38:38.101 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 13:38:38.102 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 237.3702ms
[2024-02-02 13:38:38.102 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 13:38:38.102 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 260.1001ms
[2024-02-02 13:40:32.862 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 13:40:32.863 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 13:40:32.863 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 13:40:32.872 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 401 - application/json;+charset=utf-8 10.5699ms
[2024-02-02 13:40:59.143 +01:00  INF]  Request starting HTTP/2 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 13:40:59.153 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 13:40:59.153 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 13:40:59.176 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 13:40:59.355 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 179.0948ms.
[2024-02-02 13:40:59.357 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 13:40:59.358 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 201.4975ms
[2024-02-02 13:40:59.359 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 13:40:59.362 +01:00  INF]  Request finished HTTP/2 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 218.7380ms
[2024-02-02 13:43:14.947 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - 0
[2024-02-02 13:43:14.978 +01:00  INF]  Authorization failed. These requirements were not met:
DenyAnonymousAuthorizationRequirement: Requires an authenticated user.
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 13:43:14.979 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 13:43:14.979 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - 0 - 401 - application/json;+charset=utf-8 32.5647ms
[2024-02-02 13:43:22.548 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - 0
[2024-02-02 13:43:22.549 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:43:22.558 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:43:22.732 +01:00  INF]  Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
[2024-02-02 13:43:22.733 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 174.5165ms
[2024-02-02 13:43:22.733 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:43:22.733 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - 0 - 415 - application/problem+json;+charset=utf-8 185.2478ms
[2024-02-02 13:43:40.652 +01:00  INF]  Request starting HTTP/2 PUT https://localhost:7297/api/ServiceOrders/65bcc3d0fc430d841d6e15d0 application/json 303
[2024-02-02 13:43:40.653 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:43:40.653 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:43:40.712 +01:00  INF]  Executing BadRequestObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ValidationProblemDetails'.
[2024-02-02 13:43:40.718 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 64.4107ms
[2024-02-02 13:43:40.718 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:43:40.718 +01:00  INF]  Request finished HTTP/2 PUT https://localhost:7297/api/ServiceOrders/65bcc3d0fc430d841d6e15d0 application/json 303 - 400 - application/problem+json;+charset=utf-8 66.2279ms
[2024-02-02 13:45:16.463 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 13:45:16.463 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:45:16.464 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:45:16.481 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:45:16.744 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 262.5497ms.
[2024-02-02 13:45:16.744 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:45:16.772 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 308.0002ms
[2024-02-02 13:45:16.772 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:45:16.772 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 309.3061ms
[2024-02-02 13:46:37.940 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 13:46:37.941 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:46:37.953 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:46:37.983 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:46:38.157 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 174.1917ms.
[2024-02-02 13:46:38.157 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:46:38.195 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 241.1125ms
[2024-02-02 13:46:38.195 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:46:38.195 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 255.5609ms
[2024-02-02 13:46:38.272 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:46:38.272 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:46:38.276 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:46:38.293 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:46:39.504 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1210.6032ms.
[2024-02-02 13:46:39.504 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:46:39.506 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1229.3695ms
[2024-02-02 13:46:39.506 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:46:39.506 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1234.4233ms
[2024-02-02 13:46:39.605 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:46:39.605 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:46:39.609 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:46:39.624 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:46:39.733 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 108.8444ms.
[2024-02-02 13:46:39.733 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:46:39.733 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 123.6288ms
[2024-02-02 13:46:39.733 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:46:39.734 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 128.8779ms
[2024-02-02 13:46:39.794 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:46:39.795 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:46:39.799 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:46:39.813 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:46:39.826 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 12.2628ms.
[2024-02-02 13:46:39.826 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:46:39.826 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 27.2396ms
[2024-02-02 13:46:39.826 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:46:39.827 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 32.2441ms
[2024-02-02 13:46:39.890 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 13:46:39.890 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:46:39.890 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 13:46:39.908 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 13:46:39.910 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.6959ms.
[2024-02-02 13:46:39.911 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 13:46:39.911 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 20.3ms
[2024-02-02 13:46:39.911 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:46:39.911 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 21.2123ms
[2024-02-02 13:46:39.970 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 13:46:39.970 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 13:46:39.970 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 13:46:39.987 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 13:46:40.145 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 158.4911ms.
[2024-02-02 13:46:40.146 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 13:46:40.146 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 175.5444ms
[2024-02-02 13:46:40.146 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 13:46:40.146 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 176.4191ms
[2024-02-02 13:46:40.205 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 13:46:40.206 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:46:40.206 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:46:40.221 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:46:40.348 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 127.2348ms.
[2024-02-02 13:46:40.348 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:46:40.349 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 142.7275ms
[2024-02-02 13:46:40.349 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:46:40.349 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 144.1569ms
[2024-02-02 13:48:05.985 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 13:48:05.985 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:48:05.985 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:48:06.011 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:48:06.122 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 110.6003ms.
[2024-02-02 13:48:06.122 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:48:06.123 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 138.0639ms
[2024-02-02 13:48:06.123 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:48:06.124 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 139.1511ms
[2024-02-02 13:48:06.205 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:48:06.205 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:48:06.205 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:48:06.223 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:48:07.461 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1237.7839ms.
[2024-02-02 13:48:07.462 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:48:07.462 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1256.5956ms
[2024-02-02 13:48:07.462 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:48:07.462 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1257.4427ms
[2024-02-02 13:48:07.548 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:48:07.548 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:48:07.548 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:48:07.561 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:48:07.658 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 96.9088ms.
[2024-02-02 13:48:07.659 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:48:07.659 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 110.3532ms
[2024-02-02 13:48:07.659 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:48:07.659 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 111.4409ms
[2024-02-02 13:48:07.681 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:48:07.682 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:48:07.682 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:48:07.696 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:48:07.700 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.8382ms.
[2024-02-02 13:48:07.701 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:48:07.701 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 19.1852ms
[2024-02-02 13:48:07.701 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:48:07.701 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 20.1184ms
[2024-02-02 13:48:07.784 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 13:48:07.784 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:48:07.785 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 13:48:07.799 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 13:48:07.802 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.5862ms.
[2024-02-02 13:48:07.802 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 13:48:07.802 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 17.6899ms
[2024-02-02 13:48:07.802 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:48:07.803 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 18.6236ms
[2024-02-02 13:48:07.878 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 13:48:07.878 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 13:48:07.879 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 13:48:07.894 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 13:48:07.956 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 61.6188ms.
[2024-02-02 13:48:07.956 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 13:48:07.956 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 77.4333ms
[2024-02-02 13:48:07.956 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 13:48:07.956 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 78.6972ms
[2024-02-02 13:48:08.020 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 13:48:08.021 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:48:08.021 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:48:08.037 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:48:08.152 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 114.2745ms.
[2024-02-02 13:48:08.152 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:48:08.152 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 131.1153ms
[2024-02-02 13:48:08.152 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:48:08.152 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 132.4631ms
[2024-02-02 13:49:44.663 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 13:49:44.664 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:49:44.664 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:49:44.679 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:49:44.799 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 119.1402ms.
[2024-02-02 13:49:44.799 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:49:44.800 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 135.7587ms
[2024-02-02 13:49:44.800 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 13:49:44.800 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 137.3753ms
[2024-02-02 13:49:44.881 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 13:49:44.882 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:49:44.882 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:49:44.898 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 13:49:46.746 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1847.682ms.
[2024-02-02 13:49:46.746 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:49:46.747 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1864.3919ms
[2024-02-02 13:49:46.747 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 13:49:46.747 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1865.5521ms
[2024-02-02 13:49:46.814 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 13:49:46.814 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:49:46.815 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:49:46.838 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 13:49:47.001 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 162.6735ms.
[2024-02-02 13:49:47.001 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:49:47.002 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 186.9014ms
[2024-02-02 13:49:47.002 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 13:49:47.002 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 187.8698ms
[2024-02-02 13:49:47.051 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 13:49:47.051 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:49:47.051 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:49:47.069 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 13:49:47.074 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.6627ms.
[2024-02-02 13:49:47.075 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 13:49:47.075 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 23.607ms
[2024-02-02 13:49:47.075 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 13:49:47.075 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 24.2615ms
[2024-02-02 13:49:47.160 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 13:49:47.160 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:49:47.160 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 13:49:47.177 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 13:49:47.180 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.9221ms.
[2024-02-02 13:49:47.180 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 13:49:47.181 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 20.3607ms
[2024-02-02 13:49:47.181 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 13:49:47.181 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 20.9776ms
[2024-02-02 13:49:47.256 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 13:49:47.258 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 13:49:47.258 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 13:49:47.275 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 13:49:47.393 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 118.0048ms.
[2024-02-02 13:49:47.394 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 13:49:47.394 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 136.1273ms
[2024-02-02 13:49:47.394 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 13:49:47.394 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 138.6008ms
[2024-02-02 13:49:47.459 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 13:49:47.459 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:49:47.460 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:49:47.472 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:49:47.602 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 129.7607ms.
[2024-02-02 13:49:47.602 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 13:49:47.603 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 142.7371ms
[2024-02-02 13:49:47.603 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 13:49:47.603 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 143.8853ms
[2024-02-02 13:50:51.684 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 13:50:51.684 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN|USER)
[2024-02-02 13:50:51.684 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 13:50:51.684 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 401 - application/json;+charset=utf-8 0.9083ms
[2024-02-02 13:51:00.207 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 13:51:00.217 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 13:51:00.227 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 13:51:00.243 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 13:51:00.404 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkResult in 160.9996ms.
[2024-02-02 13:51:00.408 +01:00  INF]  Executing StatusCodeResult, setting HTTP status code 200
[2024-02-02 13:51:00.408 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 181.5887ms
[2024-02-02 13:51:00.409 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 13:51:00.409 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 0 - 201.5003ms
[2024-02-02 14:27:06.058 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 14:27:06.359 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 14:27:06.359 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 14:27:06.360 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 14:27:06.360 +01:00  INF]  Hosting environment: Development
[2024-02-02 14:27:06.360 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 14:27:09.687 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 14:27:10.045 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 358.7789ms
[2024-02-02 14:27:10.056 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 14:27:10.056 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 14:27:10.064 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 7.6895ms
[2024-02-02 14:27:10.109 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 52.5835ms
[2024-02-02 14:27:10.235 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 14:27:10.492 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 258.1985ms
[2024-02-02 14:27:14.855 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:27:15.128 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:27:15.182 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:27:15.520 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:27:16.143 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 613.0329ms.
[2024-02-02 14:27:16.159 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:27:16.216 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 1026.7225ms
[2024-02-02 14:27:16.217 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:27:16.220 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 1364.4136ms
[2024-02-02 14:28:20.246 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 14:28:20.250 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:28:20.257 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:28:20.316 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:28:20.465 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 149.1892ms.
[2024-02-02 14:28:20.466 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:28:20.507 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 249.1402ms
[2024-02-02 14:28:20.507 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:28:20.507 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 261.1768ms
[2024-02-02 14:28:20.568 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 14:28:20.573 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:28:20.579 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:28:20.593 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 14:28:22.135 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1541.7317ms.
[2024-02-02 14:28:22.135 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:28:22.137 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1557.5759ms
[2024-02-02 14:28:22.137 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:28:22.137 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1569.7251ms
[2024-02-02 14:28:22.226 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 14:28:22.227 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:28:22.232 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:28:22.249 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 14:28:22.379 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 130.6945ms.
[2024-02-02 14:28:22.380 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:28:22.380 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 147.9238ms
[2024-02-02 14:28:22.380 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:28:22.380 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 154.0818ms
[2024-02-02 14:28:22.477 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 14:28:22.478 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:28:22.482 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:28:22.502 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 14:28:22.515 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 12.3835ms.
[2024-02-02 14:28:22.515 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:28:22.515 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 33.1887ms
[2024-02-02 14:28:22.516 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:28:22.516 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 38.7643ms
[2024-02-02 14:28:22.586 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 14:28:22.587 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:28:22.593 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 14:28:22.626 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 14:28:22.697 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 70.564ms.
[2024-02-02 14:28:22.697 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 14:28:22.704 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 110.5071ms
[2024-02-02 14:28:22.704 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:28:22.704 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 117.9020ms
[2024-02-02 14:28:22.773 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:28:22.777 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:28:22.782 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:28:22.799 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:28:22.862 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 63.0023ms.
[2024-02-02 14:28:22.863 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 14:28:22.864 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 81.5215ms
[2024-02-02 14:28:22.864 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:28:22.864 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 91.4100ms
[2024-02-02 14:28:22.932 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 14:28:22.936 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:28:22.943 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:28:23.186 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:28:23.337 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 151.2778ms.
[2024-02-02 14:28:23.337 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:28:23.338 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 394.3544ms
[2024-02-02 14:28:23.338 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:28:23.338 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 406.4604ms
[2024-02-02 14:28:23.417 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:28:23.418 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:28:23.418 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:28:23.436 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:28:23.593 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 157.4762ms.
[2024-02-02 14:28:23.593 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:28:23.594 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 175.1504ms
[2024-02-02 14:28:23.594 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:28:23.594 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 176.5724ms
[2024-02-02 14:30:55.315 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 14:30:55.315 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:30:55.315 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:30:55.334 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:30:55.447 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 112.0139ms.
[2024-02-02 14:30:55.447 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:30:55.448 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 132.117ms
[2024-02-02 14:30:55.448 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:30:55.448 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 133.2980ms
[2024-02-02 14:30:55.497 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 14:30:55.497 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:30:55.498 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:30:55.515 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 14:30:57.475 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1959.5731ms.
[2024-02-02 14:30:57.476 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:30:57.476 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1978.3421ms
[2024-02-02 14:30:57.476 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:30:57.477 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1979.5961ms
[2024-02-02 14:30:57.558 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 14:30:57.559 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:30:57.559 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:30:57.576 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 14:30:57.700 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 124.4504ms.
[2024-02-02 14:30:57.701 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:30:57.701 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 142.3532ms
[2024-02-02 14:30:57.701 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:30:57.702 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 143.4678ms
[2024-02-02 14:30:57.780 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 14:30:57.780 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:30:57.780 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:30:57.795 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 14:30:57.799 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.3071ms.
[2024-02-02 14:30:57.800 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:30:57.800 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 19.8615ms
[2024-02-02 14:30:57.801 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:30:57.801 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 21.3392ms
[2024-02-02 14:30:57.876 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 14:30:57.877 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:30:57.877 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 14:30:57.893 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 14:30:57.898 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.6604ms.
[2024-02-02 14:30:57.898 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 14:30:57.898 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 21.2951ms
[2024-02-02 14:30:57.898 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:30:57.898 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 22.8978ms
[2024-02-02 14:30:57.970 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:30:57.971 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:30:57.971 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:30:57.988 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:30:58.073 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 83.7507ms.
[2024-02-02 14:30:58.073 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 14:30:58.073 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 101.9232ms
[2024-02-02 14:30:58.074 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:30:58.074 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 104.2076ms
[2024-02-02 14:30:58.156 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 14:30:58.157 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:30:58.158 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:30:58.178 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:30:58.287 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 109.6247ms.
[2024-02-02 14:30:58.288 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:30:58.288 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 130.4982ms
[2024-02-02 14:30:58.288 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:30:58.289 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 132.3711ms
[2024-02-02 14:30:58.375 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:30:58.376 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:30:58.376 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:30:58.398 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:30:58.529 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 131.4538ms.
[2024-02-02 14:30:58.529 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:30:58.530 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 153.4857ms
[2024-02-02 14:30:58.530 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:30:58.530 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 154.5469ms
[2024-02-02 14:32:35.478 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 14:32:35.478 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:32:35.478 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:32:35.495 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:32:35.611 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 115.079ms.
[2024-02-02 14:32:35.611 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:32:35.611 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 133.2913ms
[2024-02-02 14:32:35.611 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:32:35.612 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 134.0129ms
[2024-02-02 14:32:35.681 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 14:32:35.681 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:32:35.681 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:32:35.700 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 14:32:37.375 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1674.8153ms.
[2024-02-02 14:32:37.375 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:32:37.375 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1693.5536ms
[2024-02-02 14:32:37.375 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:32:37.375 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1694.6187ms
[2024-02-02 14:32:37.479 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 14:32:37.479 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:32:37.479 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:32:37.494 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 14:32:37.642 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 147.4684ms.
[2024-02-02 14:32:37.642 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:32:37.642 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 162.6075ms
[2024-02-02 14:32:37.642 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:32:37.642 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 163.4822ms
[2024-02-02 14:32:37.727 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 14:32:37.727 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:32:37.727 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:32:37.740 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 14:32:37.743 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.5655ms.
[2024-02-02 14:32:37.744 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:32:37.744 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 16.2366ms
[2024-02-02 14:32:37.744 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:32:37.744 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 17.3064ms
[2024-02-02 14:32:37.852 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 14:32:37.852 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:32:37.852 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 14:32:37.865 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 14:32:37.867 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.9752ms.
[2024-02-02 14:32:37.868 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 14:32:37.868 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 15.9059ms
[2024-02-02 14:32:37.868 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:32:37.868 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 16.6061ms
[2024-02-02 14:32:37.947 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:32:37.947 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:32:37.948 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:32:37.965 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:32:38.044 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 78.5922ms.
[2024-02-02 14:32:38.044 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 14:32:38.044 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 96.2474ms
[2024-02-02 14:32:38.044 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:32:38.044 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 97.2080ms
[2024-02-02 14:32:38.119 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 14:32:38.120 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:32:38.120 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:32:38.134 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:32:38.251 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 117.4139ms.
[2024-02-02 14:32:38.251 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:32:38.252 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 131.4117ms
[2024-02-02 14:32:38.252 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:32:38.252 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 133.1567ms
[2024-02-02 14:32:38.324 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:32:38.324 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:32:38.324 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:32:38.338 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:32:38.485 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 147.0023ms.
[2024-02-02 14:32:38.485 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:32:38.485 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 160.8568ms
[2024-02-02 14:32:38.485 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:32:38.486 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 161.9817ms
[2024-02-02 14:33:23.228 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 14:33:23.228 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:33:23.228 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:33:23.243 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:33:23.358 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 115.6152ms.
[2024-02-02 14:33:23.359 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:33:23.359 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 130.3765ms
[2024-02-02 14:33:23.359 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:33:23.359 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 131.0548ms
[2024-02-02 14:33:23.430 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 14:33:23.430 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:33:23.430 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:33:23.443 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 14:33:25.642 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2199.0901ms.
[2024-02-02 14:33:25.642 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:33:25.642 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2211.9002ms
[2024-02-02 14:33:25.642 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:33:25.643 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2212.9074ms
[2024-02-02 14:33:25.699 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 14:33:25.700 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:33:25.700 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:33:25.721 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 14:33:25.926 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 204.49ms.
[2024-02-02 14:33:25.926 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:33:25.926 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 226.2972ms
[2024-02-02 14:33:25.926 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:33:25.927 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 227.4100ms
[2024-02-02 14:33:26.014 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 14:33:26.014 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:33:26.014 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:33:26.030 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 14:33:26.034 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.817ms.
[2024-02-02 14:33:26.034 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:33:26.034 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 20.0101ms
[2024-02-02 14:33:26.034 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:33:26.035 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 20.8128ms
[2024-02-02 14:33:26.130 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 14:33:26.130 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:33:26.130 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 14:33:26.155 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 14:33:26.160 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.8241ms.
[2024-02-02 14:33:26.160 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 14:33:26.160 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 29.9373ms
[2024-02-02 14:33:26.160 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:33:26.160 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 30.6603ms
[2024-02-02 14:33:26.251 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:33:26.252 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:33:26.252 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:33:26.270 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:33:26.341 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 70.8881ms.
[2024-02-02 14:33:26.342 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 14:33:26.342 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 89.8143ms
[2024-02-02 14:33:26.342 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:33:26.342 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 90.8506ms
[2024-02-02 14:33:26.437 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 14:33:26.437 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:33:26.438 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:33:26.453 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:33:26.617 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 164.3737ms.
[2024-02-02 14:33:26.617 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:33:26.618 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 180.1488ms
[2024-02-02 14:33:26.618 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:33:26.618 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 180.9920ms
[2024-02-02 14:33:26.691 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:33:26.692 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:33:26.692 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:33:26.712 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:33:26.860 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 148.3093ms.
[2024-02-02 14:33:26.860 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:33:26.861 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 168.893ms
[2024-02-02 14:33:26.861 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:33:26.861 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 169.9056ms
[2024-02-02 14:33:32.988 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:33:32.989 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:33:32.990 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:33:33.008 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:33:33.240 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 232.0507ms.
[2024-02-02 14:33:33.241 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:33:33.241 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 251.1219ms
[2024-02-02 14:33:33.241 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:33:33.241 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 253.0988ms
[2024-02-02 14:34:26.206 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 14:34:26.207 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:34:26.207 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:34:26.218 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:34:26.326 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 108.289ms.
[2024-02-02 14:34:26.326 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:34:26.327 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 120.0146ms
[2024-02-02 14:34:26.327 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:34:26.327 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 120.8684ms
[2024-02-02 14:34:26.414 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 14:34:26.414 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:34:26.414 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:34:26.431 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 14:34:28.958 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2526.4854ms.
[2024-02-02 14:34:28.958 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:34:28.958 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2544.0652ms
[2024-02-02 14:34:28.958 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:34:28.958 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2544.7477ms
[2024-02-02 14:34:29.067 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 14:34:29.067 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:34:29.067 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:34:29.085 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 14:34:29.297 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 212.1477ms.
[2024-02-02 14:34:29.297 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:34:29.297 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 229.9028ms
[2024-02-02 14:34:29.298 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:34:29.298 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 230.6119ms
[2024-02-02 14:34:29.394 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 14:34:29.394 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:34:29.394 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:34:29.412 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 14:34:29.417 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.5077ms.
[2024-02-02 14:34:29.417 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:34:29.417 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 22.9945ms
[2024-02-02 14:34:29.417 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:34:29.417 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 23.6511ms
[2024-02-02 14:34:29.504 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 14:34:29.505 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:34:29.505 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 14:34:29.522 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 14:34:29.525 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.5954ms.
[2024-02-02 14:34:29.526 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 14:34:29.526 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 21.133ms
[2024-02-02 14:34:29.526 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:34:29.526 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 21.7215ms
[2024-02-02 14:34:29.599 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:34:29.599 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:34:29.599 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:34:29.615 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:34:29.767 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 151.6909ms.
[2024-02-02 14:34:29.767 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 14:34:29.767 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 168.1044ms
[2024-02-02 14:34:29.768 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:34:29.768 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 168.9582ms
[2024-02-02 14:34:29.852 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 14:34:29.853 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:34:29.853 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:34:29.874 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:34:30.055 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 180.3683ms.
[2024-02-02 14:34:30.055 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:34:30.055 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 201.9578ms
[2024-02-02 14:34:30.055 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:34:30.055 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 202.9563ms
[2024-02-02 14:34:30.134 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:34:30.134 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:34:30.134 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:34:30.151 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:34:30.324 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 172.7322ms.
[2024-02-02 14:34:30.324 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:34:30.325 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 190.3325ms
[2024-02-02 14:34:30.325 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:34:30.325 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 191.1424ms
[2024-02-02 14:35:08.295 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 14:35:08.296 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:35:08.296 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:08.311 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:08.419 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 108.5281ms.
[2024-02-02 14:35:08.419 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:35:08.420 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 124.0232ms
[2024-02-02 14:35:08.420 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:35:08.420 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 124.5562ms
[2024-02-02 14:35:08.507 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 14:35:08.507 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:35:08.507 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:08.523 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:10.317 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1794.1817ms.
[2024-02-02 14:35:10.317 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:35:10.317 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1810.0196ms
[2024-02-02 14:35:10.317 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:35:10.318 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1810.6789ms
[2024-02-02 14:35:10.394 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 14:35:10.395 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:35:10.395 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:10.407 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:10.514 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 107.6824ms.
[2024-02-02 14:35:10.515 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:35:10.515 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 119.9508ms
[2024-02-02 14:35:10.515 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:35:10.515 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 120.5688ms
[2024-02-02 14:35:10.566 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 14:35:10.566 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:35:10.567 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:10.580 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:10.583 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.1814ms.
[2024-02-02 14:35:10.584 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:35:10.584 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 16.9955ms
[2024-02-02 14:35:10.584 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:35:10.584 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 17.7950ms
[2024-02-02 14:35:10.678 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 14:35:10.679 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:35:10.679 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 14:35:10.691 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:10.695 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.5948ms.
[2024-02-02 14:35:10.695 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 14:35:10.695 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 16.1904ms
[2024-02-02 14:35:10.695 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:35:10.695 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 16.7937ms
[2024-02-02 14:35:10.756 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:35:10.757 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:35:10.757 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:35:10.770 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:10.891 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 120.5889ms.
[2024-02-02 14:35:10.891 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 14:35:10.892 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 134.4537ms
[2024-02-02 14:35:10.892 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:35:10.892 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 135.2485ms
[2024-02-02 14:35:10.990 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 14:35:10.990 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:35:10.991 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:11.007 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:11.158 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 151.5144ms.
[2024-02-02 14:35:11.158 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:35:11.159 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 168.1016ms
[2024-02-02 14:35:11.159 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:35:11.159 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 168.9041ms
[2024-02-02 14:35:11.242 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:35:11.243 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:35:11.243 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:11.259 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:11.435 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 175.1472ms.
[2024-02-02 14:35:11.435 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:35:11.435 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 191.7619ms
[2024-02-02 14:35:11.435 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:35:11.435 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 192.8824ms
[2024-02-02 14:35:44.693 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 14:35:44.693 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:35:44.693 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:44.709 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:44.809 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 100.1928ms.
[2024-02-02 14:35:44.810 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:35:44.810 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 116.8903ms
[2024-02-02 14:35:44.810 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:35:44.810 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 117.3845ms
[2024-02-02 14:35:44.892 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 14:35:44.892 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:35:44.892 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:44.908 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:46.835 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1926.5275ms.
[2024-02-02 14:35:46.835 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:35:46.835 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1942.7992ms
[2024-02-02 14:35:46.835 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:35:46.836 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1943.6574ms
[2024-02-02 14:35:46.928 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 14:35:46.928 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:35:46.928 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:46.941 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:47.047 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 106.0709ms.
[2024-02-02 14:35:47.047 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:35:47.047 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 118.6104ms
[2024-02-02 14:35:47.047 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:35:47.047 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 119.4659ms
[2024-02-02 14:35:47.100 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 14:35:47.100 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:35:47.100 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:47.114 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:47.117 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.1663ms.
[2024-02-02 14:35:47.117 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:35:47.118 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 17.2385ms
[2024-02-02 14:35:47.118 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:35:47.118 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 18.0103ms
[2024-02-02 14:35:47.209 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 14:35:47.210 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:35:47.210 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 14:35:47.225 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:47.227 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.2102ms.
[2024-02-02 14:35:47.227 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 14:35:47.228 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 17.7776ms
[2024-02-02 14:35:47.228 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:35:47.228 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 18.3452ms
[2024-02-02 14:35:47.288 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:35:47.289 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:35:47.289 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:35:47.300 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:47.349 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 49.5124ms.
[2024-02-02 14:35:47.350 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 14:35:47.350 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 60.6974ms
[2024-02-02 14:35:47.350 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:35:47.350 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 61.7063ms
[2024-02-02 14:35:47.415 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 14:35:47.416 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:35:47.416 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:47.427 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:47.541 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 113.3635ms.
[2024-02-02 14:35:47.541 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:35:47.541 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 125.1467ms
[2024-02-02 14:35:47.541 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:35:47.541 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 125.7937ms
[2024-02-02 14:35:47.633 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:35:47.634 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:35:47.634 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:35:47.648 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:35:47.788 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 140.4484ms.
[2024-02-02 14:35:47.789 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:35:47.789 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 154.9891ms
[2024-02-02 14:35:47.789 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:35:47.789 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 155.9492ms
[2024-02-02 14:37:39.618 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:37:39.619 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:37:39.625 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:37:39.644 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:37:39.680 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 35.6208ms.
[2024-02-02 14:37:39.680 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 14:37:39.687 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 60.8136ms
[2024-02-02 14:37:39.687 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:37:39.687 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - text/plain;+charset=utf-8 69.1002ms
[2024-02-02 14:44:16.864 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 14:44:17.101 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 14:44:17.101 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 14:44:17.102 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 14:44:17.103 +01:00  INF]  Hosting environment: Development
[2024-02-02 14:44:17.103 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 14:44:17.414 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 14:44:17.722 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 309.0074ms
[2024-02-02 14:44:17.738 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 14:44:17.738 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 14:44:17.743 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 4.4382ms
[2024-02-02 14:44:17.777 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 38.8694ms
[2024-02-02 14:44:17.898 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 14:44:18.011 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 112.6611ms
[2024-02-02 14:44:23.416 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:44:23.733 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:44:23.772 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:44:24.131 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:44:24.771 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 631.9018ms.
[2024-02-02 14:44:24.783 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:44:24.833 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 1054.1291ms
[2024-02-02 14:44:24.834 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:44:24.836 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 1420.2105ms
[2024-02-02 14:47:44.729 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 14:47:44.767 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:47:44.780 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:47:44.838 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:47:45.009 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 170.2241ms.
[2024-02-02 14:47:45.010 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:47:45.054 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 273.4218ms
[2024-02-02 14:47:45.054 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:47:45.054 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 325.8107ms
[2024-02-02 14:47:45.127 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 14:47:45.132 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:47:45.137 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:47:45.150 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 14:47:47.511 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2360.6814ms.
[2024-02-02 14:47:47.511 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:47:47.513 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2375.4691ms
[2024-02-02 14:47:47.513 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:47:47.514 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2386.2476ms
[2024-02-02 14:47:47.621 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 14:47:47.622 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:47:47.627 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:47:47.642 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 14:47:47.770 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 128.1358ms.
[2024-02-02 14:47:47.770 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:47:47.771 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 143.8331ms
[2024-02-02 14:47:47.771 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:47:47.771 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 149.6337ms
[2024-02-02 14:47:47.845 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 14:47:47.845 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:47:47.849 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:47:47.869 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 14:47:47.882 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 13.1199ms.
[2024-02-02 14:47:47.882 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:47:47.883 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 33.7703ms
[2024-02-02 14:47:47.883 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:47:47.883 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 38.5225ms
[2024-02-02 14:47:47.971 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 14:47:47.972 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:47:47.975 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 14:47:47.991 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 14:47:48.062 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 71.0226ms.
[2024-02-02 14:47:48.062 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 14:47:48.069 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 93.244ms
[2024-02-02 14:47:48.069 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:47:48.069 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 97.7791ms
[2024-02-02 14:47:48.144 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:47:48.149 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:47:48.154 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:47:48.169 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:47:48.232 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 62.9924ms.
[2024-02-02 14:47:48.233 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 14:47:48.233 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 79.0303ms
[2024-02-02 14:47:48.233 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:47:48.234 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 89.3365ms
[2024-02-02 14:47:48.302 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:47:48.304 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:47:48.304 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:47:48.322 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:47:48.461 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 139.1087ms.
[2024-02-02 14:47:48.461 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:47:48.461 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 157.3984ms
[2024-02-02 14:47:48.462 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:47:48.462 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 160.2258ms
[2024-02-02 14:47:48.524 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 14:47:48.527 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:47:48.532 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:47:48.579 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:47:48.715 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 135.6709ms.
[2024-02-02 14:47:48.715 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:47:48.715 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 183.0262ms
[2024-02-02 14:47:48.715 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:47:48.715 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 190.9704ms
[2024-02-02 14:47:48.776 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:47:48.777 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:47:48.781 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:47:48.794 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:47:48.935 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 141.033ms.
[2024-02-02 14:47:48.936 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:47:48.936 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 154.818ms
[2024-02-02 14:47:48.936 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:47:48.936 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 160.2620ms
[2024-02-02 14:48:24.401 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:48:24.402 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:48:24.402 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:48:24.422 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:48:24.499 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundObjectResult in 77.0243ms.
[2024-02-02 14:48:24.499 +01:00  INF]  Executing NotFoundObjectResult, writing value of type 'System.String'.
[2024-02-02 14:48:24.500 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 97.7986ms
[2024-02-02 14:48:24.500 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:48:24.500 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 404 - text/plain;+charset=utf-8 99.1119ms
[2024-02-02 14:48:49.051 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 14:48:49.248 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 14:48:49.248 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 14:48:49.249 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 14:48:49.250 +01:00  INF]  Hosting environment: Development
[2024-02-02 14:48:49.250 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 14:48:52.829 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 14:48:53.057 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 227.9447ms
[2024-02-02 14:48:53.067 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 14:48:53.067 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 14:48:53.072 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 4.5766ms
[2024-02-02 14:48:53.119 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 52.0599ms
[2024-02-02 14:48:53.276 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 14:48:53.398 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 121.3460ms
[2024-02-02 14:49:02.418 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:49:02.644 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:49:02.684 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:49:02.925 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:49:03.393 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 458.8371ms.
[2024-02-02 14:49:03.406 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:49:03.445 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 756.7697ms
[2024-02-02 14:49:03.446 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:49:03.447 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 1029.1023ms
[2024-02-02 14:49:50.373 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 14:49:50.553 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 14:49:50.553 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 14:49:50.554 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 14:49:50.554 +01:00  INF]  Hosting environment: Development
[2024-02-02 14:49:50.554 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 14:49:50.944 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 14:49:51.175 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 232.6246ms
[2024-02-02 14:49:51.183 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 14:49:51.183 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 14:49:51.191 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 7.3574ms
[2024-02-02 14:49:51.260 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 77.2815ms
[2024-02-02 14:49:51.394 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 14:49:51.521 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 126.7614ms
[2024-02-02 14:49:58.990 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:49:59.241 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:49:59.277 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:49:59.564 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:00.090 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 517.0362ms.
[2024-02-02 14:50:00.105 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:50:00.155 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 872.4273ms
[2024-02-02 14:50:00.156 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:50:00.157 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 1167.2997ms
[2024-02-02 14:50:05.523 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:50:05.536 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:50:05.542 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:50:05.578 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:05.791 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 212.9824ms.
[2024-02-02 14:50:05.792 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:50:05.793 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 250.8965ms
[2024-02-02 14:50:05.793 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:50:05.793 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 270.7112ms
[2024-02-02 14:50:43.315 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 14:50:43.320 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:50:43.326 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:50:43.365 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:43.505 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 139.3819ms.
[2024-02-02 14:50:43.506 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:50:43.541 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 214.6694ms
[2024-02-02 14:50:43.541 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:50:43.541 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 226.2324ms
[2024-02-02 14:50:43.621 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 14:50:43.623 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:50:43.629 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:50:43.648 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:46.276 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2628.5054ms.
[2024-02-02 14:50:46.277 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:50:46.278 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2648.9046ms
[2024-02-02 14:50:46.278 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:50:46.279 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2657.6551ms
[2024-02-02 14:50:46.377 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 14:50:46.377 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:50:46.383 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:50:46.397 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:46.572 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 174.6412ms.
[2024-02-02 14:50:46.572 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:50:46.573 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 189.6908ms
[2024-02-02 14:50:46.573 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:50:46.573 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 196.2549ms
[2024-02-02 14:50:46.660 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 14:50:46.660 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:50:46.664 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:50:46.679 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:46.693 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 14.6242ms.
[2024-02-02 14:50:46.694 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:50:46.694 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 29.8161ms
[2024-02-02 14:50:46.694 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:50:46.695 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 35.2033ms
[2024-02-02 14:50:46.787 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 14:50:46.788 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:50:46.792 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 14:50:46.811 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:46.880 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 68.4675ms.
[2024-02-02 14:50:46.880 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 14:50:46.889 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 96.3929ms
[2024-02-02 14:50:46.889 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:50:46.889 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 101.9457ms
[2024-02-02 14:50:46.946 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:50:46.949 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:50:46.949 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:50:46.970 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:47.169 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 199.4447ms.
[2024-02-02 14:50:47.170 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:50:47.170 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 220.971ms
[2024-02-02 14:50:47.170 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:50:47.170 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 224.0088ms
[2024-02-02 14:50:47.245 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:50:47.246 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:50:47.246 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:50:47.266 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:47.403 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 137.3188ms.
[2024-02-02 14:50:47.403 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:50:47.404 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 157.5411ms
[2024-02-02 14:50:47.404 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:50:47.404 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 158.7779ms
[2024-02-02 14:50:47.479 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 14:50:47.483 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:50:47.487 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:50:47.532 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:47.715 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 183.2534ms.
[2024-02-02 14:50:47.715 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:50:47.716 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 228.1881ms
[2024-02-02 14:50:47.716 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:50:47.716 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 236.8385ms
[2024-02-02 14:50:47.795 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:50:47.796 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:50:47.801 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:50:47.819 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:50:47.976 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 157.2696ms.
[2024-02-02 14:50:47.976 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:50:47.977 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 175.5548ms
[2024-02-02 14:50:47.977 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:50:47.977 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 182.0044ms
[2024-02-02 14:55:50.903 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:55:50.913 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:55:50.913 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:55:50.936 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:55:51.131 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 195.0127ms.
[2024-02-02 14:55:51.132 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:55:51.132 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 219.2498ms
[2024-02-02 14:55:51.132 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:55:51.133 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 230.8507ms
[2024-02-02 14:58:14.707 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 14:58:14.708 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:58:14.714 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:58:14.735 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:58:14.851 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 115.8036ms.
[2024-02-02 14:58:14.851 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:58:14.852 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 137.6914ms
[2024-02-02 14:58:14.852 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 14:58:14.852 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 145.9278ms
[2024-02-02 14:58:14.922 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 14:58:14.922 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:58:14.922 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:58:14.941 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 14:58:17.191 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2250.3539ms.
[2024-02-02 14:58:17.192 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:58:17.192 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2269.6056ms
[2024-02-02 14:58:17.192 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 14:58:17.192 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2270.6903ms
[2024-02-02 14:58:17.329 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 14:58:17.329 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:58:17.329 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:58:17.349 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 14:58:17.457 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 107.4573ms.
[2024-02-02 14:58:17.457 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:58:17.457 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 127.7556ms
[2024-02-02 14:58:17.457 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 14:58:17.458 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 128.9917ms
[2024-02-02 14:58:17.547 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 14:58:17.547 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:58:17.547 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:58:17.564 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 14:58:17.568 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.8479ms.
[2024-02-02 14:58:17.568 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 14:58:17.569 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 21.2187ms
[2024-02-02 14:58:17.569 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 14:58:17.569 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 22.0946ms
[2024-02-02 14:58:17.656 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 14:58:17.657 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:58:17.657 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 14:58:17.679 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 14:58:17.684 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.007ms.
[2024-02-02 14:58:17.684 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 14:58:17.685 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 27.3924ms
[2024-02-02 14:58:17.685 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 14:58:17.685 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 28.9880ms
[2024-02-02 14:58:17.763 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:58:17.763 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:58:17.764 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:58:17.781 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:58:17.899 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 118.4433ms.
[2024-02-02 14:58:17.899 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:58:17.900 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 135.8836ms
[2024-02-02 14:58:17.900 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 14:58:17.900 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 136.7243ms
[2024-02-02 14:58:17.982 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 14:58:17.983 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:58:17.983 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 14:58:18.000 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 14:58:18.137 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 136.7645ms.
[2024-02-02 14:58:18.137 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:58:18.138 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 154.5637ms
[2024-02-02 14:58:18.138 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 14:58:18.138 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 155.5861ms
[2024-02-02 14:58:18.231 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 14:58:18.232 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:58:18.232 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:58:18.248 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:58:18.335 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 86.4978ms.
[2024-02-02 14:58:18.335 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:58:18.335 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 103.3895ms
[2024-02-02 14:58:18.335 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 14:58:18.336 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 104.7795ms
[2024-02-02 14:58:18.406 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 14:58:18.406 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:58:18.406 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 14:58:18.419 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 14:58:18.544 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 125.1979ms.
[2024-02-02 14:58:18.544 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 14:58:18.545 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 138.0945ms
[2024-02-02 14:58:18.545 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 14:58:18.545 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 139.0834ms
[2024-02-02 15:02:18.171 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:02:18.172 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:02:18.172 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:02:18.213 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:18.408 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 195.0637ms.
[2024-02-02 15:02:18.408 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:02:18.408 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 226.8058ms
[2024-02-02 15:02:18.408 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:02:18.409 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 246.1137ms
[2024-02-02 15:02:20.614 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:02:20.614 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:02:20.614 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:02:20.633 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:20.770 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 137.5395ms.
[2024-02-02 15:02:20.771 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:02:20.771 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 156.2871ms
[2024-02-02 15:02:20.771 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:02:20.771 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 157.1736ms
[2024-02-02 15:02:21.945 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:02:21.946 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:02:21.946 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:02:21.966 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:22.110 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 143.9189ms.
[2024-02-02 15:02:22.110 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:02:22.110 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 163.6513ms
[2024-02-02 15:02:22.110 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:02:22.110 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 165.2399ms
[2024-02-02 15:02:24.936 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:02:24.937 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:02:24.937 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:02:24.951 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:25.080 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 128.8617ms.
[2024-02-02 15:02:25.081 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:02:25.081 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 144.3007ms
[2024-02-02 15:02:25.081 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:02:25.081 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 145.3856ms
[2024-02-02 15:02:32.629 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:02:32.630 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:02:32.630 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:02:32.643 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:32.752 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 109.5773ms.
[2024-02-02 15:02:32.753 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:02:32.753 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 123.2166ms
[2024-02-02 15:02:32.753 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:02:32.753 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 123.8975ms
[2024-02-02 15:02:32.843 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:02:32.844 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:02:32.844 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:02:32.863 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:35.276 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2412.9329ms.
[2024-02-02 15:02:35.277 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:02:35.277 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2433.2603ms
[2024-02-02 15:02:35.277 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:02:35.278 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2434.4041ms
[2024-02-02 15:02:35.402 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:02:35.402 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:02:35.402 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:02:35.416 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:35.538 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 121.4724ms.
[2024-02-02 15:02:35.538 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:02:35.539 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 136.4585ms
[2024-02-02 15:02:35.539 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:02:35.539 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 137.5308ms
[2024-02-02 15:02:35.559 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:02:35.559 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:02:35.560 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:02:35.576 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:35.581 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.8284ms.
[2024-02-02 15:02:35.581 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:02:35.581 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 21.5393ms
[2024-02-02 15:02:35.581 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:02:35.581 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 22.4255ms
[2024-02-02 15:02:35.674 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:02:35.674 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:02:35.674 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:02:35.693 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:35.698 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.7485ms.
[2024-02-02 15:02:35.698 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:02:35.698 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 23.7668ms
[2024-02-02 15:02:35.698 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:02:35.698 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 24.6605ms
[2024-02-02 15:02:35.751 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:02:35.751 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:02:35.751 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:02:35.764 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:35.876 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 111.2644ms.
[2024-02-02 15:02:35.876 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:02:35.876 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 124.7288ms
[2024-02-02 15:02:35.876 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:02:35.877 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 125.6722ms
[2024-02-02 15:02:35.957 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:02:35.957 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:02:35.957 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:02:35.973 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:36.083 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 109.7299ms.
[2024-02-02 15:02:36.083 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:02:36.084 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 126.4762ms
[2024-02-02 15:02:36.084 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:02:36.084 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 127.6622ms
[2024-02-02 15:02:36.145 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:02:36.145 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:02:36.145 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:02:36.157 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:36.282 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 124.6816ms.
[2024-02-02 15:02:36.283 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:02:36.283 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 137.3823ms
[2024-02-02 15:02:36.283 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:02:36.283 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 138.4369ms
[2024-02-02 15:02:36.335 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:02:36.336 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:02:36.336 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:02:36.354 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:02:36.545 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 190.8885ms.
[2024-02-02 15:02:36.545 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:02:36.546 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 209.7788ms
[2024-02-02 15:02:36.546 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:02:36.546 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 210.8480ms
[2024-02-02 15:03:16.100 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:03:16.100 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:03:16.100 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:03:16.116 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:03:16.200 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 83.6539ms.
[2024-02-02 15:03:16.201 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:03:16.201 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 100.8918ms
[2024-02-02 15:03:16.201 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:03:16.201 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 101.6975ms
[2024-02-02 15:03:16.286 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:03:16.286 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:03:16.286 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:03:16.299 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:03:19.299 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2999.9475ms.
[2024-02-02 15:03:19.300 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:03:19.300 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 3013.6772ms
[2024-02-02 15:03:19.300 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:03:19.300 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 3014.6165ms
[2024-02-02 15:03:19.453 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:03:19.453 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:03:19.453 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:03:19.466 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:03:19.627 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 161.0763ms.
[2024-02-02 15:03:19.627 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:03:19.627 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 174.1872ms
[2024-02-02 15:03:19.628 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:03:19.628 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 174.8167ms
[2024-02-02 15:03:19.689 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:03:19.690 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:03:19.690 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:03:19.704 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:03:19.708 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.6997ms.
[2024-02-02 15:03:19.708 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:03:19.708 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 18.3198ms
[2024-02-02 15:03:19.708 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:03:19.708 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 18.9920ms
[2024-02-02 15:03:19.780 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:03:19.780 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:03:19.781 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:03:19.799 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:03:19.802 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.4917ms.
[2024-02-02 15:03:19.802 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:03:19.803 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 22.2639ms
[2024-02-02 15:03:19.803 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:03:19.803 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 22.8761ms
[2024-02-02 15:03:19.859 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:03:19.860 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:03:19.861 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:03:19.882 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:03:20.049 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 166.4468ms.
[2024-02-02 15:03:20.049 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:03:20.049 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 187.7263ms
[2024-02-02 15:03:20.049 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:03:20.049 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 189.5952ms
[2024-02-02 15:03:20.131 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:03:20.131 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:03:20.131 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:03:20.144 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:03:20.256 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 112.2843ms.
[2024-02-02 15:03:20.256 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:03:20.256 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 125.1334ms
[2024-02-02 15:03:20.256 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:03:20.257 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 125.8021ms
[2024-02-02 15:03:20.335 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:03:20.335 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:03:20.336 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:03:20.349 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:03:20.446 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 96.9525ms.
[2024-02-02 15:03:20.446 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:03:20.446 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 110.5774ms
[2024-02-02 15:03:20.446 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:03:20.446 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 111.4520ms
[2024-02-02 15:03:20.508 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:03:20.508 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:03:20.508 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:03:20.521 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:03:20.643 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 121.9691ms.
[2024-02-02 15:03:20.643 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:03:20.644 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 135.1897ms
[2024-02-02 15:03:20.644 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:03:20.644 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 136.0853ms
[2024-02-02 15:04:59.292 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:04:59.292 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:04:59.292 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:04:59.308 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:04:59.424 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 115.658ms.
[2024-02-02 15:04:59.424 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:04:59.424 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 132.1978ms
[2024-02-02 15:04:59.424 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:04:59.425 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 133.0887ms
[2024-02-02 15:04:59.531 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:04:59.531 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:04:59.531 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:04:59.552 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:01.931 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2378.4619ms.
[2024-02-02 15:05:01.931 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:05:01.932 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2400.6816ms
[2024-02-02 15:05:01.932 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:05:01.932 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2401.3797ms
[2024-02-02 15:05:02.059 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:05:02.059 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:05:02.059 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:02.070 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:02.169 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 98.9828ms.
[2024-02-02 15:05:02.169 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:02.170 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 110.5376ms
[2024-02-02 15:05:02.170 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:05:02.170 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 111.0973ms
[2024-02-02 15:05:02.249 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:05:02.249 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:05:02.249 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:02.262 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:02.266 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.8023ms.
[2024-02-02 15:05:02.266 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:05:02.267 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 17.1972ms
[2024-02-02 15:05:02.267 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:05:02.267 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 18.0527ms
[2024-02-02 15:05:02.344 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:05:02.345 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:05:02.345 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:05:02.361 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:02.364 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.2584ms.
[2024-02-02 15:05:02.364 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:05:02.365 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 19.391ms
[2024-02-02 15:05:02.365 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:05:02.365 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 20.7143ms
[2024-02-02 15:05:02.453 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:05:02.454 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:05:02.454 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:05:02.469 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:02.592 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 122.6985ms.
[2024-02-02 15:05:02.592 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:02.593 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 138.467ms
[2024-02-02 15:05:02.593 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:05:02.593 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 139.4233ms
[2024-02-02 15:05:02.657 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:05:02.657 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:05:02.657 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:05:02.695 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:02.802 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 107.0012ms.
[2024-02-02 15:05:02.802 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:02.802 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 144.6373ms
[2024-02-02 15:05:02.802 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:05:02.802 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 145.3558ms
[2024-02-02 15:05:02.894 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:05:02.895 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:05:02.895 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:02.907 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:02.998 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 91.3492ms.
[2024-02-02 15:05:02.998 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:02.999 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 103.6163ms
[2024-02-02 15:05:02.999 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:05:02.999 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 104.3755ms
[2024-02-02 15:05:03.083 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:05:03.083 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:05:03.083 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:03.096 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:03.213 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 116.8787ms.
[2024-02-02 15:05:03.213 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:03.213 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 129.8824ms
[2024-02-02 15:05:03.214 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:05:03.214 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 131.0660ms
[2024-02-02 15:05:11.185 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:05:11.186 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:05:11.186 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:11.204 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:11.358 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 153.2614ms.
[2024-02-02 15:05:11.358 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:11.358 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 172.2072ms
[2024-02-02 15:05:11.358 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:05:11.358 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 173.1576ms
[2024-02-02 15:05:48.188 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:05:48.188 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:05:48.188 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:48.232 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:48.345 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 112.3448ms.
[2024-02-02 15:05:48.345 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:48.345 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 157.1769ms
[2024-02-02 15:05:48.345 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:05:48.345 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 157.9059ms
[2024-02-02 15:05:48.383 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:05:48.383 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:05:48.383 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:48.398 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:50.915 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2516.5847ms.
[2024-02-02 15:05:50.915 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:05:50.916 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2532.3943ms
[2024-02-02 15:05:50.916 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:05:50.916 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2533.2780ms
[2024-02-02 15:05:51.043 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:05:51.044 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:05:51.044 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:51.057 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:51.170 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 113.1935ms.
[2024-02-02 15:05:51.170 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:51.171 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 126.6571ms
[2024-02-02 15:05:51.171 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:05:51.171 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 127.4735ms
[2024-02-02 15:05:51.248 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:05:51.248 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:05:51.248 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:51.260 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:51.264 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.4303ms.
[2024-02-02 15:05:51.264 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:05:51.264 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 15.5525ms
[2024-02-02 15:05:51.264 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:05:51.264 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 16.4128ms
[2024-02-02 15:05:51.343 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:05:51.343 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:05:51.343 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:05:51.357 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:51.360 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.0324ms.
[2024-02-02 15:05:51.361 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:05:51.361 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 17.5291ms
[2024-02-02 15:05:51.361 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:05:51.361 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 18.1661ms
[2024-02-02 15:05:51.436 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:05:51.436 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:05:51.436 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:05:51.451 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:51.588 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 137.0794ms.
[2024-02-02 15:05:51.588 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:51.588 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 151.8682ms
[2024-02-02 15:05:51.588 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:05:51.588 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 152.8651ms
[2024-02-02 15:05:51.671 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:05:51.671 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:05:51.671 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:05:51.685 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:51.794 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 109.1029ms.
[2024-02-02 15:05:51.794 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:51.794 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 123.1226ms
[2024-02-02 15:05:51.795 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:05:51.795 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 123.9844ms
[2024-02-02 15:05:51.874 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:05:51.875 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:05:51.875 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:51.886 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:52.000 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 113.692ms.
[2024-02-02 15:05:52.000 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:52.000 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 125.3007ms
[2024-02-02 15:05:52.000 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:05:52.000 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 126.6076ms
[2024-02-02 15:05:52.061 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:05:52.062 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:05:52.062 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:05:52.074 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:05:52.189 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 115.7033ms.
[2024-02-02 15:05:52.190 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:05:52.190 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 128.0816ms
[2024-02-02 15:05:52.190 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:05:52.190 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 128.8150ms
[2024-02-02 15:06:41.280 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:06:41.280 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:06:41.280 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:06:41.294 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:06:41.413 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 118.4601ms.
[2024-02-02 15:06:41.413 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:06:41.413 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 133.189ms
[2024-02-02 15:06:41.414 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:06:41.414 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 133.7987ms
[2024-02-02 15:06:41.494 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:06:41.495 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:06:41.495 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:06:41.511 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:06:45.330 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3819.4218ms.
[2024-02-02 15:06:45.330 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:06:45.330 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 3835.6836ms
[2024-02-02 15:06:45.331 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:06:45.331 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 3836.2344ms
[2024-02-02 15:06:45.455 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:06:45.455 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:06:45.455 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:06:45.466 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:06:45.585 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 119.0204ms.
[2024-02-02 15:06:45.585 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:06:45.585 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 130.3216ms
[2024-02-02 15:06:45.585 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:06:45.586 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 130.9179ms
[2024-02-02 15:06:45.659 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:06:45.659 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:06:45.659 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:06:45.670 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:06:45.675 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.1552ms.
[2024-02-02 15:06:45.675 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:06:45.675 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 15.4968ms
[2024-02-02 15:06:45.675 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:06:45.675 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 16.1703ms
[2024-02-02 15:06:45.754 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:06:45.754 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:06:45.754 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:06:45.767 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:06:45.769 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.289ms.
[2024-02-02 15:06:45.770 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:06:45.770 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 15.5934ms
[2024-02-02 15:06:45.770 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:06:45.770 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 16.2129ms
[2024-02-02 15:06:45.846 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:06:45.847 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:06:45.847 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:06:45.860 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:06:45.989 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 128.5063ms.
[2024-02-02 15:06:45.989 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:06:45.989 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 141.7342ms
[2024-02-02 15:06:45.989 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:06:45.989 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 142.8554ms
[2024-02-02 15:06:46.078 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:06:46.082 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:06:46.082 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:06:46.097 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:06:46.203 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 105.8893ms.
[2024-02-02 15:06:46.204 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:06:46.204 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 121.0691ms
[2024-02-02 15:06:46.204 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:06:46.204 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 125.5066ms
[2024-02-02 15:06:46.282 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:06:46.283 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:06:46.283 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:06:46.296 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:06:46.386 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 90.4079ms.
[2024-02-02 15:06:46.387 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:06:46.387 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 103.9085ms
[2024-02-02 15:06:46.387 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:06:46.387 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 104.7272ms
[2024-02-02 15:06:46.454 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:06:46.454 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:06:46.454 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:06:46.467 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:06:46.598 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 130.9621ms.
[2024-02-02 15:06:46.598 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:06:46.598 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 144.1622ms
[2024-02-02 15:06:46.599 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:06:46.599 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 145.1812ms
[2024-02-02 15:07:35.328 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:07:35.328 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:07:35.329 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:07:35.345 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:07:35.529 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 183.4377ms.
[2024-02-02 15:07:35.529 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:07:35.529 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 200.6216ms
[2024-02-02 15:07:35.529 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:07:35.529 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 201.6553ms
[2024-02-02 15:07:39.277 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:07:39.277 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:07:39.277 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:07:39.293 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:07:39.395 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 101.7846ms.
[2024-02-02 15:07:39.395 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:07:39.396 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 118.1948ms
[2024-02-02 15:07:39.396 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:07:39.396 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 118.7629ms
[2024-02-02 15:07:39.481 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:07:39.482 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:07:39.482 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:07:39.496 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:07:42.350 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2853.7836ms.
[2024-02-02 15:07:42.350 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:07:42.350 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2868.168ms
[2024-02-02 15:07:42.350 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:07:42.350 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2868.7618ms
[2024-02-02 15:07:42.421 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:07:42.422 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:07:42.422 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:07:42.440 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:07:42.582 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 142.3533ms.
[2024-02-02 15:07:42.582 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:07:42.582 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 160.6228ms
[2024-02-02 15:07:42.582 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:07:42.582 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 161.1962ms
[2024-02-02 15:07:42.639 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:07:42.639 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:07:42.639 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:07:42.653 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:07:42.656 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.4141ms.
[2024-02-02 15:07:42.656 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:07:42.657 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 17.1009ms
[2024-02-02 15:07:42.657 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:07:42.657 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 17.8969ms
[2024-02-02 15:07:42.748 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:07:42.748 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:07:42.748 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:07:42.761 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:07:42.764 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.8369ms.
[2024-02-02 15:07:42.765 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:07:42.765 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 16.325ms
[2024-02-02 15:07:42.765 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:07:42.765 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 16.7345ms
[2024-02-02 15:07:42.843 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:07:42.843 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:07:42.843 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:07:42.858 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:07:42.993 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 135.157ms.
[2024-02-02 15:07:42.993 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:07:42.993 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 149.8118ms
[2024-02-02 15:07:42.993 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:07:42.993 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 150.6081ms
[2024-02-02 15:07:43.063 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:07:43.063 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:07:43.063 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:07:43.076 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:07:43.187 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 110.4087ms.
[2024-02-02 15:07:43.187 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:07:43.187 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 124.2245ms
[2024-02-02 15:07:43.187 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:07:43.188 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 124.8670ms
[2024-02-02 15:07:43.266 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:07:43.267 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:07:43.267 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:07:43.279 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:07:43.414 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 134.374ms.
[2024-02-02 15:07:43.414 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:07:43.414 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 147.2505ms
[2024-02-02 15:07:43.414 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:07:43.414 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 148.1110ms
[2024-02-02 15:07:43.502 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:07:43.503 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:07:43.503 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:07:43.515 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:07:43.639 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 123.7072ms.
[2024-02-02 15:07:43.639 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:07:43.639 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 136.5048ms
[2024-02-02 15:07:43.639 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:07:43.640 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 137.3142ms
[2024-02-02 15:08:21.812 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:08:21.812 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:08:21.812 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:08:21.834 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:08:21.943 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 108.9679ms.
[2024-02-02 15:08:21.943 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:08:21.944 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 131.6692ms
[2024-02-02 15:08:21.944 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:08:21.944 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 132.4081ms
[2024-02-02 15:08:22.033 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:08:22.033 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:08:22.033 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:08:22.049 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:08:26.048 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3998.14ms.
[2024-02-02 15:08:26.048 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:08:26.048 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 4014.9109ms
[2024-02-02 15:08:26.048 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:08:26.048 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 4015.5011ms
[2024-02-02 15:08:26.190 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:08:26.190 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:08:26.191 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:08:26.203 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:08:26.322 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 118.3947ms.
[2024-02-02 15:08:26.322 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:08:26.322 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 131.2203ms
[2024-02-02 15:08:26.322 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:08:26.322 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 131.7455ms
[2024-02-02 15:08:26.413 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:08:26.414 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:08:26.414 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:08:26.425 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:08:26.430 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.2232ms.
[2024-02-02 15:08:26.430 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:08:26.430 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 16.443ms
[2024-02-02 15:08:26.430 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:08:26.430 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 17.3200ms
[2024-02-02 15:08:26.526 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:08:26.526 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:08:26.526 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:08:26.539 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:08:26.542 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.7405ms.
[2024-02-02 15:08:26.542 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:08:26.543 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 16.7685ms
[2024-02-02 15:08:26.543 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:08:26.543 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 17.3025ms
[2024-02-02 15:08:26.634 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:08:26.635 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:08:26.635 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:08:26.648 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:08:26.775 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 126.0518ms.
[2024-02-02 15:08:26.775 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:08:26.775 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 140.0849ms
[2024-02-02 15:08:26.775 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:08:26.775 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 140.8931ms
[2024-02-02 15:08:26.871 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:08:26.871 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:08:26.871 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:08:26.889 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:08:26.990 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 101.0745ms.
[2024-02-02 15:08:26.990 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:08:26.990 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 118.8481ms
[2024-02-02 15:08:26.990 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:08:26.990 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 119.4505ms
[2024-02-02 15:08:27.044 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:08:27.044 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:08:27.044 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:08:27.058 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:08:27.168 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 109.5733ms.
[2024-02-02 15:08:27.168 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:08:27.169 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 124.1681ms
[2024-02-02 15:08:27.169 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:08:27.169 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 125.1067ms
[2024-02-02 15:08:27.216 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:08:27.216 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:08:27.216 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:08:27.228 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:08:27.370 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 141.7505ms.
[2024-02-02 15:08:27.370 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:08:27.370 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 153.8937ms
[2024-02-02 15:08:27.370 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:08:27.370 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 154.4515ms
[2024-02-02 15:11:40.962 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:11:40.963 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:11:40.963 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:11:40.984 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:11:41.161 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 177.1089ms.
[2024-02-02 15:11:41.161 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:11:41.161 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 198.1939ms
[2024-02-02 15:11:41.161 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:11:41.161 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 199.8316ms
[2024-02-02 15:11:43.644 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:11:43.644 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:11:43.644 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:11:43.657 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:11:43.771 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 113.6347ms.
[2024-02-02 15:11:43.771 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:11:43.771 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 127.3525ms
[2024-02-02 15:11:43.771 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:11:43.772 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 127.7908ms
[2024-02-02 15:11:43.860 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:11:43.860 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:11:43.860 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:11:43.876 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:11:46.749 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2873.2794ms.
[2024-02-02 15:11:46.749 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:11:46.750 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2889.4962ms
[2024-02-02 15:11:46.750 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:11:46.750 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2890.3959ms
[2024-02-02 15:11:46.835 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:11:46.835 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:11:46.835 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:11:46.847 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:11:46.977 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 129.8668ms.
[2024-02-02 15:11:46.977 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:11:46.977 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 142.4709ms
[2024-02-02 15:11:46.977 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:11:46.978 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 142.9962ms
[2024-02-02 15:11:47.036 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:11:47.036 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:11:47.037 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:11:47.048 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:11:47.053 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.4219ms.
[2024-02-02 15:11:47.053 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:11:47.053 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 16.4198ms
[2024-02-02 15:11:47.053 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:11:47.053 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 17.0206ms
[2024-02-02 15:11:47.130 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:11:47.131 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:11:47.131 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:11:47.144 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:11:47.147 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.9416ms.
[2024-02-02 15:11:47.148 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:11:47.148 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 17.0119ms
[2024-02-02 15:11:47.148 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:11:47.148 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 17.5630ms
[2024-02-02 15:11:47.209 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:11:47.209 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:11:47.209 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:11:47.219 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:11:47.366 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 146.1457ms.
[2024-02-02 15:11:47.366 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:11:47.366 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 156.4799ms
[2024-02-02 15:11:47.366 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:11:47.366 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 157.0995ms
[2024-02-02 15:11:47.459 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:11:47.459 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:11:47.459 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:11:47.473 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:11:47.576 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 102.5292ms.
[2024-02-02 15:11:47.576 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:11:47.577 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 117.0064ms
[2024-02-02 15:11:47.577 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:11:47.577 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 117.6548ms
[2024-02-02 15:11:47.646 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:11:47.646 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:11:47.646 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:11:47.658 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:11:47.761 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 102.5408ms.
[2024-02-02 15:11:47.761 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:11:47.761 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 115.0049ms
[2024-02-02 15:11:47.761 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:11:47.762 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 115.6711ms
[2024-02-02 15:11:47.821 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:11:47.821 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:11:47.821 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:11:47.832 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:11:47.961 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 128.4552ms.
[2024-02-02 15:11:47.961 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:11:47.961 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 140.1493ms
[2024-02-02 15:11:47.961 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:11:47.961 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 140.7790ms
[2024-02-02 15:12:18.314 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:12:18.314 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:12:18.314 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:12:18.330 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:12:18.442 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 111.6897ms.
[2024-02-02 15:12:18.442 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:12:18.442 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 128.0018ms
[2024-02-02 15:12:18.442 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:12:18.442 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 128.4622ms
[2024-02-02 15:12:18.533 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:12:18.533 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:12:18.533 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:12:18.547 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:12:22.322 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3774.8511ms.
[2024-02-02 15:12:22.322 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:12:22.322 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 3788.7653ms
[2024-02-02 15:12:22.322 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:12:22.323 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 3789.3863ms
[2024-02-02 15:12:22.421 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:12:22.421 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:12:22.422 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:12:22.436 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:12:22.598 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 161.8919ms.
[2024-02-02 15:12:22.598 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:12:22.599 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 177.5345ms
[2024-02-02 15:12:22.599 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:12:22.599 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 178.1192ms
[2024-02-02 15:12:22.683 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:12:22.683 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:12:22.683 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:12:22.695 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:12:22.699 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.4579ms.
[2024-02-02 15:12:22.699 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:12:22.699 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 16.0393ms
[2024-02-02 15:12:22.699 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:12:22.699 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 16.5786ms
[2024-02-02 15:12:22.792 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:12:22.793 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:12:22.793 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:12:22.803 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:12:22.806 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.0031ms.
[2024-02-02 15:12:22.806 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:12:22.806 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 13.2278ms
[2024-02-02 15:12:22.806 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:12:22.806 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 13.7229ms
[2024-02-02 15:12:22.872 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:12:22.872 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:12:22.872 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:12:22.885 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:12:22.993 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 108.0284ms.
[2024-02-02 15:12:22.993 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:12:22.993 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 120.8976ms
[2024-02-02 15:12:22.993 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:12:22.993 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 121.4376ms
[2024-02-02 15:12:23.077 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:12:23.078 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:12:23.078 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:12:23.096 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:12:23.220 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 124.0032ms.
[2024-02-02 15:12:23.220 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:12:23.220 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 142.1868ms
[2024-02-02 15:12:23.220 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:12:23.220 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 143.1799ms
[2024-02-02 15:12:23.265 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:12:23.265 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:12:23.265 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:12:23.278 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:12:23.388 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 109.0464ms.
[2024-02-02 15:12:23.388 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:12:23.388 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 122.8451ms
[2024-02-02 15:12:23.388 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:12:23.388 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 123.5379ms
[2024-02-02 15:12:23.467 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:12:23.467 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:12:23.467 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:12:23.479 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:12:23.588 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 108.4567ms.
[2024-02-02 15:12:23.588 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:12:23.588 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 120.9849ms
[2024-02-02 15:12:23.588 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:12:23.588 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 121.7656ms
[2024-02-02 15:13:50.785 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:13:50.786 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:13:50.786 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:13:50.805 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:13:50.889 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 84.1854ms.
[2024-02-02 15:13:50.889 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:13:50.889 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 103.7551ms
[2024-02-02 15:13:50.890 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:13:50.890 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 104.6142ms
[2024-02-02 15:13:50.963 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:13:50.963 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:13:50.963 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:13:50.979 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:13:55.681 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4701.9406ms.
[2024-02-02 15:13:55.682 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:13:55.682 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 4718.5364ms
[2024-02-02 15:13:55.682 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:13:55.682 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 4719.1582ms
[2024-02-02 15:13:55.823 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:13:55.823 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:13:55.823 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:13:55.842 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:13:56.017 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 175.169ms.
[2024-02-02 15:13:56.017 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:13:56.018 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 194.299ms
[2024-02-02 15:13:56.018 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:13:56.018 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 194.9219ms
[2024-02-02 15:13:56.090 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:13:56.091 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:13:56.091 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:13:56.109 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:13:56.115 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5.5351ms.
[2024-02-02 15:13:56.115 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:13:56.115 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 24.2353ms
[2024-02-02 15:13:56.115 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:13:56.115 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 24.9596ms
[2024-02-02 15:13:56.187 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:13:56.187 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:13:56.187 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:13:56.205 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:13:56.208 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.4996ms.
[2024-02-02 15:13:56.208 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:13:56.208 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 21.0459ms
[2024-02-02 15:13:56.209 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:13:56.209 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 21.7729ms
[2024-02-02 15:13:56.297 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:13:56.297 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:13:56.298 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:13:56.314 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:13:56.485 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 170.3445ms.
[2024-02-02 15:13:56.485 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:13:56.485 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 187.5894ms
[2024-02-02 15:13:56.485 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:13:56.485 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 188.4456ms
[2024-02-02 15:13:56.549 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:13:56.549 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:13:56.550 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:13:56.567 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:13:56.730 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 163.2285ms.
[2024-02-02 15:13:56.730 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:13:56.731 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 180.9031ms
[2024-02-02 15:13:56.731 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:13:56.731 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 181.8814ms
[2024-02-02 15:13:56.814 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:13:56.814 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:13:56.814 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:13:56.829 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:13:56.951 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 121.6894ms.
[2024-02-02 15:13:56.951 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:13:56.951 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 136.4026ms
[2024-02-02 15:13:56.951 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:13:56.951 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 137.1498ms
[2024-02-02 15:13:57.020 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:13:57.020 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:13:57.020 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:13:57.034 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:13:57.159 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 124.7903ms.
[2024-02-02 15:13:57.159 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:13:57.159 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 139.246ms
[2024-02-02 15:13:57.159 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:13:57.160 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 139.9949ms
[2024-02-02 15:14:21.790 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:14:21.790 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:14:21.790 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:21.806 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:21.922 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 115.8882ms.
[2024-02-02 15:14:21.922 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:21.922 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 132.3203ms
[2024-02-02 15:14:21.922 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:14:21.922 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 132.8313ms
[2024-02-02 15:14:22.009 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:14:22.009 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:14:22.010 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:22.029 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:26.935 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4905.7552ms.
[2024-02-02 15:14:26.935 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:14:26.935 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 4925.6ms
[2024-02-02 15:14:26.935 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:14:26.936 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 4926.2298ms
[2024-02-02 15:14:27.067 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:14:27.067 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:14:27.067 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:27.079 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:27.192 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 112.6916ms.
[2024-02-02 15:14:27.192 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:27.192 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 125.0728ms
[2024-02-02 15:14:27.192 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:14:27.193 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 125.7999ms
[2024-02-02 15:14:27.271 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:14:27.271 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:14:27.271 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:27.284 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:27.288 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.0615ms.
[2024-02-02 15:14:27.288 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:14:27.289 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 17.5864ms
[2024-02-02 15:14:27.289 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:14:27.289 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 18.2800ms
[2024-02-02 15:14:27.398 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:14:27.398 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:14:27.399 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:14:27.411 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:27.415 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.0156ms.
[2024-02-02 15:14:27.415 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:14:27.416 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 16.854ms
[2024-02-02 15:14:27.416 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:14:27.416 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 17.4211ms
[2024-02-02 15:14:27.493 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:14:27.493 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:14:27.493 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:14:27.508 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:27.655 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 147.03ms.
[2024-02-02 15:14:27.655 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:27.655 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 162.136ms
[2024-02-02 15:14:27.655 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:14:27.656 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 163.0541ms
[2024-02-02 15:14:27.727 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:14:27.727 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:14:27.727 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:14:27.742 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:27.861 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 118.5862ms.
[2024-02-02 15:14:27.861 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:27.861 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 133.8083ms
[2024-02-02 15:14:27.861 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:14:27.862 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 134.5997ms
[2024-02-02 15:14:27.928 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:14:27.929 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:14:27.929 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:27.945 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:28.089 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 143.8334ms.
[2024-02-02 15:14:28.089 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:28.089 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 160.1968ms
[2024-02-02 15:14:28.089 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:14:28.089 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 160.7895ms
[2024-02-02 15:14:28.163 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:14:28.163 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:14:28.163 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:28.181 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:28.358 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 176.7943ms.
[2024-02-02 15:14:28.358 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:28.358 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 194.5896ms
[2024-02-02 15:14:28.358 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:14:28.358 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 195.3801ms
[2024-02-02 15:14:41.555 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:14:41.555 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:14:41.556 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:41.571 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:41.712 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 141.549ms.
[2024-02-02 15:14:41.712 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:41.712 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 156.7104ms
[2024-02-02 15:14:41.713 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:14:41.713 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 157.6112ms
[2024-02-02 15:14:43.968 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:14:43.968 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:14:43.969 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:43.983 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:44.085 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 102.0135ms.
[2024-02-02 15:14:44.085 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:44.085 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 116.8945ms
[2024-02-02 15:14:44.086 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:14:44.086 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 117.5046ms
[2024-02-02 15:14:44.155 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:14:44.155 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:14:44.155 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:44.171 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:48.358 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4186.6901ms.
[2024-02-02 15:14:48.358 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:14:48.359 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 4203.6287ms
[2024-02-02 15:14:48.359 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:14:48.359 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 4204.3736ms
[2024-02-02 15:14:48.439 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:14:48.439 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:14:48.439 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:48.452 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:48.573 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 121.14ms.
[2024-02-02 15:14:48.573 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:48.573 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 133.8352ms
[2024-02-02 15:14:48.573 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:14:48.573 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 134.3481ms
[2024-02-02 15:14:48.638 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:14:48.638 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:14:48.638 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:48.651 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:48.656 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.7214ms.
[2024-02-02 15:14:48.656 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:14:48.656 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 18.3871ms
[2024-02-02 15:14:48.656 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:14:48.657 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 19.0529ms
[2024-02-02 15:14:48.747 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:14:48.747 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:14:48.747 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:14:48.762 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:48.765 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.994ms.
[2024-02-02 15:14:48.765 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:14:48.765 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 17.4925ms
[2024-02-02 15:14:48.765 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:14:48.765 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 17.9931ms
[2024-02-02 15:14:48.857 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:14:48.857 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:14:48.857 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:14:48.870 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:48.997 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 126.4703ms.
[2024-02-02 15:14:48.997 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:48.997 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 139.2745ms
[2024-02-02 15:14:48.997 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:14:48.997 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 139.9254ms
[2024-02-02 15:14:49.094 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:14:49.094 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:14:49.094 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:14:49.107 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:49.201 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 94.0215ms.
[2024-02-02 15:14:49.201 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:49.201 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 106.9865ms
[2024-02-02 15:14:49.202 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:14:49.202 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 108.0170ms
[2024-02-02 15:14:49.300 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:14:49.301 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:14:49.301 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:49.317 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:49.444 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 126.8625ms.
[2024-02-02 15:14:49.445 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:49.445 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 143.3175ms
[2024-02-02 15:14:49.445 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:14:49.445 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 145.0180ms
[2024-02-02 15:14:49.534 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:14:49.535 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:14:49.535 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:14:49.548 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:14:49.668 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 119.9499ms.
[2024-02-02 15:14:49.669 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:14:49.669 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 133.9467ms
[2024-02-02 15:14:49.669 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:14:49.669 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 134.7897ms
[2024-02-02 15:17:59.053 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:17:59.054 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:17:59.054 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:17:59.078 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:17:59.186 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 108.0689ms.
[2024-02-02 15:17:59.186 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:17:59.186 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 132.3896ms
[2024-02-02 15:17:59.186 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:17:59.187 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 133.2970ms
[2024-02-02 15:17:59.275 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:17:59.275 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:17:59.275 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:17:59.291 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:03.754 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4463.5317ms.
[2024-02-02 15:18:03.755 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:18:03.755 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 4479.8468ms
[2024-02-02 15:18:03.755 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:18:03.755 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 4480.5762ms
[2024-02-02 15:18:03.890 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:18:03.891 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:18:03.891 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:18:03.903 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:04.019 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 116.0362ms.
[2024-02-02 15:18:04.019 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:04.019 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 128.4263ms
[2024-02-02 15:18:04.019 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:18:04.019 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 129.0460ms
[2024-02-02 15:18:04.106 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:18:04.106 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:18:04.106 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:18:04.118 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:04.122 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.724ms.
[2024-02-02 15:18:04.122 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:18:04.123 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 16.4601ms
[2024-02-02 15:18:04.123 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:18:04.123 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 17.0251ms
[2024-02-02 15:18:04.152 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:18:04.152 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:18:04.153 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:18:04.172 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:04.175 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.1301ms.
[2024-02-02 15:18:04.175 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:18:04.176 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 23.1109ms
[2024-02-02 15:18:04.176 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:18:04.176 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 23.5954ms
[2024-02-02 15:18:04.266 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:18:04.266 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:18:04.267 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:18:04.279 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:04.410 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 131.1912ms.
[2024-02-02 15:18:04.410 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:04.410 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 143.7725ms
[2024-02-02 15:18:04.410 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:18:04.411 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 144.3931ms
[2024-02-02 15:18:04.505 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:18:04.505 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:18:04.506 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:18:04.521 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:04.626 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 105.0916ms.
[2024-02-02 15:18:04.626 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:04.626 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 120.6677ms
[2024-02-02 15:18:04.626 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:18:04.626 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 121.2442ms
[2024-02-02 15:18:04.723 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:18:04.723 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:18:04.723 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:18:04.745 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:04.872 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 126.7376ms.
[2024-02-02 15:18:04.872 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:04.873 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 149.2841ms
[2024-02-02 15:18:04.873 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:18:04.873 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 149.9749ms
[2024-02-02 15:18:04.944 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:18:04.945 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:18:04.945 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:18:04.959 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:05.086 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 126.9637ms.
[2024-02-02 15:18:05.086 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:05.086 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 141.2339ms
[2024-02-02 15:18:05.086 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:18:05.086 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 142.0807ms
[2024-02-02 15:18:44.836 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:18:44.836 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:18:44.836 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:18:44.856 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:44.980 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 123.208ms.
[2024-02-02 15:18:44.980 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:44.980 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 143.9914ms
[2024-02-02 15:18:44.980 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:18:44.980 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 144.6420ms
[2024-02-02 15:18:45.593 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:18:45.593 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:18:45.593 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:18:45.610 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:49.013 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3402.7345ms.
[2024-02-02 15:18:49.013 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:18:49.013 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 3420.3139ms
[2024-02-02 15:18:49.013 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:18:49.014 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 3421.0597ms
[2024-02-02 15:18:49.667 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:18:49.668 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:18:49.668 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:18:49.682 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:49.789 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 107.3597ms.
[2024-02-02 15:18:49.789 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:49.790 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 121.8976ms
[2024-02-02 15:18:49.790 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:18:49.790 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 122.7325ms
[2024-02-02 15:18:50.372 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:18:50.373 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:18:50.373 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:18:50.383 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:50.388 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.5067ms.
[2024-02-02 15:18:50.388 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:18:50.388 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 15.3744ms
[2024-02-02 15:18:50.388 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:18:50.388 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 15.9730ms
[2024-02-02 15:18:50.969 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:18:50.970 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:18:50.970 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:18:50.985 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:50.988 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.8995ms.
[2024-02-02 15:18:50.989 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:18:50.989 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 19.0401ms
[2024-02-02 15:18:50.989 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:18:50.989 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 19.7851ms
[2024-02-02 15:18:51.575 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:18:51.575 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:18:51.576 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:18:51.597 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:51.725 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 127.7701ms.
[2024-02-02 15:18:51.725 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:51.725 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 149.656ms
[2024-02-02 15:18:51.726 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:18:51.726 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 150.7676ms
[2024-02-02 15:18:52.327 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:18:52.328 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:18:52.328 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:18:52.343 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:52.457 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 114.2465ms.
[2024-02-02 15:18:52.457 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:52.457 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 129.6017ms
[2024-02-02 15:18:52.457 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:18:52.458 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 130.6302ms
[2024-02-02 15:18:53.043 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:18:53.043 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:18:53.043 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:18:53.057 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:53.157 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 99.2304ms.
[2024-02-02 15:18:53.157 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:53.157 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 113.7527ms
[2024-02-02 15:18:53.157 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:18:53.158 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 114.7895ms
[2024-02-02 15:18:53.742 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:18:53.742 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:18:53.742 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:18:53.757 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:18:53.844 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 87.1899ms.
[2024-02-02 15:18:53.844 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:18:53.845 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 102.0315ms
[2024-02-02 15:18:53.845 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:18:53.845 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 103.1680ms
[2024-02-02 15:20:40.062 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:20:40.062 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:20:40.062 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:20:40.078 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:20:43.904 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3826.5545ms.
[2024-02-02 15:20:43.905 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:20:43.905 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 3842.6687ms
[2024-02-02 15:20:43.905 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:20:43.905 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 3843.2366ms
[2024-02-02 15:20:54.673 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:20:54.673 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:20:54.674 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:20:54.685 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:20:54.785 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 99.5806ms.
[2024-02-02 15:20:54.785 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:20:54.786 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 111.9319ms
[2024-02-02 15:20:54.786 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:20:54.786 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 112.4953ms
[2024-02-02 15:20:54.874 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:20:54.874 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:20:54.874 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:20:54.890 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:20:59.565 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4675.2776ms.
[2024-02-02 15:20:59.565 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:20:59.566 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 4691.3262ms
[2024-02-02 15:20:59.566 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:20:59.566 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 4692.1148ms
[2024-02-02 15:20:59.742 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:20:59.742 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:20:59.742 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:20:59.762 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:20:59.979 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 216.8338ms.
[2024-02-02 15:20:59.979 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:20:59.979 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 236.7127ms
[2024-02-02 15:20:59.979 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:20:59.979 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 237.3459ms
[2024-02-02 15:21:00.029 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:21:00.029 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:21:00.029 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:21:00.049 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:21:00.054 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.5823ms.
[2024-02-02 15:21:00.054 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:21:00.054 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 25.1745ms
[2024-02-02 15:21:00.054 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:21:00.054 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 25.7663ms
[2024-02-02 15:21:00.168 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:21:00.168 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:21:00.168 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:21:00.186 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:21:00.189 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.0191ms.
[2024-02-02 15:21:00.189 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:21:00.189 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 21.109ms
[2024-02-02 15:21:00.189 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:21:00.189 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 21.5871ms
[2024-02-02 15:21:00.247 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:21:00.247 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:21:00.247 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:21:00.263 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:21:00.448 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 185.3087ms.
[2024-02-02 15:21:00.448 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:21:00.448 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 201.2235ms
[2024-02-02 15:21:00.448 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:21:00.449 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 201.9168ms
[2024-02-02 15:21:00.531 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:21:00.531 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:21:00.531 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:21:00.548 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:21:00.711 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 162.8736ms.
[2024-02-02 15:21:00.711 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:21:00.712 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 180.2323ms
[2024-02-02 15:21:00.712 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:21:00.712 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 181.0707ms
[2024-02-02 15:21:00.767 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:21:00.768 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:21:00.768 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:21:00.784 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:21:00.964 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 180.2943ms.
[2024-02-02 15:21:00.965 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:21:00.965 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 196.9472ms
[2024-02-02 15:21:00.965 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:21:00.965 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 197.7437ms
[2024-02-02 15:21:01.049 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:21:01.049 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:21:01.049 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:21:01.068 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:21:01.203 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 134.7791ms.
[2024-02-02 15:21:01.203 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:21:01.203 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 153.6245ms
[2024-02-02 15:21:01.203 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:21:01.203 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 154.3027ms
[2024-02-02 15:21:45.903 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:21:45.904 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:21:45.904 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:21:45.918 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:21:50.361 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4442.5078ms.
[2024-02-02 15:21:50.361 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:21:50.362 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 4457.8776ms
[2024-02-02 15:21:50.362 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:21:50.362 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 4458.3995ms
[2024-02-02 15:22:18.546 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:22:18.546 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:22:18.546 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:22:18.562 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:18.681 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 118.8592ms.
[2024-02-02 15:22:18.682 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:22:18.682 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 135.9368ms
[2024-02-02 15:22:18.682 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:22:18.682 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 136.5523ms
[2024-02-02 15:22:18.767 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:22:18.768 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:22:18.768 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:22:18.784 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:22.373 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3588.2625ms.
[2024-02-02 15:22:22.373 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:22:22.373 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 3605.2566ms
[2024-02-02 15:22:22.373 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:22:22.373 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 3605.8305ms
[2024-02-02 15:22:22.538 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:22:22.539 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:22:22.539 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:22:22.550 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:22.662 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 111.922ms.
[2024-02-02 15:22:22.662 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:22:22.662 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 123.1138ms
[2024-02-02 15:22:22.662 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:22:22.662 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 123.9385ms
[2024-02-02 15:22:22.759 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:22:22.759 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:22:22.759 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:22:22.771 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:22.776 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.4907ms.
[2024-02-02 15:22:22.776 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:22:22.776 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 17.2076ms
[2024-02-02 15:22:22.776 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:22:22.776 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 17.8793ms
[2024-02-02 15:22:22.883 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:22:22.883 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:22:22.883 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:22:22.899 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:22.902 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.282ms.
[2024-02-02 15:22:22.902 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:22:22.902 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 18.4584ms
[2024-02-02 15:22:22.902 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:22:22.902 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 18.9164ms
[2024-02-02 15:22:22.978 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:22:22.979 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:22:22.979 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:22:22.990 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:23.115 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 124.8506ms.
[2024-02-02 15:22:23.115 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:22:23.115 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 136.3322ms
[2024-02-02 15:22:23.115 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:22:23.115 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 137.0681ms
[2024-02-02 15:22:23.215 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:22:23.215 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:22:23.215 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:22:23.226 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:23.323 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 97.1051ms.
[2024-02-02 15:22:23.324 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:22:23.324 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 108.3161ms
[2024-02-02 15:22:23.324 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:22:23.324 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 108.9581ms
[2024-02-02 15:22:23.403 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:22:23.404 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:22:23.404 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:22:23.414 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:23.508 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 94.1398ms.
[2024-02-02 15:22:23.508 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:22:23.508 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 104.7236ms
[2024-02-02 15:22:23.509 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:22:23.509 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 105.3748ms
[2024-02-02 15:22:23.578 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:22:23.579 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:22:23.579 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:22:23.603 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:23.735 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 130.9828ms.
[2024-02-02 15:22:23.735 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:22:23.735 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 156.2939ms
[2024-02-02 15:22:23.735 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:22:23.735 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 157.0012ms
[2024-02-02 15:22:55.139 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:22:55.139 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:22:55.139 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:22:55.156 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:55.260 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 103.4467ms.
[2024-02-02 15:22:55.260 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:22:55.260 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 120.7076ms
[2024-02-02 15:22:55.260 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:22:55.260 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 121.3926ms
[2024-02-02 15:22:55.341 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:22:55.341 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:22:55.341 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:22:55.359 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:59.504 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4144.8507ms.
[2024-02-02 15:22:59.504 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:22:59.505 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 4163.3734ms
[2024-02-02 15:22:59.505 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:22:59.505 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 4163.8554ms
[2024-02-02 15:22:59.683 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:22:59.683 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:22:59.683 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:22:59.694 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:59.799 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 104.78ms.
[2024-02-02 15:22:59.799 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:22:59.799 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 116.07ms
[2024-02-02 15:22:59.799 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:22:59.799 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - application/json;+charset=utf-8 116.5545ms
[2024-02-02 15:22:59.869 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - -
[2024-02-02 15:22:59.870 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:22:59.870 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:22:59.883 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:59.886 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.7827ms.
[2024-02-02 15:22:59.887 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:22:59.887 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 16.8809ms
[2024-02-02 15:22:59.887 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:22:59.887 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cd - - - 200 - application/json;+charset=utf-8 17.5852ms
[2024-02-02 15:22:59.978 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:22:59.978 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:22:59.978 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:22:59.991 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:22:59.994 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.348ms.
[2024-02-02 15:22:59.994 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:22:59.994 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 15.9767ms
[2024-02-02 15:22:59.994 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:22:59.994 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 16.4268ms
[2024-02-02 15:23:00.041 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:23:00.041 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:23:00.041 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:23:00.057 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:23:00.220 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 162.7795ms.
[2024-02-02 15:23:00.220 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:23:00.220 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 178.7096ms
[2024-02-02 15:23:00.220 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:23:00.220 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 179.5222ms
[2024-02-02 15:23:00.305 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:23:00.305 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:23:00.305 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:23:00.317 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:23:00.425 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 107.769ms.
[2024-02-02 15:23:00.425 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:23:00.425 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 120.0147ms
[2024-02-02 15:23:00.425 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:23:00.426 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d0/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 120.9319ms
[2024-02-02 15:23:00.495 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422
[2024-02-02 15:23:00.495 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:23:00.495 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:23:00.509 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:23:00.623 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 113.4884ms.
[2024-02-02 15:23:00.623 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:23:00.623 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 127.8653ms
[2024-02-02 15:23:00.623 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:23:00.623 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 application/json 422 - 200 - application/json;+charset=utf-8 128.8482ms
[2024-02-02 15:23:00.697 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0
[2024-02-02 15:23:00.698 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:23:00.698 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:23:00.714 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:23:00.831 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 117.4269ms.
[2024-02-02 15:23:00.832 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:23:00.832 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 134.086ms
[2024-02-02 15:23:00.832 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:23:00.832 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0/cancel - 0 - 200 - application/json;+charset=utf-8 134.8331ms
[2024-02-02 15:28:27.708 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - -
[2024-02-02 15:28:27.714 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:28:27.721 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:28:27.732 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 15:28:27.923 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 191.4763ms.
[2024-02-02 15:28:27.923 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 15:28:27.924 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 203.5038ms
[2024-02-02 15:28:27.924 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:28:27.924 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d0 - - - 200 - text/plain;+charset=utf-8 216.4928ms
[2024-02-02 15:29:43.283 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:29:43.284 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:29:43.284 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:29:43.301 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:29:43.401 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 99.3195ms.
[2024-02-02 15:29:43.401 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:29:43.402 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 118.0038ms
[2024-02-02 15:29:43.402 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:29:43.402 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 118.7487ms
[2024-02-02 15:29:43.489 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:29:43.489 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:29:43.489 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:29:43.499 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:29:47.476 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3976.4483ms.
[2024-02-02 15:29:47.476 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:29:47.477 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 3987.3883ms
[2024-02-02 15:29:47.477 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:29:47.477 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 3987.9958ms
[2024-02-02 15:29:47.669 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1 - -
[2024-02-02 15:29:47.669 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:29:47.670 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:29:47.692 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:29:47.804 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 111.6121ms.
[2024-02-02 15:29:47.804 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:29:47.804 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 134.3193ms
[2024-02-02 15:29:47.804 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:29:47.804 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1 - - - 200 - application/json;+charset=utf-8 135.4469ms
[2024-02-02 15:29:47.880 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cf - -
[2024-02-02 15:29:47.880 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:29:47.881 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:29:47.891 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:29:47.894 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.6079ms.
[2024-02-02 15:29:47.896 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:29:47.896 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 15.65ms
[2024-02-02 15:29:47.896 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:29:47.897 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15cf - - - 200 - application/json;+charset=utf-8 16.3888ms
[2024-02-02 15:29:47.960 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:29:47.960 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:29:47.960 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:29:47.981 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:29:47.984 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.2914ms.
[2024-02-02 15:29:47.984 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:29:47.984 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 23.7262ms
[2024-02-02 15:29:47.984 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:29:47.984 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 24.2900ms
[2024-02-02 15:29:48.040 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d1/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:29:48.040 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:29:48.040 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:29:48.054 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:29:48.229 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 174.5251ms.
[2024-02-02 15:29:48.229 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:29:48.229 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 189.2784ms
[2024-02-02 15:29:48.229 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:29:48.230 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d1/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 189.9156ms
[2024-02-02 15:29:48.322 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d1/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:29:48.322 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:29:48.322 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:29:48.336 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:29:48.450 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 114.2466ms.
[2024-02-02 15:29:48.450 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:29:48.450 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 127.9268ms
[2024-02-02 15:29:48.451 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:29:48.451 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d1/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 128.8187ms
[2024-02-02 15:29:48.512 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1 application/json 422
[2024-02-02 15:29:48.513 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:29:48.513 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:29:48.524 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:29:48.654 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 129.4126ms.
[2024-02-02 15:29:48.654 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:29:48.654 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 141.2699ms
[2024-02-02 15:29:48.654 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:29:48.654 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1 application/json 422 - 200 - application/json;+charset=utf-8 141.9486ms
[2024-02-02 15:29:48.733 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1/cancel - 0
[2024-02-02 15:29:48.733 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:29:48.734 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:29:48.746 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:29:48.884 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 137.6659ms.
[2024-02-02 15:29:48.884 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:29:48.884 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 150.3077ms
[2024-02-02 15:29:48.884 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:29:48.884 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1/cancel - 0 - 200 - application/json;+charset=utf-8 151.2226ms
[2024-02-02 15:29:48.972 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1 - -
[2024-02-02 15:29:48.972 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:29:48.973 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:29:48.986 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 15:29:49.155 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 168.8808ms.
[2024-02-02 15:29:49.156 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 15:29:49.156 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 183.7503ms
[2024-02-02 15:29:49.156 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:29:49.157 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1 - - - 200 - text/plain;+charset=utf-8 184.6242ms
[2024-02-02 15:30:16.329 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1 - -
[2024-02-02 15:30:16.330 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:30:16.330 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:30:16.342 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:30:16.346 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundResult in 3.4445ms.
[2024-02-02 15:30:16.354 +01:00  INF]  Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
[2024-02-02 15:30:16.354 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 24.3746ms
[2024-02-02 15:30:16.355 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:30:16.355 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1 - - - 404 - application/problem+json;+charset=utf-8 25.2074ms
[2024-02-02 15:30:21.571 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1 - -
[2024-02-02 15:30:21.571 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:30:21.571 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:30:21.587 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 15:30:21.591 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.NotFoundResult in 3.215ms.
[2024-02-02 15:30:21.591 +01:00  INF]  Executing ObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.ProblemDetails'.
[2024-02-02 15:30:21.591 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 20.2515ms
[2024-02-02 15:30:21.592 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:30:21.592 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d1 - - - 404 - application/problem+json;+charset=utf-8 20.8196ms
[2024-02-02 15:31:59.542 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:31:59.542 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:31:59.542 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:31:59.561 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:31:59.678 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 117.4208ms.
[2024-02-02 15:31:59.678 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:31:59.679 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 136.038ms
[2024-02-02 15:31:59.679 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:31:59.679 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 137.0347ms
[2024-02-02 15:31:59.790 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:31:59.790 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:31:59.791 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:31:59.801 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:32:03.173 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3371.5679ms.
[2024-02-02 15:32:03.173 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:32:03.173 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 3382.478ms
[2024-02-02 15:32:03.173 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:32:03.173 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 3383.2454ms
[2024-02-02 15:32:03.310 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d2 - -
[2024-02-02 15:32:03.310 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:32:03.310 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:32:03.321 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:32:03.431 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 109.6856ms.
[2024-02-02 15:32:03.431 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:32:03.431 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 120.3876ms
[2024-02-02 15:32:03.431 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:32:03.431 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d2 - - - 200 - application/json;+charset=utf-8 121.2016ms
[2024-02-02 15:32:03.529 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15ce - -
[2024-02-02 15:32:03.530 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:32:03.530 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:32:03.540 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:32:03.543 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.4102ms.
[2024-02-02 15:32:03.544 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:32:03.544 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 14.3517ms
[2024-02-02 15:32:03.544 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:32:03.544 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bcc3d0fc430d841d6e15ce - - - 200 - application/json;+charset=utf-8 14.8331ms
[2024-02-02 15:32:03.622 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:32:03.622 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:32:03.622 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:32:03.634 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:32:03.637 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.5854ms.
[2024-02-02 15:32:03.637 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:32:03.637 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 14.8188ms
[2024-02-02 15:32:03.637 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:32:03.638 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 15.3182ms
[2024-02-02 15:32:03.718 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d2/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:32:03.718 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:32:03.718 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:32:03.730 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:32:03.874 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 143.9149ms.
[2024-02-02 15:32:03.875 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:32:03.875 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 156.4902ms
[2024-02-02 15:32:03.875 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:32:03.875 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bcc3d0fc430d841d6e15d2/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 157.1573ms
[2024-02-02 15:32:03.968 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d2/assign/65bcc3d0fc430d841d6e15b7 - 0
[2024-02-02 15:32:03.968 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:32:03.968 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:32:03.981 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:32:04.133 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 152.119ms.
[2024-02-02 15:32:04.133 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:32:04.133 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 164.6109ms
[2024-02-02 15:32:04.133 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:32:04.133 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bcc3d0fc430d841d6e15d2/assign/65bcc3d0fc430d841d6e15b7 - 0 - 200 - application/json;+charset=utf-8 165.1755ms
[2024-02-02 15:32:04.219 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d2 application/json 422
[2024-02-02 15:32:04.219 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:32:04.220 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:32:04.237 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:32:04.361 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 123.5079ms.
[2024-02-02 15:32:04.361 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:32:04.361 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 141.2287ms
[2024-02-02 15:32:04.361 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:32:04.361 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d2 application/json 422 - 200 - application/json;+charset=utf-8 142.1149ms
[2024-02-02 15:32:04.452 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d2/cancel - 0
[2024-02-02 15:32:04.453 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:32:04.453 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:32:04.471 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:32:04.641 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 170.0599ms.
[2024-02-02 15:32:04.641 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:32:04.641 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 187.7691ms
[2024-02-02 15:32:04.641 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:32:04.641 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d2/cancel - 0 - 200 - application/json;+charset=utf-8 188.7440ms
[2024-02-02 15:32:04.702 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d2 - -
[2024-02-02 15:32:04.703 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:32:04.703 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:32:04.718 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 15:32:04.863 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 144.8632ms.
[2024-02-02 15:32:04.863 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 15:32:04.864 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 160.4933ms
[2024-02-02 15:32:04.864 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:32:04.864 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bcc3d0fc430d841d6e15d2 - - - 200 - text/plain;+charset=utf-8 161.3860ms
[2024-02-02 15:35:25.847 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 15:35:26.038 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 15:35:26.038 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 15:35:26.039 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 15:35:26.039 +01:00  INF]  Hosting environment: Development
[2024-02-02 15:35:26.039 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 15:35:29.437 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 15:35:29.686 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 249.8122ms
[2024-02-02 15:35:29.698 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 15:35:29.698 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 15:35:29.716 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 17.8791ms
[2024-02-02 15:35:29.759 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 61.0836ms
[2024-02-02 15:35:29.798 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 15:35:29.909 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 111.1309ms
[2024-02-02 15:36:16.076 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:36:16.238 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:36:16.278 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:36:16.560 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:36:57.321 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 15:36:57.588 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 15:36:57.588 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 15:36:57.589 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 15:36:57.589 +01:00  INF]  Hosting environment: Development
[2024-02-02 15:36:57.589 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 15:37:00.759 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 15:37:01.022 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 263.2202ms
[2024-02-02 15:37:01.030 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 15:37:01.030 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 15:37:01.035 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 4.9912ms
[2024-02-02 15:37:01.076 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 45.6095ms
[2024-02-02 15:37:01.228 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 15:37:01.370 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 142.3258ms
[2024-02-02 15:41:51.061 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:41:51.195 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:41:51.224 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:41:51.503 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:41:52.537 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1025.4891ms.
[2024-02-02 15:41:52.557 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:41:52.615 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1383.2636ms
[2024-02-02 15:41:52.617 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:41:52.619 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1557.2271ms
[2024-02-02 15:42:02.223 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:42:02.227 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:42:02.244 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:42:02.338 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:42:02.666 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 326.661ms.
[2024-02-02 15:42:02.674 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:42:02.713 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 468.9902ms
[2024-02-02 15:42:02.713 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:42:02.714 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 490.8261ms
[2024-02-02 15:42:14.243 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:42:14.247 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:42:14.247 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:42:14.274 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:42:15.348 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1073.6116ms.
[2024-02-02 15:42:15.349 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:42:15.350 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1102.8684ms
[2024-02-02 15:42:15.351 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:42:15.351 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1107.8049ms
[2024-02-02 15:43:50.627 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:43:50.628 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:43:50.628 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:43:50.662 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:43:50.816 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 154.2009ms.
[2024-02-02 15:43:50.817 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:43:50.817 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 188.9694ms
[2024-02-02 15:43:50.817 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:43:50.818 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 191.0826ms
[2024-02-02 15:44:23.643 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:44:23.644 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:44:23.645 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:44:23.679 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:44:25.373 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1693.5555ms.
[2024-02-02 15:44:25.374 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:44:25.375 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1730.0049ms
[2024-02-02 15:44:25.375 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:44:25.376 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1732.4112ms
[2024-02-02 15:44:33.708 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:44:33.709 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:44:33.709 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:44:33.737 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:44:33.900 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 163.1409ms.
[2024-02-02 15:44:33.901 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:44:33.902 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 192.4341ms
[2024-02-02 15:44:33.902 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:44:33.903 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 194.7828ms
[2024-02-02 15:44:51.123 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:44:51.123 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:44:51.123 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:44:51.143 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:44:51.273 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 129.2682ms.
[2024-02-02 15:44:51.273 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:44:51.273 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 149.5033ms
[2024-02-02 15:44:51.273 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:44:51.273 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 150.4175ms
[2024-02-02 15:45:59.224 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 15:45:59.411 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 15:45:59.411 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 15:45:59.412 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 15:45:59.412 +01:00  INF]  Hosting environment: Development
[2024-02-02 15:45:59.412 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 15:46:02.678 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 15:46:02.904 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 226.4476ms
[2024-02-02 15:46:02.911 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 15:46:02.911 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 15:46:02.916 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 5.5289ms
[2024-02-02 15:46:02.967 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 56.4715ms
[2024-02-02 15:46:03.074 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 15:46:03.189 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 115.6504ms
[2024-02-02 15:46:20.305 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:46:20.474 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:46:20.509 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:46:20.782 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:46:22.151 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1358.7517ms.
[2024-02-02 15:46:22.164 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:46:22.244 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1727.4122ms
[2024-02-02 15:46:22.246 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:46:22.249 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1943.1501ms
[2024-02-02 15:46:22.306 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:46:22.313 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:46:22.344 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:46:22.448 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:46:22.769 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 320.0762ms.
[2024-02-02 15:46:22.770 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:46:22.828 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 483.4548ms
[2024-02-02 15:46:22.828 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:46:22.829 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 523.1925ms
[2024-02-02 15:46:22.909 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd003e337a5e3303ce98eb - -
[2024-02-02 15:46:22.914 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:46:22.922 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:46:22.950 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:46:23.209 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 258.5881ms.
[2024-02-02 15:46:23.210 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:46:23.210 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 287.691ms
[2024-02-02 15:46:23.211 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:46:23.211 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd003e337a5e3303ce98eb - - - 200 - application/json;+charset=utf-8 302.4569ms
[2024-02-02 15:46:23.298 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd0026337a5e3303ce98e3 - -
[2024-02-02 15:46:23.299 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:46:23.307 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:46:23.334 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:46:23.359 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 24.2843ms.
[2024-02-02 15:46:23.359 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:46:23.360 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 52.1345ms
[2024-02-02 15:46:23.360 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:46:23.360 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd0026337a5e3303ce98e3 - - - 200 - application/json;+charset=utf-8 61.9778ms
[2024-02-02 15:46:23.440 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:46:23.441 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:46:23.449 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:46:23.482 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:46:23.596 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 113.6118ms.
[2024-02-02 15:46:23.597 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:46:23.608 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 158.4226ms
[2024-02-02 15:46:23.608 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:46:23.608 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 167.7355ms
[2024-02-02 15:46:23.675 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bd003e337a5e3303ce98eb/assign/65bd0026337a5e3303ce98cd - 0
[2024-02-02 15:46:23.785 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:46:23.795 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:46:23.816 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:46:23.974 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 158.1218ms.
[2024-02-02 15:46:23.978 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:46:23.979 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 182.608ms
[2024-02-02 15:46:23.979 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:46:23.979 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bd003e337a5e3303ce98eb/assign/65bd0026337a5e3303ce98cd - 0 - 200 - application/json;+charset=utf-8 304.3650ms
[2024-02-02 15:46:24.050 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bd003e337a5e3303ce98eb/assign/65bd0026337a5e3303ce98cd - 0
[2024-02-02 15:46:24.054 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:46:24.061 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:46:24.081 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:46:24.250 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 168.9244ms.
[2024-02-02 15:46:24.250 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:46:24.251 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 189.7729ms
[2024-02-02 15:46:24.251 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:46:24.251 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bd003e337a5e3303ce98eb/assign/65bd0026337a5e3303ce98cd - 0 - 200 - application/json;+charset=utf-8 201.4468ms
[2024-02-02 15:46:24.329 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd003e337a5e3303ce98eb application/json 422
[2024-02-02 15:46:24.334 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:46:24.342 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:46:24.395 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:46:24.622 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 226.2701ms.
[2024-02-02 15:46:24.622 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:46:24.623 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 280.4076ms
[2024-02-02 15:46:24.623 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:46:24.624 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd003e337a5e3303ce98eb application/json 422 - 200 - application/json;+charset=utf-8 295.1096ms
[2024-02-02 15:46:24.718 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd003e337a5e3303ce98eb/cancel - 0
[2024-02-02 15:46:24.718 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:46:24.724 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:46:24.742 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:46:24.929 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 186.549ms.
[2024-02-02 15:46:24.930 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:46:24.930 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 204.9705ms
[2024-02-02 15:46:24.930 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:46:24.930 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd003e337a5e3303ce98eb/cancel - 0 - 200 - application/json;+charset=utf-8 212.8157ms
[2024-02-02 15:46:25.000 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd003e337a5e3303ce98eb - -
[2024-02-02 15:46:25.000 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:46:25.005 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:46:25.021 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 15:46:25.252 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 230.7346ms.
[2024-02-02 15:46:25.252 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 15:46:25.254 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 248.0607ms
[2024-02-02 15:46:25.254 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:46:25.254 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd003e337a5e3303ce98eb - - - 200 - text/plain;+charset=utf-8 254.5830ms
[2024-02-02 15:47:58.773 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 15:47:58.775 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:47:58.775 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:47:58.803 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 15:47:59.862 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1058.4231ms.
[2024-02-02 15:47:59.863 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:47:59.863 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1087.8537ms
[2024-02-02 15:47:59.863 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 15:47:59.863 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1090.2744ms
[2024-02-02 15:47:59.990 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 15:47:59.991 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:47:59.991 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:48:00.014 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:48:00.168 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 153.6147ms.
[2024-02-02 15:48:00.168 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:48:00.170 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 179.3554ms
[2024-02-02 15:48:00.171 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 15:48:00.171 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 180.7165ms
[2024-02-02 15:48:00.238 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd00a0337a5e3303ce98ec - -
[2024-02-02 15:48:00.239 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:48:00.239 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:48:00.258 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 15:48:00.474 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 215.8877ms.
[2024-02-02 15:48:00.474 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:48:00.475 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 235.6613ms
[2024-02-02 15:48:00.475 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 15:48:00.475 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd00a0337a5e3303ce98ec - - - 200 - application/json;+charset=utf-8 236.9169ms
[2024-02-02 15:48:00.563 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd0026337a5e3303ce98e3 - -
[2024-02-02 15:48:00.563 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:48:00.563 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:48:00.589 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 15:48:00.592 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.1887ms.
[2024-02-02 15:48:00.593 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 15:48:00.594 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 30.432ms
[2024-02-02 15:48:00.594 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 15:48:00.594 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd0026337a5e3303ce98e3 - - - 200 - application/json;+charset=utf-8 31.6069ms
[2024-02-02 15:48:00.673 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 15:48:00.674 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:48:00.675 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:48:00.699 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 15:48:00.704 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5.6111ms.
[2024-02-02 15:48:00.705 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 15:48:00.705 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 30.5716ms
[2024-02-02 15:48:00.705 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 15:48:00.706 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 32.3320ms
[2024-02-02 15:48:00.797 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bd00a0337a5e3303ce98ec/assign/65bd0026337a5e3303ce98cd - 0
[2024-02-02 15:48:00.798 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:48:00.798 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:48:00.823 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:48:01.034 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 210.4985ms.
[2024-02-02 15:48:01.034 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:48:01.034 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 236.4507ms
[2024-02-02 15:48:01.034 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 15:48:01.035 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bd00a0337a5e3303ce98ec/assign/65bd0026337a5e3303ce98cd - 0 - 200 - application/json;+charset=utf-8 238.2184ms
[2024-02-02 15:48:01.093 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bd00a0337a5e3303ce98ec/assign/65bd0026337a5e3303ce98cd - 0
[2024-02-02 15:48:01.094 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:48:01.094 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 15:48:01.119 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 15:48:01.310 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 191.3397ms.
[2024-02-02 15:48:01.311 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:48:01.311 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 216.9846ms
[2024-02-02 15:48:01.311 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 15:48:01.312 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bd00a0337a5e3303ce98ec/assign/65bd0026337a5e3303ce98cd - 0 - 200 - application/json;+charset=utf-8 218.8033ms
[2024-02-02 15:48:01.357 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd00a0337a5e3303ce98ec application/json 422
[2024-02-02 15:48:01.358 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:48:01.359 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:48:01.377 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:48:01.513 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 135.8453ms.
[2024-02-02 15:48:01.513 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:48:01.513 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 154.7476ms
[2024-02-02 15:48:01.514 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 15:48:01.514 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd00a0337a5e3303ce98ec application/json 422 - 200 - application/json;+charset=utf-8 156.5179ms
[2024-02-02 15:48:01.574 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd00a0337a5e3303ce98ec/cancel - 0
[2024-02-02 15:48:01.575 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:48:01.575 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:48:01.595 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 15:48:01.751 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 155.6282ms.
[2024-02-02 15:48:01.751 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 15:48:01.752 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 176.8205ms
[2024-02-02 15:48:01.752 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 15:48:01.752 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd00a0337a5e3303ce98ec/cancel - 0 - 200 - application/json;+charset=utf-8 178.3730ms
[2024-02-02 15:48:01.825 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd00a0337a5e3303ce98ec - -
[2024-02-02 15:48:01.825 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:48:01.825 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 15:48:01.860 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 15:48:02.043 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 182.656ms.
[2024-02-02 15:48:02.043 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 15:48:02.044 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 218.1785ms
[2024-02-02 15:48:02.044 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 15:48:02.044 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd00a0337a5e3303ce98ec - - - 200 - text/plain;+charset=utf-8 219.3389ms
[2024-02-02 15:58:02.903 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 15:58:03.071 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 15:58:03.071 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 15:58:03.072 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 15:58:03.072 +01:00  INF]  Hosting environment: Development
[2024-02-02 15:58:03.072 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 15:58:06.429 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 15:58:06.708 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 278.3335ms
[2024-02-02 15:58:06.717 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 15:58:06.717 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 15:58:06.726 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 8.7416ms
[2024-02-02 15:58:06.762 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 44.6883ms
[2024-02-02 15:58:06.968 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 15:58:07.097 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 129.5053ms
[2024-02-02 15:59:20.357 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/users/create application/json 85
[2024-02-02 15:59:20.497 +01:00  INF]  Executing endpoint '405 HTTP Method Not Supported'
[2024-02-02 15:59:20.497 +01:00  INF]  Executed endpoint '405 HTTP Method Not Supported'
[2024-02-02 15:59:20.507 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/users/create application/json 85 - 405 0 - 150.0216ms
[2024-02-02 15:59:29.407 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85
[2024-02-02 15:59:29.423 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN)
[2024-02-02 15:59:29.437 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 15:59:29.450 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85 - 401 - application/json;+charset=utf-8 42.8523ms
[2024-02-02 15:59:37.168 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85
[2024-02-02 15:59:37.284 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 15:59:37.320 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 15:59:37.497 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 15:59:37.514 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 8.3283ms.
[2024-02-02 15:59:37.525 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 15:59:37.534 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 207.3296ms
[2024-02-02 15:59:37.535 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 15:59:37.535 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85 - 200 - text/plain;+charset=utf-8 367.6256ms
[2024-02-02 16:00:05.176 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 106
[2024-02-02 16:00:05.179 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:00:05.179 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:00:05.232 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:00:05.653 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.BadRequestObjectResult in 420.4736ms.
[2024-02-02 16:00:05.654 +01:00  INF]  Executing BadRequestObjectResult, writing value of type 'System.String'.
[2024-02-02 16:00:05.655 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 475.1979ms
[2024-02-02 16:00:05.655 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:00:05.655 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 106 - 400 - text/plain;+charset=utf-8 479.3040ms
[2024-02-02 16:00:24.913 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 106
[2024-02-02 16:00:24.914 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:00:24.914 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:00:24.960 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:00:24.962 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.7969ms.
[2024-02-02 16:00:24.963 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:00:24.963 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 48.59ms
[2024-02-02 16:00:24.963 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:00:24.963 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 106 - 200 - text/plain;+charset=utf-8 49.9557ms
[2024-02-02 16:01:00.927 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 16:01:00.927 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:01:00.934 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:01:01.126 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:02.958 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1832.093ms.
[2024-02-02 16:01:02.960 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:01:02.987 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 2052.9322ms
[2024-02-02 16:01:02.987 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:01:02.989 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 2062.0206ms
[2024-02-02 16:01:03.063 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 16:01:03.063 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:01:03.069 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:01:03.127 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:03.436 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 308.2802ms.
[2024-02-02 16:01:03.436 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:01:03.472 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 402.1548ms
[2024-02-02 16:01:03.472 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:01:03.472 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 409.4620ms
[2024-02-02 16:01:03.527 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd03afd6661d80fcd0856c - -
[2024-02-02 16:01:03.527 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:01:03.533 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:01:03.570 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:03.860 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 289.2885ms.
[2024-02-02 16:01:03.860 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:01:03.860 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 327.7383ms
[2024-02-02 16:01:03.861 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:01:03.861 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd03afd6661d80fcd0856c - - - 200 - application/json;+charset=utf-8 334.2563ms
[2024-02-02 16:01:03.923 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - -
[2024-02-02 16:01:03.924 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:01:03.928 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:01:03.948 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:03.964 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 15.5995ms.
[2024-02-02 16:01:03.964 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:01:03.965 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 36.2914ms
[2024-02-02 16:01:03.965 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:01:03.965 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - - - 200 - application/json;+charset=utf-8 42.0042ms
[2024-02-02 16:01:04.063 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 16:01:04.063 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:01:04.069 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:01:04.101 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:04.150 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 48.3036ms.
[2024-02-02 16:01:04.150 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 16:01:04.156 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 86.6875ms
[2024-02-02 16:01:04.156 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:01:04.156 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 92.9000ms
[2024-02-02 16:01:04.205 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bd03afd6661d80fcd0856c/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:01:04.206 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:01:04.212 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:01:04.242 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:04.585 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 342.6443ms.
[2024-02-02 16:01:04.588 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:01:04.588 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 376.2951ms
[2024-02-02 16:01:04.589 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:01:04.589 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bd03afd6661d80fcd0856c/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 383.4367ms
[2024-02-02 16:01:04.668 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bd03afd6661d80fcd0856c/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:01:04.669 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:01:04.674 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:01:04.711 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:05.103 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 391.736ms.
[2024-02-02 16:01:05.103 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:01:05.104 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 429.1666ms
[2024-02-02 16:01:05.104 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:01:05.104 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bd03afd6661d80fcd0856c/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 435.8802ms
[2024-02-02 16:01:05.172 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd03afd6661d80fcd0856c application/json 422
[2024-02-02 16:01:05.174 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:01:05.179 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:01:05.236 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:05.550 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 313.1411ms.
[2024-02-02 16:01:05.550 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:01:05.551 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 371.118ms
[2024-02-02 16:01:05.551 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:01:05.551 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd03afd6661d80fcd0856c application/json 422 - 200 - application/json;+charset=utf-8 379.1026ms
[2024-02-02 16:01:05.628 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd03afd6661d80fcd0856c/cancel - 0
[2024-02-02 16:01:05.629 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:01:05.633 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:01:05.665 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:05.970 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 305.1534ms.
[2024-02-02 16:01:05.970 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:01:05.971 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 337.2744ms
[2024-02-02 16:01:05.971 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:01:05.971 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd03afd6661d80fcd0856c/cancel - 0 - 200 - application/json;+charset=utf-8 342.7498ms
[2024-02-02 16:01:06.068 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd03afd6661d80fcd0856c - -
[2024-02-02 16:01:06.069 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:01:06.073 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:01:06.108 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:06.449 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 340.1215ms.
[2024-02-02 16:01:06.449 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:01:06.449 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 375.4634ms
[2024-02-02 16:01:06.449 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:01:06.449 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd03afd6661d80fcd0856c - - - 200 - text/plain;+charset=utf-8 381.1028ms
[2024-02-02 16:01:06.541 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85
[2024-02-02 16:01:06.542 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:01:06.542 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:01:06.576 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:01:06.577 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.3285ms.
[2024-02-02 16:01:06.577 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:01:06.578 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 35.8288ms
[2024-02-02 16:01:06.578 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:01:06.578 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85 - 200 - text/plain;+charset=utf-8 37.0038ms
[2024-02-02 16:02:08.920 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37
[2024-02-02 16:02:08.921 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:02:08.923 +01:00  INF]  Route matched with {action = "UnlockUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UnlockUser(skiservice.Dto.UnlockUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:02:08.963 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.UnlockUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:02:08.977 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.UnlockUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 13.6636ms.
[2024-02-02 16:02:08.977 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:02:08.977 +01:00  INF]  Executed action skiservice.Controllers.UsersController.UnlockUser (skiservice) in 54.3946ms
[2024-02-02 16:02:08.977 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:02:08.978 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37 - 200 - text/plain;+charset=utf-8 57.7067ms
[2024-02-02 16:02:57.137 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 16:02:57.138 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:02:57.138 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:02:57.162 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 16:02:58.505 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1343.0536ms.
[2024-02-02 16:02:58.506 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:02:58.506 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1367.8628ms
[2024-02-02 16:02:58.506 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:02:58.507 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1369.9981ms
[2024-02-02 16:02:58.554 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 16:02:58.554 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:02:58.554 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:02:58.573 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:02:58.772 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 199.1153ms.
[2024-02-02 16:02:58.773 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:02:58.774 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 219.7114ms
[2024-02-02 16:02:58.774 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:02:58.774 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 220.5985ms
[2024-02-02 16:02:58.868 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0422d6661d80fcd0856e - -
[2024-02-02 16:02:58.868 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:02:58.868 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:02:58.899 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 16:02:59.199 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 299.5295ms.
[2024-02-02 16:02:59.199 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:02:59.199 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 330.7606ms
[2024-02-02 16:02:59.199 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:02:59.200 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0422d6661d80fcd0856e - - - 200 - application/json;+charset=utf-8 331.8612ms
[2024-02-02 16:02:59.290 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - -
[2024-02-02 16:02:59.290 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:02:59.291 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:02:59.319 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 16:02:59.326 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.5437ms.
[2024-02-02 16:02:59.326 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:02:59.327 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 35.837ms
[2024-02-02 16:02:59.327 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:02:59.327 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - - - 200 - application/json;+charset=utf-8 36.9900ms
[2024-02-02 16:02:59.416 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 16:02:59.416 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:02:59.416 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:02:59.454 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 16:02:59.458 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.1794ms.
[2024-02-02 16:02:59.458 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 16:02:59.458 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 41.9403ms
[2024-02-02 16:02:59.458 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:02:59.459 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 42.8375ms
[2024-02-02 16:02:59.542 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bd0422d6661d80fcd0856e/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:02:59.552 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:02:59.553 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:02:59.586 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:02:59.800 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 213.0494ms.
[2024-02-02 16:02:59.800 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:02:59.800 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 247.7089ms
[2024-02-02 16:02:59.801 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:02:59.801 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bd0422d6661d80fcd0856e/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 259.0956ms
[2024-02-02 16:02:59.856 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bd0422d6661d80fcd0856e/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:02:59.857 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:02:59.857 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:02:59.889 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:03:00.218 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 328.9698ms.
[2024-02-02 16:03:00.218 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:03:00.219 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 361.4997ms
[2024-02-02 16:03:00.219 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:03:00.219 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bd0422d6661d80fcd0856e/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 362.9793ms
[2024-02-02 16:03:00.282 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0422d6661d80fcd0856e application/json 422
[2024-02-02 16:03:00.283 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:03:00.283 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:03:00.316 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:03:00.687 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 371.2927ms.
[2024-02-02 16:03:00.688 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:03:00.688 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 404.2896ms
[2024-02-02 16:03:00.688 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:03:00.688 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0422d6661d80fcd0856e application/json 422 - 200 - application/json;+charset=utf-8 406.1173ms
[2024-02-02 16:03:00.740 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0422d6661d80fcd0856e/cancel - 0
[2024-02-02 16:03:00.741 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:03:00.741 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:03:00.773 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:03:00.997 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 223.1342ms.
[2024-02-02 16:03:00.997 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:03:00.997 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 256.4262ms
[2024-02-02 16:03:00.998 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:03:00.998 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0422d6661d80fcd0856e/cancel - 0 - 200 - application/json;+charset=utf-8 257.8493ms
[2024-02-02 16:03:01.070 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0422d6661d80fcd0856e - -
[2024-02-02 16:03:01.071 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:03:01.071 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:03:01.101 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 16:03:01.433 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 332.4646ms.
[2024-02-02 16:03:01.433 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:03:01.434 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 362.6147ms
[2024-02-02 16:03:01.434 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:03:01.434 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0422d6661d80fcd0856e - - - 200 - text/plain;+charset=utf-8 364.3845ms
[2024-02-02 16:03:01.527 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85
[2024-02-02 16:03:01.527 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:03:01.528 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:03:01.562 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:03:01.564 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.4449ms.
[2024-02-02 16:03:01.564 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:03:01.565 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 36.8775ms
[2024-02-02 16:03:01.565 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:03:01.565 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85 - 200 - text/plain;+charset=utf-8 38.4704ms
[2024-02-02 16:03:01.641 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37
[2024-02-02 16:03:01.641 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:03:01.641 +01:00  INF]  Route matched with {action = "UnlockUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UnlockUser(skiservice.Dto.UnlockUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:03:01.675 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.UnlockUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:03:01.676 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.UnlockUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.5908ms.
[2024-02-02 16:03:01.677 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:03:01.677 +01:00  INF]  Executed action skiservice.Controllers.UsersController.UnlockUser (skiservice) in 35.5316ms
[2024-02-02 16:03:01.677 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:03:01.677 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37 - 200 - text/plain;+charset=utf-8 36.8473ms
[2024-02-02 16:15:17.250 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 16:15:17.259 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:15:17.260 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:15:17.281 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:17.972 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 690.4761ms.
[2024-02-02 16:15:17.972 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:15:17.972 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 712.6722ms
[2024-02-02 16:15:17.973 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:15:17.973 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 722.4068ms
[2024-02-02 16:15:18.061 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 16:15:18.061 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:15:18.062 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:15:18.074 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:18.179 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 105.4182ms.
[2024-02-02 16:15:18.179 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:15:18.180 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 118.0742ms
[2024-02-02 16:15:18.180 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:15:18.180 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 118.8888ms
[2024-02-02 16:15:18.250 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0706d6661d80fcd08570 - -
[2024-02-02 16:15:18.251 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:15:18.251 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:15:18.263 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:18.376 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 112.1039ms.
[2024-02-02 16:15:18.376 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:15:18.376 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 125.2981ms
[2024-02-02 16:15:18.376 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:15:18.376 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0706d6661d80fcd08570 - - - 200 - application/json;+charset=utf-8 126.0396ms
[2024-02-02 16:15:18.456 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - -
[2024-02-02 16:15:18.456 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:15:18.457 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:15:18.469 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:18.472 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.6302ms.
[2024-02-02 16:15:18.472 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:15:18.473 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 16.1202ms
[2024-02-02 16:15:18.473 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:15:18.473 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - - - 200 - application/json;+charset=utf-8 17.3568ms
[2024-02-02 16:15:18.553 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 16:15:18.553 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:15:18.554 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:15:18.577 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:18.581 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.8112ms.
[2024-02-02 16:15:18.582 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 16:15:18.582 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 28.2513ms
[2024-02-02 16:15:18.582 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:15:18.582 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 29.1162ms
[2024-02-02 16:15:18.646 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bd0706d6661d80fcd08570/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:15:18.647 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:15:18.647 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:15:18.658 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:18.788 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 130.2641ms.
[2024-02-02 16:15:18.789 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:15:18.789 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 141.8659ms
[2024-02-02 16:15:18.789 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:15:18.789 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bd0706d6661d80fcd08570/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 142.7276ms
[2024-02-02 16:15:18.879 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bd0706d6661d80fcd08570/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:15:18.879 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:15:18.879 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:15:18.892 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:19.001 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 109.0246ms.
[2024-02-02 16:15:19.001 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:15:19.001 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 121.6537ms
[2024-02-02 16:15:19.001 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:15:19.001 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bd0706d6661d80fcd08570/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 122.3258ms
[2024-02-02 16:15:19.067 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0706d6661d80fcd08570 application/json 422
[2024-02-02 16:15:19.067 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:15:19.067 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:15:19.085 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:19.229 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 143.2348ms.
[2024-02-02 16:15:19.229 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:15:19.229 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 161.6642ms
[2024-02-02 16:15:19.229 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:15:19.229 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0706d6661d80fcd08570 application/json 422 - 200 - application/json;+charset=utf-8 162.3521ms
[2024-02-02 16:15:19.303 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0706d6661d80fcd08570/cancel - 0
[2024-02-02 16:15:19.303 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:15:19.303 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:15:19.315 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:19.440 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 124.827ms.
[2024-02-02 16:15:19.441 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:15:19.441 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 137.7769ms
[2024-02-02 16:15:19.441 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:15:19.441 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0706d6661d80fcd08570/cancel - 0 - 200 - application/json;+charset=utf-8 138.6402ms
[2024-02-02 16:15:19.523 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0706d6661d80fcd08570 - -
[2024-02-02 16:15:19.523 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:15:19.523 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:15:19.535 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:19.665 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 129.8599ms.
[2024-02-02 16:15:19.665 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:15:19.666 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 142.3093ms
[2024-02-02 16:15:19.666 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:15:19.666 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0706d6661d80fcd08570 - - - 200 - text/plain;+charset=utf-8 143.2274ms
[2024-02-02 16:15:19.747 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85
[2024-02-02 16:15:19.747 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:15:19.747 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:15:19.767 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:19.949 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.BadRequestObjectResult in 181.7315ms.
[2024-02-02 16:15:19.949 +01:00  INF]  Executing BadRequestObjectResult, writing value of type 'System.String'.
[2024-02-02 16:15:19.949 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 202.0016ms
[2024-02-02 16:15:19.949 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:15:19.949 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85 - 400 - text/plain;+charset=utf-8 202.7991ms
[2024-02-02 16:15:20.033 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37
[2024-02-02 16:15:20.034 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:15:20.034 +01:00  INF]  Route matched with {action = "UnlockUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UnlockUser(skiservice.Dto.UnlockUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:15:20.051 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.UnlockUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:15:20.052 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.UnlockUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.0949ms.
[2024-02-02 16:15:20.052 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:15:20.052 +01:00  INF]  Executed action skiservice.Controllers.UsersController.UnlockUser (skiservice) in 18.3556ms
[2024-02-02 16:15:20.052 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:15:20.052 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37 - 200 - text/plain;+charset=utf-8 19.0690ms
[2024-02-02 16:17:07.922 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 16:17:07.922 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:17:07.922 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:17:07.942 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:09.253 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1310.9067ms.
[2024-02-02 16:17:09.254 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:17:09.254 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1331.812ms
[2024-02-02 16:17:09.254 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:17:09.254 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1332.6125ms
[2024-02-02 16:17:09.343 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 16:17:09.344 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:17:09.344 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:17:09.369 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:09.549 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 179.2262ms.
[2024-02-02 16:17:09.549 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:17:09.550 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 205.8878ms
[2024-02-02 16:17:09.550 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:17:09.550 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 206.9058ms
[2024-02-02 16:17:09.624 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0775d6661d80fcd08572 - -
[2024-02-02 16:17:09.625 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:17:09.625 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:17:09.648 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:09.944 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 296.0635ms.
[2024-02-02 16:17:09.944 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:17:09.945 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 319.9353ms
[2024-02-02 16:17:09.945 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:17:09.945 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0775d6661d80fcd08572 - - - 200 - application/json;+charset=utf-8 320.8772ms
[2024-02-02 16:17:10.015 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - -
[2024-02-02 16:17:10.015 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:17:10.015 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:17:10.041 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:10.045 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.4319ms.
[2024-02-02 16:17:10.046 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:17:10.047 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 31.3543ms
[2024-02-02 16:17:10.047 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:17:10.047 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - - - 200 - application/json;+charset=utf-8 32.1942ms
[2024-02-02 16:17:10.126 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 16:17:10.126 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:17:10.126 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:17:10.153 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:10.157 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.0461ms.
[2024-02-02 16:17:10.158 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 16:17:10.158 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 31.3629ms
[2024-02-02 16:17:10.158 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:17:10.158 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 31.9355ms
[2024-02-02 16:17:10.237 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bd0775d6661d80fcd08572/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:17:10.238 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:17:10.238 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:17:10.265 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:10.512 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 246.0431ms.
[2024-02-02 16:17:10.512 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:17:10.512 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 274.0873ms
[2024-02-02 16:17:10.512 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:17:10.513 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bd0775d6661d80fcd08572/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 275.2798ms
[2024-02-02 16:17:10.568 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bd0775d6661d80fcd08572/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:17:10.568 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:17:10.568 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:17:10.597 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:10.834 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 236.4628ms.
[2024-02-02 16:17:10.834 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:17:10.834 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 265.7131ms
[2024-02-02 16:17:10.834 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:17:10.835 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bd0775d6661d80fcd08572/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 266.9804ms
[2024-02-02 16:17:10.914 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0775d6661d80fcd08572 application/json 422
[2024-02-02 16:17:10.914 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:17:10.914 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:17:10.941 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:11.201 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 260.309ms.
[2024-02-02 16:17:11.201 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:17:11.202 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 287.0483ms
[2024-02-02 16:17:11.202 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:17:11.202 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0775d6661d80fcd08572 application/json 422 - 200 - application/json;+charset=utf-8 288.2369ms
[2024-02-02 16:17:11.271 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0775d6661d80fcd08572/cancel - 0
[2024-02-02 16:17:11.272 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:17:11.272 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:17:11.298 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:11.556 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 257.1097ms.
[2024-02-02 16:17:11.556 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:17:11.556 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 284.1236ms
[2024-02-02 16:17:11.556 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:17:11.556 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0775d6661d80fcd08572/cancel - 0 - 200 - application/json;+charset=utf-8 285.5616ms
[2024-02-02 16:17:11.606 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0775d6661d80fcd08572 - -
[2024-02-02 16:17:11.607 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:17:11.607 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:17:11.635 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:11.956 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 320.5452ms.
[2024-02-02 16:17:11.956 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:17:11.957 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 349.7387ms
[2024-02-02 16:17:11.957 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:17:11.957 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0775d6661d80fcd08572 - - - 200 - text/plain;+charset=utf-8 351.3422ms
[2024-02-02 16:17:12.028 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85
[2024-02-02 16:17:12.028 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:17:12.028 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:17:12.055 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:12.056 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.0538ms.
[2024-02-02 16:17:12.056 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:17:12.056 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 28.3749ms
[2024-02-02 16:17:12.057 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:17:12.057 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85 - 200 - text/plain;+charset=utf-8 29.1024ms
[2024-02-02 16:17:12.124 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37
[2024-02-02 16:17:12.125 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:17:12.125 +01:00  INF]  Route matched with {action = "UnlockUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UnlockUser(skiservice.Dto.UnlockUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:17:12.170 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.UnlockUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:17:12.172 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.UnlockUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.2702ms.
[2024-02-02 16:17:12.172 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:17:12.172 +01:00  INF]  Executed action skiservice.Controllers.UsersController.UnlockUser (skiservice) in 46.4712ms
[2024-02-02 16:17:12.172 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:17:12.172 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37 - 200 - text/plain;+charset=utf-8 48.2788ms
[2024-02-02 16:26:32.583 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 16:26:32.584 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:26:32.584 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:26:32.610 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:34.229 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1618.5377ms.
[2024-02-02 16:26:34.230 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:26:34.230 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1646.0634ms
[2024-02-02 16:26:34.230 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:26:34.230 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1647.3174ms
[2024-02-02 16:26:34.344 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 16:26:34.344 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:26:34.344 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:26:34.373 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:34.655 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 281.7442ms.
[2024-02-02 16:26:34.655 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:26:34.656 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 311.2194ms
[2024-02-02 16:26:34.656 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:26:34.656 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 312.1249ms
[2024-02-02 16:26:34.735 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd09aad6661d80fcd08574 - -
[2024-02-02 16:26:34.736 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:26:34.736 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:26:34.771 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:35.034 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 262.6995ms.
[2024-02-02 16:26:35.034 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:26:35.035 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 298.3264ms
[2024-02-02 16:26:35.035 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:26:35.035 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd09aad6661d80fcd08574 - - - 200 - application/json;+charset=utf-8 300.2718ms
[2024-02-02 16:26:35.126 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - -
[2024-02-02 16:26:35.126 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:26:35.126 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:26:35.157 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:35.164 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 6.3669ms.
[2024-02-02 16:26:35.164 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:26:35.165 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 38.1758ms
[2024-02-02 16:26:35.165 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:26:35.165 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - - - 200 - application/json;+charset=utf-8 39.3639ms
[2024-02-02 16:26:35.234 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 16:26:35.234 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:26:35.235 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:26:35.265 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:35.269 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.7067ms.
[2024-02-02 16:26:35.269 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 16:26:35.269 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 34.4929ms
[2024-02-02 16:26:35.269 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:26:35.269 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 35.4715ms
[2024-02-02 16:26:35.313 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bd09aad6661d80fcd08574/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:26:35.314 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:26:35.314 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:26:35.347 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:35.651 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 303.1478ms.
[2024-02-02 16:26:35.651 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:26:35.652 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 337.282ms
[2024-02-02 16:26:35.652 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:26:35.652 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bd09aad6661d80fcd08574/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 339.3203ms
[2024-02-02 16:26:35.750 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bd09aad6661d80fcd08574/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:26:35.750 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:26:35.750 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:26:35.777 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:36.185 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 407.8015ms.
[2024-02-02 16:26:36.186 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:26:36.186 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 435.7584ms
[2024-02-02 16:26:36.186 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:26:36.187 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bd09aad6661d80fcd08574/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 436.9639ms
[2024-02-02 16:26:36.278 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd09aad6661d80fcd08574 application/json 422
[2024-02-02 16:26:36.279 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:26:36.282 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:26:36.304 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:36.472 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 168.0225ms.
[2024-02-02 16:26:36.473 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:26:36.473 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 191.1498ms
[2024-02-02 16:26:36.473 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:26:36.474 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd09aad6661d80fcd08574 application/json 422 - 200 - application/json;+charset=utf-8 195.3806ms
[2024-02-02 16:26:36.541 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd09aad6661d80fcd08574/cancel - 0
[2024-02-02 16:26:36.542 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:26:36.542 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:26:36.569 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:36.934 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 363.268ms.
[2024-02-02 16:26:36.934 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:26:36.935 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 392.5889ms
[2024-02-02 16:26:36.935 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:26:36.935 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd09aad6661d80fcd08574/cancel - 0 - 200 - application/json;+charset=utf-8 394.1501ms
[2024-02-02 16:26:37.037 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd09aad6661d80fcd08574 - -
[2024-02-02 16:26:37.037 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:26:37.037 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:26:37.067 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:37.431 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 363.0037ms.
[2024-02-02 16:26:37.431 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:26:37.431 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 393.9742ms
[2024-02-02 16:26:37.431 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:26:37.432 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd09aad6661d80fcd08574 - - - 200 - text/plain;+charset=utf-8 394.8127ms
[2024-02-02 16:26:37.503 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85
[2024-02-02 16:26:37.503 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:26:37.503 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:26:37.533 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:37.534 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 0.997ms.
[2024-02-02 16:26:37.534 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:26:37.535 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 31.1605ms
[2024-02-02 16:26:37.535 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:26:37.535 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 85 - 200 - text/plain;+charset=utf-8 31.8174ms
[2024-02-02 16:26:37.613 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37
[2024-02-02 16:26:37.614 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:26:37.614 +01:00  INF]  Route matched with {action = "UnlockUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UnlockUser(skiservice.Dto.UnlockUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:26:37.646 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.UnlockUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:26:37.648 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.UnlockUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.4718ms.
[2024-02-02 16:26:37.648 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:26:37.649 +01:00  INF]  Executed action skiservice.Controllers.UsersController.UnlockUser (skiservice) in 34.43ms
[2024-02-02 16:26:37.649 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:26:37.649 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37 - 200 - text/plain;+charset=utf-8 35.4965ms
[2024-02-02 16:30:56.719 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 75
[2024-02-02 16:30:56.720 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:30:56.721 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:30:56.752 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:30:56.753 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.0588ms.
[2024-02-02 16:30:56.753 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:30:56.754 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 33.0133ms
[2024-02-02 16:30:56.754 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:30:56.754 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 75 - 200 - text/plain;+charset=utf-8 34.6350ms
[2024-02-02 16:30:59.579 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 78
[2024-02-02 16:30:59.579 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:30:59.579 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:30:59.606 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:30:59.608 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.4362ms.
[2024-02-02 16:30:59.609 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:30:59.609 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 29.6303ms
[2024-02-02 16:30:59.609 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:30:59.609 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 78 - 200 - text/plain;+charset=utf-8 30.5213ms
[2024-02-02 16:32:37.563 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 76
[2024-02-02 16:32:37.564 +01:00  INF]  Authorization failed. These requirements were not met:
RolesAuthorizationRequirement:User.IsInRole must be true for one of the following roles: (ADMIN)
[2024-02-02 16:32:37.564 +01:00  INF]  AuthenticationScheme: Bearer was challenged.
[2024-02-02 16:32:37.564 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 76 - 401 - application/json;+charset=utf-8 1.1163ms
[2024-02-02 16:33:12.162 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 16:33:12.163 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:33:12.163 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:33:12.195 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:13.876 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1680.2438ms.
[2024-02-02 16:33:13.876 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:33:13.876 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1706.4605ms
[2024-02-02 16:33:13.877 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:33:13.877 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1715.4713ms
[2024-02-02 16:33:13.922 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 16:33:13.923 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:33:13.923 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:33:13.945 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:14.160 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 215.0194ms.
[2024-02-02 16:33:14.160 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:33:14.161 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 237.3415ms
[2024-02-02 16:33:14.161 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:33:14.161 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 239.2771ms
[2024-02-02 16:33:14.258 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0b3ad6661d80fcd08578 - -
[2024-02-02 16:33:14.258 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:33:14.259 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:33:14.293 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:14.552 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 258.3594ms.
[2024-02-02 16:33:14.552 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:33:14.553 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 293.8399ms
[2024-02-02 16:33:14.553 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:33:14.553 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0b3ad6661d80fcd08578 - - - 200 - application/json;+charset=utf-8 294.8041ms
[2024-02-02 16:33:14.644 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - -
[2024-02-02 16:33:14.645 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:33:14.657 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:33:14.689 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:14.694 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.7894ms.
[2024-02-02 16:33:14.694 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:33:14.694 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 37.0524ms
[2024-02-02 16:33:14.694 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:33:14.694 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - - - 200 - application/json;+charset=utf-8 51.0753ms
[2024-02-02 16:33:14.752 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 16:33:14.752 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:33:14.752 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:33:14.781 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:14.786 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.5122ms.
[2024-02-02 16:33:14.786 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 16:33:14.787 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 33.9565ms
[2024-02-02 16:33:14.787 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:33:14.787 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 34.8442ms
[2024-02-02 16:33:14.857 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bd0b3ad6661d80fcd08578/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:33:14.858 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:33:14.858 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:33:14.890 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:15.198 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 308.0025ms.
[2024-02-02 16:33:15.198 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:33:15.199 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 340.7404ms
[2024-02-02 16:33:15.199 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:33:15.199 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bd0b3ad6661d80fcd08578/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 342.3153ms
[2024-02-02 16:33:15.283 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bd0b3ad6661d80fcd08578/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:33:15.284 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:33:15.284 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:33:15.314 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:15.610 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 296.2967ms.
[2024-02-02 16:33:15.611 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:33:15.611 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 327.1876ms
[2024-02-02 16:33:15.611 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:33:15.612 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bd0b3ad6661d80fcd08578/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 328.2575ms
[2024-02-02 16:33:15.670 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0b3ad6661d80fcd08578 application/json 422
[2024-02-02 16:33:15.670 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:33:15.670 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:33:15.695 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:15.994 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 298.9991ms.
[2024-02-02 16:33:15.995 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:33:15.995 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 324.6884ms
[2024-02-02 16:33:15.995 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:33:15.995 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0b3ad6661d80fcd08578 application/json 422 - 200 - application/json;+charset=utf-8 325.5085ms
[2024-02-02 16:33:16.074 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0b3ad6661d80fcd08578/cancel - 0
[2024-02-02 16:33:16.074 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:33:16.074 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:33:16.103 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:16.377 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 273.6141ms.
[2024-02-02 16:33:16.377 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:33:16.378 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 303.1808ms
[2024-02-02 16:33:16.378 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:33:16.378 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0b3ad6661d80fcd08578/cancel - 0 - 200 - application/json;+charset=utf-8 304.4733ms
[2024-02-02 16:33:16.446 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0b3ad6661d80fcd08578 - -
[2024-02-02 16:33:16.446 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:33:16.446 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:33:16.481 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:16.858 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 376.5765ms.
[2024-02-02 16:33:16.858 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:33:16.858 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 412.2617ms
[2024-02-02 16:33:16.858 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:33:16.859 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0b3ad6661d80fcd08578 - - - 200 - text/plain;+charset=utf-8 413.1448ms
[2024-02-02 16:33:16.946 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 74
[2024-02-02 16:33:16.947 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:33:16.947 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:33:16.975 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:16.977 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.2538ms.
[2024-02-02 16:33:16.977 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:33:16.977 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 30.3056ms
[2024-02-02 16:33:16.977 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:33:16.978 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 74 - 200 - text/plain;+charset=utf-8 31.5190ms
[2024-02-02 16:33:17.058 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37
[2024-02-02 16:33:17.058 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:33:17.059 +01:00  INF]  Route matched with {action = "UnlockUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UnlockUser(skiservice.Dto.UnlockUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:33:17.081 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.UnlockUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:17.083 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.UnlockUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.9181ms.
[2024-02-02 16:33:17.084 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:33:17.084 +01:00  INF]  Executed action skiservice.Controllers.UsersController.UnlockUser (skiservice) in 25.1167ms
[2024-02-02 16:33:17.084 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:33:17.084 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37 - 200 - text/plain;+charset=utf-8 26.2581ms
[2024-02-02 16:33:39.181 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 75
[2024-02-02 16:33:39.181 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:33:39.182 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:33:39.212 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:33:39.214 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.3971ms.
[2024-02-02 16:33:39.214 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:33:39.214 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 32.5195ms
[2024-02-02 16:33:39.214 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:33:39.214 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 75 - 200 - text/plain;+charset=utf-8 33.6227ms
[2024-02-02 16:36:29.063 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 16:36:29.064 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:36:29.064 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:36:29.096 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:30.944 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1847.3147ms.
[2024-02-02 16:36:30.944 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:36:30.944 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1880.195ms
[2024-02-02 16:36:30.944 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:36:30.945 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1881.1314ms
[2024-02-02 16:36:31.031 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 16:36:31.031 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:36:31.032 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:36:31.054 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:31.215 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 160.5814ms.
[2024-02-02 16:36:31.215 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:36:31.216 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 184.6935ms
[2024-02-02 16:36:31.217 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:36:31.217 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 185.7629ms
[2024-02-02 16:36:31.279 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0bffd6661d80fcd0857b - -
[2024-02-02 16:36:31.279 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:36:31.279 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:36:31.305 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:31.549 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 242.8135ms.
[2024-02-02 16:36:31.549 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:36:31.549 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 270.1288ms
[2024-02-02 16:36:31.550 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:36:31.550 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0bffd6661d80fcd0857b - - - 200 - application/json;+charset=utf-8 271.0800ms
[2024-02-02 16:36:31.623 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - -
[2024-02-02 16:36:31.623 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:36:31.624 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:36:31.651 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:31.657 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 5.2198ms.
[2024-02-02 16:36:31.657 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:36:31.657 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 33.6089ms
[2024-02-02 16:36:31.657 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:36:31.658 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - - - 200 - application/json;+charset=utf-8 34.7200ms
[2024-02-02 16:36:31.733 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 16:36:31.734 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:36:31.734 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:36:31.762 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:31.768 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.971ms.
[2024-02-02 16:36:31.768 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 16:36:31.769 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 34.786ms
[2024-02-02 16:36:31.769 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:36:31.769 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 35.3763ms
[2024-02-02 16:36:31.825 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bd0bffd6661d80fcd0857b/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:36:31.825 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:36:31.825 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:36:31.855 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:32.092 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 236.2043ms.
[2024-02-02 16:36:32.092 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:36:32.092 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 266.8381ms
[2024-02-02 16:36:32.092 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:36:32.092 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bd0bffd6661d80fcd0857b/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 267.6291ms
[2024-02-02 16:36:32.181 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bd0bffd6661d80fcd0857b/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:36:32.181 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:36:32.182 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:36:32.208 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:32.433 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 224.866ms.
[2024-02-02 16:36:32.433 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:36:32.433 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 251.6503ms
[2024-02-02 16:36:32.433 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:36:32.434 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bd0bffd6661d80fcd0857b/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 252.6003ms
[2024-02-02 16:36:32.498 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0bffd6661d80fcd0857b application/json 422
[2024-02-02 16:36:32.499 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:36:32.499 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:36:32.528 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:32.798 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 270.052ms.
[2024-02-02 16:36:32.799 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:36:32.799 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 300.1666ms
[2024-02-02 16:36:32.799 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:36:32.800 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0bffd6661d80fcd0857b application/json 422 - 200 - application/json;+charset=utf-8 301.4216ms
[2024-02-02 16:36:32.855 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0bffd6661d80fcd0857b/cancel - 0
[2024-02-02 16:36:32.856 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:36:32.856 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:36:32.881 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:33.204 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 322.6664ms.
[2024-02-02 16:36:33.205 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:36:33.205 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 348.7116ms
[2024-02-02 16:36:33.205 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:36:33.206 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0bffd6661d80fcd0857b/cancel - 0 - 200 - application/json;+charset=utf-8 350.2351ms
[2024-02-02 16:36:33.258 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0bffd6661d80fcd0857b - -
[2024-02-02 16:36:33.259 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:36:33.259 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:36:33.287 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:33.624 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 336.4942ms.
[2024-02-02 16:36:33.624 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:36:33.624 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 365.5455ms
[2024-02-02 16:36:33.625 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:36:33.625 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0bffd6661d80fcd0857b - - - 200 - text/plain;+charset=utf-8 366.5166ms
[2024-02-02 16:36:33.713 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 77
[2024-02-02 16:36:33.714 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:36:33.714 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:36:33.742 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:33.743 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.0495ms.
[2024-02-02 16:36:33.743 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:36:33.743 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 29.3358ms
[2024-02-02 16:36:33.743 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:36:33.743 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 77 - 200 - text/plain;+charset=utf-8 29.9900ms
[2024-02-02 16:36:33.821 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37
[2024-02-02 16:36:33.821 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:36:33.822 +01:00  INF]  Route matched with {action = "UnlockUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UnlockUser(skiservice.Dto.UnlockUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:36:33.853 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.UnlockUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:36:33.854 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.UnlockUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1.3015ms.
[2024-02-02 16:36:33.854 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:36:33.855 +01:00  INF]  Executed action skiservice.Controllers.UsersController.UnlockUser (skiservice) in 32.945ms
[2024-02-02 16:36:33.855 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:36:33.855 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37 - 200 - text/plain;+charset=utf-8 34.2364ms
[2024-02-02 16:37:24.348 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders - -
[2024-02-02 16:37:24.348 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:37:24.348 +01:00  INF]  Route matched with {action = "GetAllServiceOrders", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrders() on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:37:24.386 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:25.747 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 1360.7806ms.
[2024-02-02 16:37:25.747 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:37:25.747 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice) in 1397.7805ms
[2024-02-02 16:37:25.747 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrders (skiservice)'
[2024-02-02 16:37:25.748 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders - - - 200 - application/json;+charset=utf-8 1399.7428ms
[2024-02-02 16:37:25.848 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423
[2024-02-02 16:37:25.848 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:37:25.848 +01:00  INF]  Route matched with {action = "CreateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CreateServiceOrder(skiservice.Dtos.CreateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:37:25.872 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:26.108 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.CreatedAtActionResult in 235.2013ms.
[2024-02-02 16:37:26.108 +01:00  INF]  Executing CreatedAtActionResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:37:26.109 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice) in 260.6138ms
[2024-02-02 16:37:26.109 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CreateServiceOrder (skiservice)'
[2024-02-02 16:37:26.110 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/serviceorders application/json 423 - 201 - application/json;+charset=utf-8 261.9498ms
[2024-02-02 16:37:26.187 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0c36d6661d80fcd0857d - -
[2024-02-02 16:37:26.188 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:37:26.188 +01:00  INF]  Route matched with {action = "GetServiceOrderById", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetServiceOrderById(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:37:26.217 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:26.541 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 324.2997ms.
[2024-02-02 16:37:26.542 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:37:26.542 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice) in 354.2562ms
[2024-02-02 16:37:26.542 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetServiceOrderById (skiservice)'
[2024-02-02 16:37:26.543 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/65bd0c36d6661d80fcd0857d - - - 200 - application/json;+charset=utf-8 355.2218ms
[2024-02-02 16:37:26.609 +01:00  INF]  Request starting HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - -
[2024-02-02 16:37:26.609 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:37:26.609 +01:00  INF]  Route matched with {action = "GetAllServiceOrdersByPriorty", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] GetAllServiceOrdersByPriorty(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:37:26.635 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:26.640 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 4.7951ms.
[2024-02-02 16:37:26.641 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.Collections.Generic.List`1[[skiservice.Dto.ServiceOrderDto, skiservice, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]'.
[2024-02-02 16:37:26.641 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice) in 31.6612ms
[2024-02-02 16:37:26.641 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.GetAllServiceOrdersByPriorty (skiservice)'
[2024-02-02 16:37:26.641 +01:00  INF]  Request finished HTTP/1.1 GET https://localhost:7297/api/serviceorders/priorities/65bd02fad6661d80fcd08561 - - - 200 - application/json;+charset=utf-8 32.7614ms
[2024-02-02 16:37:26.701 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54
[2024-02-02 16:37:26.702 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:37:26.702 +01:00  INF]  Route matched with {action = "Login", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Login(skiservice.Dto.LoginUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:37:26.734 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Login (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:26.738 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Login (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 3.9939ms.
[2024-02-02 16:37:26.738 +01:00  INF]  Executing OkObjectResult, writing value of type 'Microsoft.AspNetCore.Mvc.JsonResult'.
[2024-02-02 16:37:26.738 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Login (skiservice) in 36.2887ms
[2024-02-02 16:37:26.738 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Login (skiservice)'
[2024-02-02 16:37:26.738 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/login application/json 54 - 200 - application/json;+charset=utf-8 37.1835ms
[2024-02-02 16:37:26.813 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/65bd0c36d6661d80fcd0857d/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:37:26.813 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:37:26.813 +01:00  INF]  Route matched with {action = "AssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] AssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:37:26.858 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:27.126 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 267.9224ms.
[2024-02-02 16:37:27.127 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:37:27.127 +01:00  INF]  Executed action skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice) in 313.2107ms
[2024-02-02 16:37:27.127 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.AssignServiceOrderToUser (skiservice)'
[2024-02-02 16:37:27.127 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/65bd0c36d6661d80fcd0857d/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 314.5805ms
[2024-02-02 16:37:27.186 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/65bd0c36d6661d80fcd0857d/assign/65bd02fad6661d80fcd0854c - 0
[2024-02-02 16:37:27.187 +01:00  INF]  Executing endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:37:27.187 +01:00  INF]  Route matched with {action = "ReAssignServiceOrderToUser", controller = "Assign"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] ReAssignServiceOrderToUser(System.String, System.String) on controller skiservice.Controllers.AssignController (skiservice).
[2024-02-02 16:37:27.210 +01:00  INF]  Executing action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:27.537 +01:00  INF]  Executed action method skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 326.0396ms.
[2024-02-02 16:37:27.537 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:37:27.537 +01:00  INF]  Executed action skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice) in 350.7802ms
[2024-02-02 16:37:27.538 +01:00  INF]  Executed endpoint 'skiservice.Controllers.AssignController.ReAssignServiceOrderToUser (skiservice)'
[2024-02-02 16:37:27.538 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/65bd0c36d6661d80fcd0857d/assign/65bd02fad6661d80fcd0854c - 0 - 200 - application/json;+charset=utf-8 351.9220ms
[2024-02-02 16:37:27.638 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0c36d6661d80fcd0857d application/json 422
[2024-02-02 16:37:27.638 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:37:27.638 +01:00  INF]  Route matched with {action = "UpdateServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] UpdateServiceOrder(System.String, skiservice.Dto.UpdateServiceOrderDto) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:37:27.668 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:27.933 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 265.3996ms.
[2024-02-02 16:37:27.933 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:37:27.934 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice) in 295.6006ms
[2024-02-02 16:37:27.934 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.UpdateServiceOrder (skiservice)'
[2024-02-02 16:37:27.934 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0c36d6661d80fcd0857d application/json 422 - 200 - application/json;+charset=utf-8 296.5914ms
[2024-02-02 16:37:28.012 +01:00  INF]  Request starting HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0c36d6661d80fcd0857d/cancel - 0
[2024-02-02 16:37:28.012 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:37:28.012 +01:00  INF]  Route matched with {action = "CancelServiceOrder", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] CancelServiceOrder(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:37:28.041 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:28.298 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 257.6287ms.
[2024-02-02 16:37:28.299 +01:00  INF]  Executing OkObjectResult, writing value of type 'skiservice.Dto.ServiceOrderDto'.
[2024-02-02 16:37:28.300 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice) in 287.0712ms
[2024-02-02 16:37:28.300 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.CancelServiceOrder (skiservice)'
[2024-02-02 16:37:28.300 +01:00  INF]  Request finished HTTP/1.1 PUT https://localhost:7297/api/serviceorders/65bd0c36d6661d80fcd0857d/cancel - 0 - 200 - application/json;+charset=utf-8 288.2368ms
[2024-02-02 16:37:28.370 +01:00  INF]  Request starting HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0c36d6661d80fcd0857d - -
[2024-02-02 16:37:28.370 +01:00  INF]  Executing endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:37:28.371 +01:00  INF]  Route matched with {action = "DeleteServiceOrderPermanently", controller = "ServiceOrders"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] DeleteServiceOrderPermanently(System.String) on controller skiservice.Controllers.ServiceOrdersController (skiservice).
[2024-02-02 16:37:28.399 +01:00  INF]  Executing action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:28.733 +01:00  INF]  Executed action method skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 334.4873ms.
[2024-02-02 16:37:28.734 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:37:28.734 +01:00  INF]  Executed action skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice) in 363.278ms
[2024-02-02 16:37:28.734 +01:00  INF]  Executed endpoint 'skiservice.Controllers.ServiceOrdersController.DeleteServiceOrderPermanently (skiservice)'
[2024-02-02 16:37:28.735 +01:00  INF]  Request finished HTTP/1.1 DELETE https://localhost:7297/api/serviceorders/65bd0c36d6661d80fcd0857d - - - 200 - text/plain;+charset=utf-8 364.7278ms
[2024-02-02 16:37:28.807 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/create application/json 76
[2024-02-02 16:37:28.808 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:37:28.808 +01:00  INF]  Route matched with {action = "Create", controller = "Users"}. Executing controller action with signature System.Threading.Tasks.Task`1[Microsoft.AspNetCore.Mvc.IActionResult] Create(skiservice.Dto.CreateUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:37:28.835 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.Create (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:28.838 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.Create (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.0431ms.
[2024-02-02 16:37:28.838 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:37:28.838 +01:00  INF]  Executed action skiservice.Controllers.UsersController.Create (skiservice) in 30.321ms
[2024-02-02 16:37:28.838 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.Create (skiservice)'
[2024-02-02 16:37:28.839 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/create application/json 76 - 200 - text/plain;+charset=utf-8 31.4805ms
[2024-02-02 16:37:28.914 +01:00  INF]  Request starting HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37
[2024-02-02 16:37:28.915 +01:00  INF]  Executing endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:37:28.915 +01:00  INF]  Route matched with {action = "UnlockUser", controller = "Users"}. Executing controller action with signature Microsoft.AspNetCore.Mvc.IActionResult UnlockUser(skiservice.Dto.UnlockUserDto) on controller skiservice.Controllers.UsersController (skiservice).
[2024-02-02 16:37:28.941 +01:00  INF]  Executing action method skiservice.Controllers.UsersController.UnlockUser (skiservice) - Validation state: "Valid"
[2024-02-02 16:37:28.944 +01:00  INF]  Executed action method skiservice.Controllers.UsersController.UnlockUser (skiservice), returned result Microsoft.AspNetCore.Mvc.OkObjectResult in 2.4167ms.
[2024-02-02 16:37:28.944 +01:00  INF]  Executing OkObjectResult, writing value of type 'System.String'.
[2024-02-02 16:37:28.945 +01:00  INF]  Executed action skiservice.Controllers.UsersController.UnlockUser (skiservice) in 30.013ms
[2024-02-02 16:37:28.945 +01:00  INF]  Executed endpoint 'skiservice.Controllers.UsersController.UnlockUser (skiservice)'
[2024-02-02 16:37:28.946 +01:00  INF]  Request finished HTTP/1.1 POST https://localhost:7297/api/users/unlock application/json 37 - 200 - text/plain;+charset=utf-8 31.5215ms
[2024-02-02 20:41:09.389 +01:00  INF]  User profile is available. Using 'C:\Users\robin\AppData\Local\ASP.NET\DataProtection-Keys' as key repository and Windows DPAPI to encrypt keys at rest.
[2024-02-02 20:41:09.623 +01:00  INF]  Now listening on: https://localhost:7297
[2024-02-02 20:41:09.623 +01:00  INF]  Now listening on: http://localhost:5039
[2024-02-02 20:41:09.624 +01:00  INF]  Application started. Press Ctrl+C to shut down.
[2024-02-02 20:41:09.624 +01:00  INF]  Hosting environment: Development
[2024-02-02 20:41:09.624 +01:00  INF]  Content root path: C:\GitHub\Modul165\SkiServiceApi_MongoDB\SkiServiceApi
[2024-02-02 20:41:14.006 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/index.html - -
[2024-02-02 20:41:14.317 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/index.html - - - 200 - text/html;charset=utf-8 317.5856ms
[2024-02-02 20:41:14.328 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_vs/browserLink - -
[2024-02-02 20:41:14.328 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - -
[2024-02-02 20:41:14.334 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_framework/aspnetcore-browser-refresh.js - - - 200 13756 application/javascript;+charset=utf-8 5.7252ms
[2024-02-02 20:41:14.746 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/_vs/browserLink - - - 200 - text/javascript;+charset=UTF-8 417.8871ms
[2024-02-02 20:41:14.834 +01:00  INF]  Request starting HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - -
[2024-02-02 20:41:14.973 +01:00  INF]  Request finished HTTP/2 GET https://localhost:7297/swagger/v1/swagger.json - - - 200 - application/json;charset=utf-8 138.7480ms
